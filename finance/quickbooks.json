{
  "basePath": "/elements/api-v2",
  "paths": {
    "/attachments": {
      "get": {
        "summary": "Search for attachments.",
        "operationId": "getAttachments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Attachments"
        ]
      }
    },
    "/attachments/{id}": {
      "get": {
        "summary": "Retrieve an attachment associated with a given ID from the Finance system. Specifying an attachment with an associated ID that does not exist will result in an error response.",
        "operationId": "getAttachmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the attachment credit to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Attachments"
        ]
      }
    },
    "/bill-payments": {
      "post": {
        "summary": "Create an BillPayment in the Finance system.  Bill creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createBillPayment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BillPayment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/BillPaymentPost"
            },
            "in": "body",
            "name": "body",
            "description": "The BillPayment object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Invoice' model are those required to create a new invoice",
            "required": true
          }
        ],
        "tags": [
          "Bill Payments"
        ]
      },
      "get": {
        "summary": "Find Bill Payments in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Invoices last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Invoices are returned.",
        "operationId": "getBillPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BillPaymentGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all invoices are returned as defined by the paging",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bill Payments"
        ]
      }
    },
    "/bill-payments/{id}": {
      "get": {
        "summary": "Retrieve an BillPayment associated with a given ID from the Finance system. Specifying an Invoice with an associated ID that does not exist will result in an error response.",
        "operationId": "getBillPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BillPayment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Bill Payment to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Bill Payments"
        ]
      },
      "delete": {
        "summary": "Delete a BillPayment associated with a given ID from the Finance system. Specifying an Invoice associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteBillPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Bill Payment to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Bill Payments"
        ]
      },
      "put": {
        "summary": "Update a BillPayment given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PUT HTTP verb to update the entire object.",
        "operationId": "replaceBillPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BillPayment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Bill to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/BillPaymentPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The Bill object, with those fields that are to be updated.YOU Must supply the entire object that was retrieved via a GET in order to update. Only Writeable fields must be set.",
            "required": true
          }
        ],
        "tags": [
          "Bill Payments"
        ]
      }
    },
    "/bills": {
      "post": {
        "summary": "Create an Bill in the Finance system.  Bill creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createBill",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/BillPost"
            },
            "in": "body",
            "name": "body",
            "description": "The Bill object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Invoice' model are those required to create a new invoice",
            "required": true
          }
        ],
        "tags": [
          "Bills"
        ]
      },
      "get": {
        "summary": "Find Bills in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Invoices last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Invoices are returned.",
        "operationId": "getBills",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BillGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all invoices are returned as defined by the paging",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bills"
        ]
      }
    },
    "/bills/{id}": {
      "get": {
        "summary": "Retrieve an Bill associated with a given ID from the Finance system. Specifying an Invoice with an associated ID that does not exist will result in an error response.",
        "operationId": "getBillById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the bill to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Bills"
        ]
      },
      "delete": {
        "summary": "Delete a Bill associated with a given ID from the Finance system. Specifying an Invoice associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteBillById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the bill to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Bills"
        ]
      },
      "put": {
        "summary": "Update a Bill given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Invoice object will be updated, and those fields not provided will be left alone.  Updating an Invoice with a specified ID that does not exist will result in an error response.",
        "operationId": "replaceBillById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Bill to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/BillPut"
            },
            "in": "body",
            "name": "body",
            "description": "The Bill object, with those fields that are to be updated.YOU Must supply the entire object that was retrieved via a GET in order to update. Only Writeable fields must be set.",
            "required": true
          }
        ],
        "tags": [
          "Bills"
        ]
      }
    },
    "/budgets": {
      "get": {
        "summary": "Search for budgets",
        "operationId": "getBudgets",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/budgetsGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for refund receipts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all refund receipts are returned in a paginated fashion.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Budgets"
        ]
      }
    },
    "/budgets/{id}": {
      "get": {
        "summary": "Retrieve a budget",
        "operationId": "getBudgetById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/budgetObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the budget to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Budgets"
        ]
      }
    },
    "/bulk/download": {
      "post": {
        "summary": "Create a new bulk download job (asynchronous)",
        "operationId": "createBulkDownload",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/bulkDownloadRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/jobs": {
      "get": {
        "operationId": "getBulkJobs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkJobList"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Fetch all the bulk jobs for an instance",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/query": {
      "post": {
        "operationId": "createBulkQuery",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "lastRunDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/cancel": {
      "put": {
        "operationId": "replaceBulkCancel",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to cancel.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Cancel an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/errors": {
      "get": {
        "operationId": "getBulkErrors",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its errors.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the errors of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/status": {
      "get": {
        "operationId": "getBulkStatus",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its status.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the status of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/{objectName}": {
      "get": {
        "operationId": "getBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the results of an asynchronous bulk query.",
        "tags": [
          "Bulk"
        ],
        "produces": [
          "text/csv",
          "application/json",
          "application/jsonl"
        ]
      }
    },
    "/bulk/{objectName}": {
      "post": {
        "operationId": "createBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The name of the object for which data needs to be uploaded.",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload, path or format, ex: {\"path\" :&lt;path for the sub resource&gt;, \"format\": &lt;json/csv&gt;, \"callback-payload\":&lt;json&gt;}. path - is passed to the endpoint for bulk loading the data into a nested object. Optional JSON Metadata that contains identifierFieldName, action, listId or campaignId. The identifierField name is used for upserts and the optional fields like listId or campaignId. Example: {\"listId\":\"1014\",\"action\":\"upsert\"}. If the Upload format is JSON pass metadata as {\"format\":\"json\"}. callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          },
          {
            "description": "The file of objects to bulk load. If the JSON file upload, each JSON record should be in a single line",
            "in": "formData",
            "name": "file",
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkUploadResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Upload a file of objects to be bulk uploaded to the provider.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/changes": {
      "get": {
        "summary": "Find changed entity records in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for products last modified on or after '2015-12-23T10:00:00.000-07:00', the search expression will be where query would be: changedSince='2015-12-23T10:00:00.000-07:00' and value for  the entities parameter will be 'products'",
        "operationId": "getChanges",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ChangedData"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. The valid and required query parameter is changedSince. An example where query would be: changedSince='2015-12-23T10:00:00.000-07:00'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "entities",
            "description": "The comma separated list of entity names",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Changes"
        ]
      }
    },
    "/classes": {
      "get": {
        "summary": "Find Classes in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for classes last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Classes are returned.",
        "operationId": "getClasses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ClassGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Classes"
        ]
      }
    },
    "/classes/{id}": {
      "get": {
        "summary": "Retrieve a defined Class or Category associated with a given ID from the Finance system. Specifying a class or category with an associated ID that does not exist will result in an error response.",
        "operationId": "getClasseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Class"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the class or category to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Classes"
        ]
      }
    },
    "/companies": {
      "get": {
        "summary": "Search for companies.",
        "operationId": "getCompanies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/companies"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Companies"
        ]
      }
    },
    "/company-info": {
      "get": {
        "summary": "Search for company-info.",
        "operationId": "getCompanyInfo",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/companyinfoa"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Company Info"
        ]
      }
    },
    "/credit-memos": {
      "post": {
        "summary": "Create an Credit Memo in the Finance system.  Bill creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createCreditMemo",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditMemo"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/CreditMemoPost"
            },
            "in": "body",
            "name": "body",
            "description": "The CreditMemo object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Invoice' model are those required to create a new invoice",
            "required": true
          }
        ],
        "tags": [
          "Credit Memos"
        ]
      },
      "get": {
        "summary": "Find Credit Memos in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Invoices last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Invoices are returned.",
        "operationId": "getCreditMemos",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditMemoGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all invoices are returned as defined by the paging",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Credit Memos"
        ]
      }
    },
    "/credit-memos/{id}": {
      "get": {
        "summary": "Retrieve an Credit Memo associated with a given ID from the Finance system. Specifying an Invoice with an associated ID that does not exist will result in an error response.",
        "operationId": "getCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditMemo"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Credit Memo to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Credit Memos"
        ]
      },
      "delete": {
        "summary": "Delete a Credit Memo associated with a given ID from the Finance system.",
        "operationId": "deleteCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Credit Memo to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Credit Memos"
        ]
      },
      "put": {
        "summary": "Update a Full Credit Memo given a set of partial attributes associated with a given ID in the Finance system.",
        "operationId": "replaceCreditMemoById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditMemo"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the Credit Memo to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/CreditMemoPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The Credit Memo object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Credit Memos"
        ]
      }
    },
    "/credit-terms": {
      "post": {
        "summary": "Create a Credit Term in the Finance system.",
        "operationId": "createCreditTerm",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditTerm"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/CreditTermPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The CreditTerms object to be created.<br>With the exception of the 'id' field",
            "required": true
          }
        ],
        "tags": [
          "Credit Terms"
        ]
      },
      "get": {
        "summary": "Find Credit Terms in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for credit terms last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Credit Terms are returned.",
        "operationId": "getCreditTerms",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditTermGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Credit Terms"
        ]
      }
    },
    "/credit-terms/{id}": {
      "get": {
        "summary": "Retrieve a defined Credit Term Lookup associated with a given ID from the Finance system. Specifying a credit term with an associated ID that does not exist will result in an error response.",
        "operationId": "getCreditTermById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditTerm"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the credit term to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Credit Terms"
        ]
      },
      "delete": {
        "summary": "Deactivate a defined Credit Term Lookup associated with a given ID from the Finance system. Specifying a credit term with an associated ID that does not exist will result in an error response.",
        "operationId": "deleteCreditTermById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the credit term to deactivate from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Credit Terms"
        ]
      },
      "put": {
        "summary": "Update a defined Credit Term Lookup associated with a given ID from the Finance system. Specifying a credit term with an associated ID that does not exist will result in an error response.",
        "operationId": "replaceCreditTermById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CreditTerm"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the credit term to retrieve from the finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/CreditTermPutReq"
            },
            "in": "body",
            "name": "body",
            "description": "The CreditTerms object to be created.<br>With the exception of the 'id' field",
            "required": true
          }
        ],
        "tags": [
          "Credit Terms"
        ]
      }
    },
    "/currencies": {
      "post": {
        "summary": "Create an currency",
        "operationId": "createCurrency",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/currencyObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/currencyCreateObject"
            },
            "in": "body",
            "name": "The Currency Payload",
            "description": "The Company Currency",
            "required": true
          }
        ],
        "tags": [
          "Currencies"
        ]
      },
      "get": {
        "summary": "Search for currencies",
        "operationId": "getCurrencies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CurrenciesGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. Only code field is searchable. For example, to search for <i>where=code='INR'</i>.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by txnDate ascending use 'id asc' Sortable Fields are id",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Currencies"
        ]
      }
    },
    "/currencies/{id}": {
      "patch": {
        "summary": "Update a Currency",
        "operationId": "updateCurrencyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/currencyObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the currency to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/currencyCreateObject"
            },
            "in": "body",
            "name": "body",
            "description": "The currency object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Currencies"
        ]
      },
      "get": {
        "summary": "Retrieve a Currency",
        "operationId": "getCurrencyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/currencyObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the currency to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Currencies"
        ]
      },
      "delete": {
        "summary": "Delete a currency",
        "operationId": "deleteCurrencyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the currency to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Currencies"
        ]
      }
    },
    "/customers": {
      "post": {
        "summary": "Create a Customer in the Finance system.  Customer creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/CustomerPost"
            },
            "in": "body",
            "name": "body",
            "description": "The Customer object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Customer' model are those required to create a new customer",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "summary": "Find Customers in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Customers last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Customers are returned.",
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/CustomerGetAllResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all customers are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/customers/{id}": {
      "patch": {
        "summary": "Update a Customer given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Customer object will be updated, and those fields not provided will be left alone.  Updating an Customer with a specified ID that does not exist will result in an error response.",
        "operationId": "updateCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the customer to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/CustomerPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The customer object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "summary": "Retrieve a Customer associated with a given ID from the Finance system. Specifying a Customer with an associated ID that does not exist will result in an error response.",
        "operationId": "getCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Customer"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the customer to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "delete": {
        "summary": "Delete a customer associated with a given ID from the Finance system. This marks the customer as inactive.  Specifying a Customer associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the customer to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/departments": {
      "post": {
        "summary": "Create a Department in the Finance system.  ",
        "operationId": "createDepartment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Department"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/DepartmentReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Department object to be created.<br>With the exception of the 'id' field.",
            "required": true
          }
        ],
        "tags": [
          "Departments"
        ]
      },
      "get": {
        "summary": "Find Departments in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword.",
        "operationId": "getDepartments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/DepartmentGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Departments"
        ]
      }
    },
    "/departments/{id}": {
      "patch": {
        "summary": "Update a Department given a set of partial attributes associated with a given ID in the Finance system. You must supply a syncToken in order to perform a patch.",
        "operationId": "updateDepartmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Department"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the department to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/DepartmentReq"
            },
            "in": "body",
            "name": "body",
            "description": "The department object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Departments"
        ]
      },
      "get": {
        "summary": "Retrieve a Department associated with a given ID from the Finance system. ",
        "operationId": "getDepartmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Department"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the department to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Departments"
        ]
      },
      "delete": {
        "summary": "Delete a department associated with a given ID from the Finance system. This marks the department as inactive.",
        "operationId": "deleteDepartmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the department to delete in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Departments"
        ]
      }
    },
    "/deposits": {
      "post": {
        "summary": "Create an Deposit",
        "operationId": "createDeposit",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/depositsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/depositCreateObject"
            },
            "in": "body",
            "name": "body",
            "description": "The deposit",
            "required": true
          }
        ],
        "tags": [
          "Deposits"
        ]
      },
      "get": {
        "summary": "Search for deposits",
        "operationId": "getDeposits",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/DepositsGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for txnDate, the search expression will be <i>txnDate>='2015-12-15T00:00:00-06:00'</i>. Filterable fields are : txnDate.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by txnDate ascending use 'txnDate asc'. Sortable Fields are txnDate, id.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Deposits"
        ]
      }
    },
    "/deposits/{id}": {
      "patch": {
        "summary": "Update a Deposit",
        "operationId": "updateDepositById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/depositsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deposit to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/depositsObject"
            },
            "in": "body",
            "name": "body",
            "description": "The deposit object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Deposits"
        ]
      },
      "get": {
        "summary": "Retrieve a Deposit",
        "operationId": "getDepositById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/depositsObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the deposit to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Deposits"
        ]
      },
      "delete": {
        "summary": "Delete a Deposit",
        "operationId": "deleteDepositById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the deposit to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Deposits"
        ]
      }
    },
    "/employees": {
      "post": {
        "summary": "Create an Employee in the Finance system.  Employee creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createEmployee",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/EmployeePost"
            },
            "in": "body",
            "name": "body",
            "description": "The Employee object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Employee' model are those required to create a new employee",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ]
      },
      "get": {
        "summary": "Find Employees in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for employees last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Employees are returned.",
        "operationId": "getEmployees",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/EmployeeGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all employees are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Employees"
        ]
      }
    },
    "/employees/{id}": {
      "patch": {
        "summary": "Update an Employee given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Employee object will be updated, and those fields not provided will be left alone.  Updating an Employee with a specified ID that does not exist will result in an error response.",
        "operationId": "updateEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the employee to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/EmployeePatch"
            },
            "in": "body",
            "name": "body",
            "description": "The employee object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ]
      },
      "get": {
        "summary": "Retrieve an Employee associated with a given ID from the Finance system. Specifying an Employee with an associated ID that does not exist will result in an error response.",
        "operationId": "getEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Employee"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the employee to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ]
      },
      "delete": {
        "summary": "Delete an Employee associated with a given ID from the Finance system. This marks the employee as inactive.  Specifying an Employee associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteEmployeeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the employee to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Employees"
        ]
      }
    },
    "/entitlements": {
      "get": {
        "summary": "List all entitlements",
        "operationId": "getEntitlements",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/entitlements"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Entitlements"
        ]
      }
    },
    "/estimates": {
      "post": {
        "summary": "Create an estimate in the Finance system. Estimate creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createEstimate",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Estimate"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/EstimatePOST"
            },
            "in": "body",
            "name": "body",
            "description": "The estimate object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Estimate' model are those required to create a new estimate",
            "required": true
          }
        ],
        "tags": [
          "Estimates"
        ]
      },
      "get": {
        "summary": "Find estimates in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for estimates last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all estimates are returned.",
        "operationId": "getEstimates",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Estimate"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all estimates are returned as defined by the paging",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Estimates"
        ]
      }
    },
    "/estimates/{id}": {
      "patch": {
        "summary": "Update an estimate given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the estimate object will be updated, and those fields not provided will be left alone.  Updating an estimate with a specified ID that does not exist will result in an error response.",
        "operationId": "updateEstimateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Estimate"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the estimate date in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/Estimate"
            },
            "in": "body",
            "name": "body",
            "description": "The estimate object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Estimates"
        ]
      },
      "get": {
        "summary": "Retrieve an estimate associated with a given ID from the Finance system. Specifying an estimate with an associated ID that does not exist will result in an error response.",
        "operationId": "getEstimateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Estimate"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the estimate to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Estimates"
        ]
      },
      "delete": {
        "summary": "Delete an estimate associated with a given ID from the Finance system. Specifying an estimate associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteEstimateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the estimate to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Estimates"
        ]
      }
    },
    "/exchange-rates/{currencyCode}": {
      "get": {
        "summary": "Retrieve exchange-rates",
        "operationId": "getExchangeRateByCurrencyCode",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/exchangeRates"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "currencyCode",
            "description": "The source currency code",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "asofdate",
            "description": "The as of date in format yyyy-mm-dd",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Exchange Rates"
        ]
      },
      "put": {
        "summary": "Update an exchange-rate",
        "operationId": "replaceExchangeRateByCurrencyCode",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/exchangeRatesPutResp"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "currencyCode",
            "description": "The source currency code",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/exchangeRatesPutReq"
            },
            "in": "body",
            "name": "body",
            "description": "The exchange-rate object",
            "required": true
          }
        ],
        "tags": [
          "Exchange Rates"
        ]
      }
    },
    "/invoices": {
      "post": {
        "summary": "Create an Invoice in the Finance system.  Invoice creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/InvoicePost"
            },
            "in": "body",
            "name": "body",
            "description": "The Invoice object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Invoice' model are those required to create a new invoice",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "get": {
        "summary": "Find Invoices in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Invoices last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Invoices are returned.",
        "operationId": "getInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/InvoiceGetAllResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all invoices are returned as defined by the paging",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/invoices/{id}": {
      "patch": {
        "summary": "Update an Invoice given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Invoice object will be updated, and those fields not provided will be left alone.  Updating an Invoice with a specified ID that does not exist will result in an error response.",
        "operationId": "updateInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the invoice to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/InvoicePatch"
            },
            "in": "body",
            "name": "body",
            "description": "The invoice object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "get": {
        "summary": "Retrieve an Invoice associated with a given ID from the Finance system. Specifying an Invoice with an associated ID that does not exist will result in an error response.",
        "operationId": "getInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the invoice to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "delete": {
        "summary": "Delete an Invoice associated with a given ID from the Finance system. Specifying an Invoice associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the invoice to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/invoices/{id}/void": {
      "patch": {
        "summary": "Void an Invoice with a given ID in the Finance system.",
        "operationId": "updateInvoicesVoid",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Invoice"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the invoice to void in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/journal-codes": {
      "post": {
        "summary": "Create a Journal Code in the Finance system (Only supported in France Locale on Quickbooks Online).",
        "operationId": "createJournalCode",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalCode"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/JournalCodePostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The JournalCodes object to be created.<br>With the exception of the 'id' field",
            "required": true
          }
        ],
        "tags": [
          "Journal Codes"
        ]
      },
      "get": {
        "summary": "Find Journal Codes (Only supported in France Locale on Quickbooks Online) in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Journal Codes with name 'VT', the search expression will be where=Name>='VT'. When this parameter is omitted, all Journal Codes are returned .",
        "operationId": "getJournalCodes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalCodeGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Journal Codes with name 'VT', the search expression will be where=Name>='VT'. When this parameter is omitted, all Journal Codes are returned.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by Name ascending use 'Name asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Journal Codes"
        ]
      }
    },
    "/journal-codes/{id}": {
      "get": {
        "summary": "Retrieve a defined Journal Code (Only supported in France Locale on Quickbooks Online) Lookup associated with a given ID from the Finance system. Specifying a Journal Code with an associated ID that does not exist will result in an error response",
        "operationId": "getJournalCodeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalCode"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Journal Code to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Journal Codes"
        ]
      },
      "put": {
        "summary": "Retrieve a defined Journal Code (Only supported in France Locale on Quickbooks Online) Lookup associated with a given ID from the Finance system. Specifying a Journal Code with an associated ID that does not exist will result in an error response",
        "operationId": "replaceJournalCodeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalCode"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Journal Code to retrieve from the finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/JournalCodePutReq"
            },
            "in": "body",
            "name": "body",
            "description": "The JournalCodes object to be created.<br>With the exception of the 'id' field",
            "required": true
          }
        ],
        "tags": [
          "Journal Codes"
        ]
      }
    },
    "/journal-entries": {
      "post": {
        "summary": "Create a Journal Entry in the Finance system.  Journal Entry creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createJournalEntry",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/JournalEntryPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Journal Entry object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'JournalEntry' model are those required to create a new journal entry",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "get": {
        "summary": "Find Journal Entries in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Ledger Accounts last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Ledger Accounts are returned.",
        "operationId": "getJournalEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalEntryGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      }
    },
    "/journal-entries/{id}": {
      "patch": {
        "summary": "Update a Journal Entry given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Customer object will be updated, and those fields not provided will be left alone.  Updating an Customer with a specified ID that does not exist will result in an error response.",
        "operationId": "updateJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the journal entry to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/JournalEntryPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The journal entry object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "get": {
        "summary": "Retrieve a Journal Entry associated with a given ID from the Finance system. Specifying a Journal Entry with an associated ID that does not exist will result in an error response.",
        "operationId": "getJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/JournalEntry"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the journal entry to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "delete": {
        "summary": "Delete a Journal Entry associated with a given ID from the Finance system. This deletes the Journal Entry.  Specifying a Journal Entry associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the journal entry to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      }
    },
    "/ledger-accounts": {
      "post": {
        "summary": "Create a Account in the Finance system.",
        "operationId": "createLedgerAccount",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/LedgerAccount"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/LedgerAccountPost"
            },
            "in": "body",
            "name": "body",
            "description": "The TaxCode object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Product' model are those required to create a new product",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "get": {
        "summary": "Find Ledger Accounts in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Ledger Accounts last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Ledger Accounts are returned.",
        "operationId": "getLedgerAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/LedgerAccountGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/ledger-accounts/{id}": {
      "get": {
        "summary": "Retrieve a Ledger Account associated with a given ID from the Finance system. Specifying a Ledger Account method with an associated ID that does not exist will result in an error response.",
        "operationId": "getLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/LedgerAccount"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the ledger account to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "delete": {
        "summary": "Deactivate a Ledger Account associated with a given ID from the Finance system. Specifying a Ledger Account method with an associated ID that does not exist will result in an error response.",
        "operationId": "deleteLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the ledger account to deactivate from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/objects": {
      "get": {
        "operationId": "getObjects",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the available objects.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/docs": {
      "get": {
        "operationId": "getObjectsObjectNameDocs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Include discovery metadata in definitions",
            "in": "query",
            "name": "discovery",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optionally resolve swagger references for an inline object definition",
            "in": "query",
            "name": "resolveReferences",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Include only OpenAPI / Swagger properties in definitions",
            "in": "query",
            "name": "basic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
            "in": "query",
            "name": "version",
            "required": false,
            "default": "-1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/swaggerDocs"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get swagger docs for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/metadata": {
      "get": {
        "operationId": "getObjectsObjectNameMetadata",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectsMetadata"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the field for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/payment-methods": {
      "post": {
        "summary": "Create a Payment Method in the Finance system. Payment Method creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createPaymentMethod",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PaymentMethodPost"
            },
            "in": "body",
            "name": "body",
            "description": "The Payment Method object to be created.",
            "required": true
          }
        ],
        "tags": [
          "Payment Methods"
        ]
      },
      "get": {
        "summary": "Find Payment Methods in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for payments last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all payments are returned.",
        "operationId": "getPaymentMethods",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PaymentMethodGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "start",
            "description": "The start page for pagination, which defaults to 1 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payment Methods"
        ]
      }
    },
    "/payment-methods/{id}": {
      "get": {
        "summary": "Retrieve a defined Payment Method associated with a given ID from the Finance system. Specifying a payment method with an associated ID that does not exist will result in an error response.",
        "operationId": "getPaymentMethodById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PaymentMethod"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the payment method to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payment Methods"
        ]
      },
      "delete": {
        "summary": "Deactivate a defined Payment Method associated with a given ID from the Finance system. Specifying a payment method with an associated ID that does not exist will result in an error response.",
        "operationId": "deletePaymentMethodById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the payment method to deactivate from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payment Methods"
        ]
      }
    },
    "/payments": {
      "post": {
        "summary": "Create or initiate a payment in the Finance system.  Payment creation/initiation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createPayment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PaymentPost"
            },
            "in": "body",
            "name": "body",
            "description": "The Payment object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Payment' model are those required to create a new payment",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "get": {
        "summary": "Find Payments in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for payments last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all payments are returned.",
        "operationId": "getPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PaymentGetAllResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all payments are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/payments/{id}": {
      "patch": {
        "summary": "Update a Payment given a set of partial payment attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the payment object will be updated, and those fields not provided will be left alone.  Updating a payment with a specified ID that does not exist will result in an error response.",
        "operationId": "updatePaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PaymentPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The payment object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "get": {
        "summary": "Retrieve a defined Payment associated with a given ID from the Finance system. Specifying a payment with an associated ID that does not exist will result in an error response.",
        "operationId": "getPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the payment to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "delete": {
        "summary": "Delete a payment associated with a given ID from the Finance system. Specifying a payment associated with a given ID that does not exist will result in an error message.",
        "operationId": "deletePaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/payments/{id}/void": {
      "patch": {
        "summary": "Void a Payment with a given ID in the Finance system.",
        "operationId": "updatePaymentsVoid",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the payment to void in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Pong"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.",
        "tags": [
          "Ping"
        ]
      }
    },
    "/preferences": {
      "get": {
        "summary": "List all preferences",
        "operationId": "getPreferences",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/preferencesListObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Default to 200 if not provided. Maximum of 2000",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Preferences"
        ]
      }
    },
    "/preferences/{id}": {
      "patch": {
        "summary": "Update a preferences",
        "operationId": "updatePreferenceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/preferences"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The preference ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/preferencesPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Preferences"
        ]
      }
    },
    "/products": {
      "post": {
        "summary": "Create a Product in the Finance system.  Product creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createProduct",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ProductPost"
            },
            "in": "body",
            "name": "body",
            "description": "The Product object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Product' model are those required to create a new product",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "get": {
        "summary": "Find Products or Services in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Products or Services last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Products or Services are returned.",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ProductGetAllResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{id}": {
      "patch": {
        "summary": "Update a Product given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Product object will be updated, and those fields not provided will be left alone.  Updating an Product with a specified ID that does not exist will result in an error response.",
        "operationId": "updateProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ProductPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The product object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "get": {
        "summary": "Retrieve a defined Product or Service associated with a given ID from the Finance system. Specifying a Product or Service with an associated ID that does not exist will result in an error response.",
        "operationId": "getProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Product"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product or service to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "summary": "Delete a product associated with a given ID from the Finance system. This marks the product as inactive.  Specifying a Product associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the product to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/purchase-orders": {
      "post": {
        "summary": "Create a Purchase Order in the Finance system.  Purchase Order creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createPurchaseOrder",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PurchaseOrderPost"
            },
            "in": "body",
            "name": "body",
            "description": "The PurchaseOrder object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'PurchaseOrder' model are those required to create a new purchase order",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      },
      "get": {
        "summary": "Find Purchase Orders in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Purchase Orders last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Purchase Orders are returned.",
        "operationId": "getPurchaseOrders",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseOrderGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all purchase orders are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      }
    },
    "/purchase-orders/{id}": {
      "patch": {
        "summary": "Update a Purchase Order given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the payment object will be updated, and those fields not provided will be left alone.  Updating a Purchase Order with a specified ID that does not exist will result in an error response.",
        "operationId": "updatePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the purchase order to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PurchaseOrderPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The PurchaseOrder object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      },
      "get": {
        "summary": "Retrieve a defined Purchase Order associated with a given ID from the Finance system. Specifying a Purchase Order with an associated ID that does not exist will result in an error response.",
        "operationId": "getPurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseOrder"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the purchase order to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      },
      "delete": {
        "summary": "Delete a Purchase Order associated with a given ID from the Finance system. Specifying a Purchase Order associated with a given ID that does not exist will result in an error message.",
        "operationId": "deletePurchaseOrderById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the purchase order to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Orders"
        ]
      }
    },
    "/purchases": {
      "post": {
        "summary": "Create a Purchase in the Finance system.  ",
        "operationId": "createPurchase",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PurchaseReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Purchase object to be created.<br>With the exception of the 'id' field.",
            "required": true
          }
        ],
        "tags": [
          "Purchases"
        ]
      },
      "get": {
        "summary": "Find Purchases in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword.",
        "operationId": "getPurchases",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/PurchaseGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchases"
        ]
      }
    },
    "/purchases/{id}": {
      "patch": {
        "summary": "Update a purchase given a set of partial attributes associated with a given ID in the Finance system. You must supply a syncToken in order to perform a patch.",
        "operationId": "updatePurchaseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the purchase to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/PurchaseReq"
            },
            "in": "body",
            "name": "body",
            "description": "The purchase object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Purchases"
        ]
      },
      "get": {
        "summary": "Retrieve a purchase associated with a given ID from the Finance system. ",
        "operationId": "getPurchaseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Purchase"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the purchase to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchases"
        ]
      },
      "delete": {
        "summary": "Delete a purchase associated with a given ID from the Finance system. This marks the department as inactive.",
        "operationId": "deletePurchaseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the purchase to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchases"
        ]
      }
    },
    "/refund-receipts": {
      "post": {
        "summary": "Create a refund receipt",
        "operationId": "createRefundReceipt",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/RefundReceipt"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/RefundReceiptPost"
            },
            "in": "body",
            "name": "refundReceipt",
            "description": "The refund receipt",
            "required": true
          }
        ],
        "tags": [
          "Refund Receipts"
        ]
      },
      "get": {
        "summary": "Search for refund receipts",
        "operationId": "getRefundReceipts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/RefundReceiptGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for refund receipts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all refund receipts are returned in a paginated fashion.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Refund Receipts"
        ]
      }
    },
    "/refund-receipts/{refundReceiptId}": {
      "patch": {
        "summary": "Update a refund receipt",
        "operationId": "updateRefundReceiptByRefundReceiptId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/RefundReceipt"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "refundReceiptId",
            "description": "The refund receipt ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/RefundReceiptPatch"
            },
            "in": "body",
            "name": "refundReceipt",
            "description": "The refund receipt",
            "required": true
          }
        ],
        "tags": [
          "Refund Receipts"
        ]
      },
      "get": {
        "summary": "Retrieve a refund receipt",
        "operationId": "getRefundReceiptByRefundReceiptId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/RefundReceipt"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "refundReceiptId",
            "description": "The refund receipt ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Refund Receipts"
        ]
      },
      "delete": {
        "summary": "Delete a refund receipt",
        "operationId": "deleteRefundReceiptByRefundReceiptId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "refundReceiptId",
            "description": "The refund receipt ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Refund Receipts"
        ]
      }
    },
    "/reports/metadata": {
      "get": {
        "summary": "Retrieve the metadata for all the Reports available in the Finance system.",
        "operationId": "getReportsMetadata",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ReportMetadata"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/reports/{id}": {
      "get": {
        "summary": "Retrieve the report data for the report with the given name from the Finance System. The provided CEQL search expression, or the where clause is used to filter/constrain the data retrieved by the report.",
        "operationId": "getReportById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Report"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID or name of the report to retrieve in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. The superset of the supported filter fields is described below. Please note, that different reports may utilize some of the following fields, but not others. <br> - <b>dateRange</b> indicating the date range to use to filter the report. See your specific resource for valid values for this parameter: https://developer.intuit.com/docs/api/accounting Report resources > query parameters > date_macro <br> -<b>createdDateRange</b>indicating the date range to use to filter the report by create date.<br> - <b>updatedDateRange</b> indicating the date range to use to filter the report by updated date.<br> -   The supported values for date ranges are - <i>Today, Yesterday This Week, This Week-to-date, Last Week, Last Week-to-date, Next Week, Next 4 Weeks, This Month, This Month-to-date, Last Month, Last Month-to-date, Next Month, This Fiscal Quarter, This Fiscal Quarter-to-date, Last Fiscal Quarter, Last Fiscal Quarter-to-date, Next Fiscal Quarter, This Fiscal Year, This Fiscal Year-to-date, Last Fiscal Year, Last Fiscal, Year-to-date, Next Fiscal Year</i>. The default is This Fiscal Year-to-date.<br> - <b>startDate</b> indicating the start date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>endDate</b> indicating the end date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>startDueDate</b> indicating the start date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>endDueDate</b> indicating the end date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>startCreatedDate</b> indicating the start created date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>endCreatedDate</b> indicating the end created date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>startUpdatedDate</b> indicating the start created date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>endUpdatedDate</b> indicating the end created date of a period for the report. The date format is 'YYYY-MM-DD', e.g., '2015-10-03'<br> - <b>reportDate</B> provided with the date format of <i>YYYY-MM-DD</i>. The default value is today's date.<br> - <b>accountingMethod</b> with supported values of Cash or Accrual. The default is that defined in the company preferences in Quickbooks.<br> - <b>accountType</b> indicating the account type to use for the filter.<br> - <b>sourceAccountType</b> indicating the source account type to use for the filter.<br> -    The supported values for account types, including the source account type, are - Bank, AccountsReceivable, OtherCurrentAsset, FixedAsset, OtherAsset, AccountsPayable, CreditCard, OtherCurrentLiability, LongTermLiability, Equity, Income, CostOfGoodsSold, Expense, OtherIncome, OtherExpense, NonPosting. The default is to include all account types in the report.<br> - <b>agingMethod</b> with supported values of Report_date or Current. The default is Current.<br> - <b>agingPeriod</b> indicating the number of days in the aging period. The default is 30.<br> - <b>numberOfPeriods</b> indicating the number of periods to be shown in the report. The default is 4.<br> - <b>arPaid</b> with supported values of All, Paid, Unpaid. The default is Unpaid.<br> - <b>apPaid</b> with supported values of All, Paid, Unpaid. The default is Unpaid.<br> - <b>pastDue</b> indicating to number of past due days to use for the filter.<br> - <b>shipVia</b> indicating the name of the shipping method as specified in the invoice.<br> - <b>paymentMethod</b> indicating the name of the payment method used, with supported values of Cash, Check, Dinners Club, American Express, Discover, MasterCard, Visa.<br> - <b>columns</b> a list of comma separated column names in an 'in ()' clause, indicating the column types to be shown in the report.<br> - <b>orderBy</b> which specifies the column for the sort order for the results. The default is tx_date.<br> - <b>sortOrder</b> which specifies the sort order for the results. The supported values are 'ascend' and 'descend'. The default is ascend.<br> - <b>summarizeBy</b> which specifies a criteria by which report columns are organized. The supported values are <i>Total, Month, Week, Days, Quarter, Year, Customers, Vendors, Classes, Departments, Employees, ProductsAndServices</i>. The default value is Total.<br> - <b>accountIds</b> A comma separated list of account IDs to filter by.<br> - <b>sourceAccountIds</b> A comma separated list of the source account IDs to filter by.<br> - <b>customerIds</b> A comma separated list of customer IDs to filter by.<br> - <b>vendorIds</b> A comma separated list of vendor IDs to filter by.<br> - <b>itemIds</b> A comma separated list of item IDs to filter by.<br> - <b>classIds</b> A comma separated list of class IDs to filter by.<br> - <b>termIds</b> A comma separated list of term IDs to filter by.<br> - <b>departmentIds</b> A comma separated list of department IDs to filter by.<br>",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Reports"
        ]
      }
    },
    "/sales-receipts": {
      "post": {
        "summary": "Create a sales receipt",
        "operationId": "createSalesReceipt",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ReceiptPost"
            },
            "in": "body",
            "name": "salesReceipt",
            "description": "The sales receipt",
            "required": true
          }
        ],
        "tags": [
          "Sales Receipts"
        ]
      },
      "get": {
        "summary": "Search for sales receipts",
        "operationId": "getSalesReceipts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ReceiptGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for sales receipts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all sales receipts are returned in a paginated fashion.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Receipts"
        ]
      }
    },
    "/sales-receipts/{salesReceiptId}": {
      "patch": {
        "summary": "Update a sales receipt",
        "operationId": "updateSalesReceiptBySalesReceiptId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "salesReceiptId",
            "description": "The sales receipt ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ReceiptPatch"
            },
            "in": "body",
            "name": "salesReceipt",
            "description": "The sales receipt",
            "required": true
          }
        ],
        "tags": [
          "Sales Receipts"
        ]
      },
      "get": {
        "summary": "Retrieve a sales receipt",
        "operationId": "getSalesReceiptBySalesReceiptId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Receipt"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "salesReceiptId",
            "description": "The sales receipt ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Receipts"
        ]
      },
      "delete": {
        "summary": "Delete a sales receipt",
        "operationId": "deleteSalesReceiptBySalesReceiptId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "salesReceiptId",
            "description": "The sales receipt ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Receipts"
        ]
      }
    },
    "/settings": {
      "get": {
        "summary": "Retrieve an account-settings",
        "operationId": "getSettings",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/settingsGetRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Settings"
        ]
      }
    },
    "/tax-agencies": {
      "post": {
        "summary": "Create a Tax Agency in the Finance system. Tax Agency creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createTaxAgency",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxAgency"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/TaxAgencyPost"
            },
            "in": "body",
            "name": "body",
            "description": "The TaxAgency object to be created.<br>With the exception of the 'id' field,the                required fields indicated in the 'TaxAgency' model are those required to create a new time activity",
            "required": true
          }
        ],
        "tags": [
          "Tax Agencies"
        ]
      },
      "get": {
        "summary": "Find Tax Agencies in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Tax Agencies last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Tax Agencies are returned.",
        "operationId": "getTaxAgencies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxAgencyGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for tax-agencies last updated on or after 'Jun 26, 2017', the search expression will be <i>where=metadata.lastUpdatedTime>'2017-06-26T00:00:00+05:30'</i>. When this parameter is omitted, all tax-agencies are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Agencies"
        ]
      }
    },
    "/tax-agencies/{id}": {
      "get": {
        "summary": "Retrieve a defined Tax Agency associated with a given ID from the Finance system. Specifying a Tax Agency with an associated ID that does not exist will result in an error response.",
        "operationId": "getTaxAgencyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxAgency"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Tax Agency to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Tax Agencies"
        ]
      }
    },
    "/tax-codes": {
      "get": {
        "summary": "Find Tax Codes in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Tax Codes last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Tax Codes are returned.",
        "operationId": "getTaxCodes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxCodeGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Codes"
        ]
      }
    },
    "/tax-codes/{id}": {
      "get": {
        "summary": "Retrieve a defined Tax Code associated with a given ID from the Finance system. Specifying a Tax Code with an associated ID that does not exist will result in an error response.",
        "operationId": "getTaxCodeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxCode"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the tax code to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Tax Codes"
        ]
      }
    },
    "/tax-rates": {
      "get": {
        "summary": "Find Tax Rates in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Tax Rates last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Tax Rates are returned.",
        "operationId": "getTaxRates",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxRateGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all accounts are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Rates"
        ]
      }
    },
    "/tax-rates/{id}": {
      "get": {
        "summary": "Retrieve a defined Tax Rate associated with a given ID from the Finance system. Specifying a Tax Rate with an associated ID that does not exist will result in an error response.",
        "operationId": "getTaxRateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxRate"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the Tax Rate to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Tax Rates"
        ]
      }
    },
    "/tax-service": {
      "post": {
        "summary": "Create a Tax Code / Tax Rate using the TaxService.",
        "operationId": "createTaxService",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TaxService"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/TaxService"
            },
            "in": "body",
            "name": "body",
            "description": "The TaxService object to be created.",
            "required": true
          }
        ],
        "tags": [
          "Tax Service"
        ]
      }
    },
    "/time-activities": {
      "post": {
        "summary": "Create a Time Activity in the Finance system.  Time Activity creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createTimeActivity",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TimeActivity"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/TimeActivityPost"
            },
            "in": "body",
            "name": "body",
            "description": "The TimeActivity object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'TimeActivity' model are those required to create a new time activity",
            "required": true
          }
        ],
        "tags": [
          "Time Activities"
        ]
      },
      "get": {
        "summary": "Find Time Activities in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. Currently, Time Activities can only be queried by id. When this parameter is omitted, all Time Activities are returned.",
        "operationId": "getTimeActivities",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TimeActivityGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all time activities are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Time Activities"
        ]
      }
    },
    "/time-activities/{id}": {
      "patch": {
        "summary": "Update a Time Activity given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the payment object will be updated, and those fields not provided will be left alone.  Updating a Time Activity with a specified ID that does not exist will result in an error response.",
        "operationId": "updateTimeActivityById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TimeActivity"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the time activity to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/TimeActivityPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The TimeActivity object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Time Activities"
        ]
      },
      "get": {
        "summary": "Retrieve a defined Time Activity associated with a given ID from the Finance system. Specifying a Time Activity with an associated ID that does not exist will result in an error response.",
        "operationId": "getTimeActivityById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/TimeActivity"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the time activity to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Time Activities"
        ]
      },
      "delete": {
        "summary": "Delete a Time Activity associated with a given ID from the Finance system. Specifying a Time Activity associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteTimeActivityById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the time activity to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Time Activities"
        ]
      }
    },
    "/transfers": {
      "post": {
        "summary": "Create an transfer",
        "operationId": "createTransfer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/transferGetObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/transferCreateObject"
            },
            "in": "body",
            "name": "transfer",
            "description": "The Transfer JSON Payload.",
            "required": true
          }
        ],
        "tags": [
          "Transfers"
        ]
      },
      "get": {
        "summary": "Search for transfers",
        "operationId": "getTransfers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/transferGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for txnDate, the search expression will be <i>txnDate>='2015-12-15T00:00:00-06:00'</i>. Filterable fields are : txnDate.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by txnDate ascending use 'txnDate asc'. Sortable Fields are txnDate, id.",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transfers"
        ]
      }
    },
    "/transfers/{id}": {
      "patch": {
        "summary": "Update a Transfer",
        "operationId": "updateTransferById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/transferGetObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the transfer to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/transferUpdateObject"
            },
            "in": "body",
            "name": "body",
            "description": "The payment object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Transfers"
        ]
      },
      "get": {
        "summary": "Retrieve a Transfer",
        "operationId": "getTransferById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/transferGetObject"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the transfer to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Transfers"
        ]
      },
      "delete": {
        "summary": "Delete a Transfer",
        "operationId": "deleteTransferById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the transfer to delete in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Transfers"
        ]
      }
    },
    "/vendor-credits": {
      "post": {
        "summary": "Create a new Vendor Credit in the Finance system.  Vendor creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createVendorCredit",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/VendorCredit"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/VendorCreditReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Vendor Credit object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Vendor' model are those required to create a new vendor credit",
            "required": true
          }
        ],
        "tags": [
          "Vendor Credits"
        ]
      },
      "get": {
        "summary": "Find Vendor Credit in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Vendor Credits transaction date on or after 'July 02, 2016', the search expression will be where=txnDate >= '2016-07-02T00:00:00'. Supported search fields are : id, totalAmt, privateNote, txnDate, VendorRef, APAccountRef and DocNumber.",
        "operationId": "getVendorCredits",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/VendorCreditGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all vendor credits are returned",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendor Credits"
        ]
      }
    },
    "/vendor-credits/{id}": {
      "patch": {
        "summary": "Update a Vendor Order given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Vendor Order object will be updated, and those fields not provided will be left alone.  Updating a Vendor Order with a specified ID that does not exist will result in an error response.",
        "operationId": "updateVendorCreditById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/VendorCredit"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the vendor credit to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/VendorCreditReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Vendor Credit object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Vendor Credits"
        ]
      },
      "get": {
        "summary": "Retrieve a defined Vendor Credit associated with a given ID from the Finance system. Specifying a Vendor with an associated ID that does not exist will result in an error response.",
        "operationId": "getVendorCreditById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/VendorCredit"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the vendor credit to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendor Credits"
        ]
      },
      "delete": {
        "summary": "Delete a VendorCredit associated with a given ID from the Finance system.",
        "operationId": "deleteVendorCreditById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the vendor credit to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendor Credits"
        ]
      }
    },
    "/vendors": {
      "post": {
        "summary": "Create a new Vendor in the Finance system.  Vendor creation will flow through Cloud Elements to the Finance Service.",
        "operationId": "createVendor",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/VendorPost"
            },
            "in": "body",
            "name": "body",
            "description": "The Vendor object to be created.<br>With the exception of the 'id' field, the required fields indicated in the 'Vendor' model are those required to create a new vendor",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "summary": "Find Vendors in the Finance System, using the provided CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for Vendors last modified on or after 'Jan 15, 2014', the search expression will be where=lastModifiedDate>='2014-01-15T00:00:00.000Z'. When this parameter is omitted, all Vendors are returned.",
        "operationId": "getVendors",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/VendorGetAll"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example, to search for accounts last modified on or after 'Jan 15, 2014', the search expression will be <i>where=lastModifiedDate>='2014-01-15T00:00:00.000Z'</i>. When this parameter is omitted, all vendors are returned ",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "orderBy",
            "description": "The field to order by. For example, to order by firstname ascending use 'firstname asc'. Please refer to Quickbooks API reference for valid sortable fields",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "returnCount",
            "description": "Pass true if total count is needed in response headers",
            "type": "boolean",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/vendors/{id}": {
      "patch": {
        "summary": "Update a Vendor Order given a set of partial attributes associated with a given ID in the Finance system. The update API uses the PATCH HTTP verb, so only those fields provided in the Vendor Order object will be updated, and those fields not provided will be left alone.  Updating a Vendor Order with a specified ID that does not exist will result in an error response.",
        "operationId": "updateVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the vendor to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/VendorPatch"
            },
            "in": "body",
            "name": "body",
            "description": "The Vendor object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "summary": "Retrieve a defined Vendor associated with a given ID from the Finance system. Specifying a Vendor with an associated ID that does not exist will result in an error response.",
        "operationId": "getVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Vendor"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the vendor to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "delete": {
        "summary": "Delete a Vendor associated with a given ID from the Finance system.  This marks it as inactive in the system Specifying a Vendor associated with a given ID that does not exist will result in an error message.",
        "operationId": "deleteVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the vendor to delete in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/{objectName}": {
      "get": {
        "operationId": "getByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{id}/attachments": {
      "post": {
        "summary": "Create an attachment in the Finance system. ",
        "operationId": "createObjectNameAttachment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The objectName associated to the attachment. Can be Invoice, Bill, etc",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the attachment to update in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "file",
            "description": "The attachment to be uploaded",
            "type": "file",
            "required": false
          }
        ],
        "tags": [
          "Object Name"
        ],
        "consumes": [
          "multipart/form-data"
        ]
      },
      "get": {
        "summary": "Will get all attachment metadata associated with the object in the system",
        "operationId": "getObjectNameAttachments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The objectName associated to the attachment. Can be Invoice, Bill, etc",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Id of the vendor credit to retrieve from the finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{id}/attachments/{attachmentId}": {
      "get": {
        "summary": "Get an attachment associated with a given object and id from the Finance system.",
        "operationId": "getObjectNameAttachmentByAttachmentId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The objectName associated to the attachment. Can be Invoice, Bill, etc",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the attachment to fetch in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "The attachmentId of the attachment to fetch in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "delete": {
        "summary": "Delete an attachment associated with a given object and id from the Finance system.",
        "operationId": "deleteObjectNameAttachmentByAttachmentId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The objectName associated to the attachment. Can be Invoice, Bill, etc",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the attachment in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "The attachmentId of the attachment in the Finance system.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "summary": "Replace an attachment associated with a given object and id from the Finance system.",
        "operationId": "replaceObjectNameAttachmentByAttachmentId",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachments"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "objectName",
            "description": "The objectName associated to the attachment. Can be Invoice, Bill, etc",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id of the attachment in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "attachmentId",
            "description": "The attachmentId of the attachment in the Finance system.",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/attachmentsPost"
            },
            "in": "body",
            "name": "body",
            "description": "The Vendor Credit object, with those fields that are to be updated.",
            "required": true
          }
        ],
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}": {
      "delete": {
        "operationId": "deleteObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}": {
      "get": {
        "operationId": "getObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}/{childObjectId}": {
      "delete": {
        "operationId": "deleteObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      }
    }
  },
  "host": "hostname",
  "schemes": [
    "https"
  ],
  "definitions": {
    "PaymentGetAllResponseDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "bankAccount"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxCodeAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TaxCodeAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "attachmentsEntityRef": {
      "properties": {
        "type": {
          "type": "string",
          "x-samplevalue": "Invoice"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "95"
        }
      },
      "title": "attachmentsEntityRef",
      "type": "object",
      "x-has-customfields": false
    },
    "PurchaseGetAllLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillGetAllSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "CreditTermGetAllMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "AnyLineEx": {
      "properties": {
        "declaredType": {
          "type": "string",
          "x-samplevalue": "com.intuit.schema.finance.v3.NameValue"
        },
        "globalScope": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-name": true,
          "x-samplevalue": "{http://schema.intuit.com/finance/v3}NameValue"
        },
        "nil": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "scope": {
          "type": "string",
          "x-samplevalue": "javax.xml.bind.JAXBElement$GlobalScope"
        },
        "typeSubstituted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "value": {
          "$ref": "#/definitions/ValuePaymentLine"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/DepartmentAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/DepartmentAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Employee": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-alias": "status"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/EmployeeAttachableRef"
          },
          "type": "array"
        },
        "billRate": {
          "description": "This attribute can only be set if billableTime is true",
          "format": "float",
          "type": "number"
        },
        "billableTime": {
          "type": "boolean"
        },
        "birthDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dob",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EmployeeCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "employeeNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "familyName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "lastName"
        },
        "gender": {
          "enum": [
            "MALE",
            "FEMALE"
          ],
          "type": "string",
          "x-alias": "gender"
        },
        "givenName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "firstName"
        },
        "hiredDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "hireDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/EmployeeMetaData"
        },
        "middleName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "middleName"
        },
        "mobile": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/EmployeeMobile"
        },
        "organization": {
          "type": "boolean"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/EmployeeOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/EmployeeOtherContactInfo"
          },
          "type": "array"
        },
        "primaryAddr": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "$ref": "#/definitions/EmployeePrimaryAddr"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/EmployeePrimaryEmailAddr"
        },
        "primaryPhone": {
          "x-alias": "phone",
          "$ref": "#/definitions/EmployeePrimaryPhone"
        },
        "printOnCheckName": {
          "description": "Cannot be removed with a partial (sparse) update",
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "releasedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "releaseDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "ssn": {
          "type": "string",
          "x-alias": "ssn"
        },
        "suffix": {
          "description": "At least one of the name elements must be present to use suffix",
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "title": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "salutation"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "employee",
      "type": "object"
    },
    "RefundReceiptCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "preferencesVendorAndPurchasesPrefsPOCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesVendorAndPurchasesPrefsPOCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodeGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "attachmentsList": {
      "items": {
        "$ref": "#/definitions/attachments"
      },
      "type": "array"
    },
    "InvoiceGetAllResponseInvoiceStatusLogEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyCurrencyChangedDataObject": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/CompanyCurrencyEntities"
          },
          "type": "array"
        },
        "maxResults": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        },
        "startPosition": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EmployeePatchOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "BillPostTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/BillPostTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/BillPostTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineJournalEntryLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShipAddress": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-length": 255,
          "x-samplevalue": "Bayshore",
          "x-sub-format": "City"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-length": 255,
          "x-samplevalue": "USA",
          "x-sub-format": "Country"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-length": 255,
          "x-samplevalue": "CA",
          "x-sub-format": "Country Code"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": 35,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<=",
            "LIKE"
          ]
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": 37.2374847,
          "x-sub-format": "Latitude"
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": -121.8277925,
          "x-sub-format": "Longitude"
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-length": 30,
          "x-samplevalue": 95123,
          "x-sub-format": "Postal Code"
        }
      },
      "type": "object"
    },
    "swagger200": {
      "x-has-customfields": false,
      "type": "object",
      "title": "200",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerschema"
        },
        "description": {
          "x-samplevalue": "OK - Everything worked as expected",
          "type": "string"
        }
      }
    },
    "InvoicePatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "currencyObjectCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item. For Invoice objects in global locales: when updating Amount, remove the TxnTaxDetail element in the object before submitting it in the update request payload.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountAmount",
              "description": "discountAmount maps to amount field under line array when detailType is DISCOUNT_LINE_DETAIL"
            },
            {
              "alias": "subTotal",
              "description": "subTotal maps to amount field under line array when detailType is SUB_TOTAL_LINE_DETAIL"
            },
            {
              "alias": "lines[*].subTotal",
              "description": "lines[*].subTotal maps to amount field under line array when detailType is SALES_ITEM_LINE_DETAIL"
            }
          ]
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/InvoiceLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoiceLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Set to SalesItemLineDetail this type of line.",
          "enum": [
            "SALES_ITEM_LINE_DETAIL",
            "SUB_TOTAL_LINE_DETAIL"
          ],
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoiceLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation.",
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoiceLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoiceLineSubtotalLineDetail"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillPaymentGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "CreditMemoSalesTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositCreateObjectLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAll": {
      "properties": {
        "adjustment": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllAttachableRef"
          },
          "type": "array"
        },
        "currencyRef": {
          "$ref": "#/definitions/JournalEntryGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllCustomField"
          },
          "type": "array"
        },
        "docNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!=",
            ">",
            ">=",
            "<",
            "<="
          ]
        },
        "domain": {
          "type": "string"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryGetAllEntityRef"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!="
          ]
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryGetAllJournalCodeRef"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/JournalEntryGetAllMetaData"
        },
        "privateNote": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        },
        "txnSource": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/JournalEntryGetAllTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "journalentry",
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductexpenseAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "50100 Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "title": "ProductexpenseAccountRef",
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "PaymentMethodGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PaymentMethodGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentMethodGetAllCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "metaData": {
          "$ref": "#/definitions/PaymentMethodGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CREDIT_CARD",
            "NON_CREDIT_CARD"
          ],
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "paymentmethod",
      "type": "object"
    },
    "CustomerGetAllResponseOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "TaxAgencyGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetailClassRef"
        },
        "discountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountAmount"
        },
        "discountRate": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountRate"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "int64",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "serviceDate": {
          "description": "Date when the service is performed",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "description": "The total amount of the line item including tax. Constraints: Available when endpoint is evoked with the minorversion=1query parameter.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.price"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerdefinitions": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definitions",
      "properties": {
        "definition-name": {
          "$ref": "#/definitions/swaggerdefinition-name"
        }
      }
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodeGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "InvoicePatchDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "TaxCodePurchaseTaxRateListTaxRateDetail": {
      "properties": {
        "taxOrder": {
          "format": "int32",
          "type": "integer"
        },
        "taxRateRef": {
          "$ref": "#/definitions/TaxCodePurchaseTaxRateListTaxRateDetailTaxRateRef"
        },
        "taxTypeApplicable": {
          "enum": [
            "TAX_ON_AMOUNT",
            "TAX_ON_AMOUNT_PLUS_TAX",
            "TAX_ON_TAX"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqPurchaseExAnyValue": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptGetAllLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptGetAllLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/VendorCreditGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TaxAgencyGetAll": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TaxAgencyGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxAgencyGetAllCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "x-searchable": false
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastFileDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "metaData": {
          "$ref": "#/definitions/TaxAgencyGetAllMetaData"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/TaxAgencyGetAllOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/TaxAgencyGetAllOtherContactInfo"
          },
          "type": "array"
        },
        "reportingPeriod": {
          "type": "string"
        },
        "salesTaxCodeRef": {
          "type": "string"
        },
        "salesTaxCountry": {
          "type": "string"
        },
        "salesTaxReturnRef": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxAgencyExt": {
          "type": "string"
        },
        "taxOnTax": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxTrackedOnPurchases": {
          "type": "boolean"
        },
        "taxTrackedOnSales": {
          "type": "boolean"
        },
        "taxTrackedOnSalesAccountRef": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "taxagency",
      "type": "object"
    },
    "JournalEntryGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTermGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesCurrencyPrefs": {
      "properties": {
        "HomeCurrency": {
          "$ref": "#/definitions/preferencesCurrencyPrefsHomeCurrency"
        },
        "MultiCurrencyEnabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePostShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesReportPrefs": {
      "properties": {
        "CalcAgingReportFromTxnDate": {
          "type": "boolean"
        },
        "ReportBasis": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicesalesTermRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "7"
        }
      },
      "title": "InvoicesalesTermRef",
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CustomerPostSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceInvoiceStatusLogCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesEmailMessagesPrefsEstimateMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderPatchLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SalesItemitemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Toyflour sack"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "465"
        }
      },
      "title": "SalesItemitemRef",
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxAgencyAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesSalesFormsPrefsCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesSalesFormsPrefsCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentPostCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "VendorAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/ReceiptGetAllTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchasePurchaseExAny": {
      "properties": {
        "declaredType": {
          "type": "string"
        },
        "globalScope": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nil": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "typeSubstituted": {
          "type": "boolean"
        },
        "value": {
          "$ref": "#/definitions/PurchasePurchaseExAnyValue"
        }
      },
      "type": "object"
    },
    "preferencesTimeTrackingPrefs": {
      "properties": {
        "BillCustomers": {
          "type": "boolean"
        },
        "MarkTimeEntriesBillable": {
          "type": "boolean"
        },
        "ShowBillRateToAll": {
          "type": "boolean"
        },
        "UseServices": {
          "type": "boolean"
        },
        "WorkWeekStartDate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPost": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillPostApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/BillPostAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue"
        },
        "billAddr": {
          "$ref": "#/definitions/BillPostBillAddr"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillPostCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPostCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillPostDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillPostLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPostLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/BillPostMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "$ref": "#/definitions/BillPostSalesTermRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "x-alias": "status"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/BillPostTxnTaxDetail"
        },
        "vendorRef": {
          "$ref": "#/definitions/BillPostVendorRef"
        }
      },
      "required": [
        "vendorRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "bill",
      "type": "object"
    },
    "ReceiptGetAllCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPut": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillPutApaccountRef"
        },
        "attachableRef": {
          "$ref": "#/definitions/BillPutAttachableRef"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue"
        },
        "billAddr": {
          "$ref": "#/definitions/BillPutBillAddr"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillPutCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPutCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillPutDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillPutLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPutLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/BillPutMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "$ref": "#/definitions/BillPutSalesTermRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "x-alias": "status"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/BillPutTxnTaxDetail"
        },
        "vendorRef": {
          "$ref": "#/definitions/BillPutVendorRef"
        }
      },
      "required": [
        "vendorRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "bill",
      "type": "object"
    },
    "BillPaymentPostCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/BillPaymentPostCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodeGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalCodeGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalCodeGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "BillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-length": 100,
          "x-samplevalue": "test@intuit.com",
          "x-sub-format": "Email"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "BillApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "EstimateLine": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 35.55
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EstimateLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Pest Control Services"
        },
        "detailType": {
          "type": "string",
          "x-samplevalue": "SalesItemLineDetail"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/EstimateLineDiscountLineDetail"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/EstimateLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/EstimateLineSalesItemLineDetail"
        }
      },
      "type": "object"
    },
    "InvoicePatchBillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "rows": {
      "properties": {
        "row": {
          "items": {
            "$ref": "#/definitions/row"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "VendorPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchEmailMessagesPrefsSalesReceiptMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillAddress": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-length": 255,
          "x-samplevalue": "Bayshore",
          "x-sub-format": "City"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-length": 255,
          "x-samplevalue": "USA",
          "x-sub-format": "Country"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-length": 255,
          "x-samplevalue": "CA",
          "x-sub-format": "Country Code"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": 35,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<=",
            "LIKE"
          ]
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": 37.2374847,
          "x-sub-format": "Latitude"
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-length": 2000,
          "x-min-length": 500,
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": -121.8277925,
          "x-sub-format": "Longitude"
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-length": 30,
          "x-samplevalue": 95123,
          "x-sub-format": "Postal Code"
        }
      },
      "type": "object"
    },
    "JournalCodeMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        }
      },
      "type": "object"
    },
    "currencyCreateObject": {
      "properties": {
        "code": {
          "type": "string",
          "x-samplevalue": "INR"
        }
      },
      "required": [
        "code"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "companyCurrency",
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "BillVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "TaxAgencyCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].invoice.id",
              "path": "linkedTxn[?txnType=='Invoice'].id"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EmployeePatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PrimaryPhone": {
      "properties": {
        "FreeFormNumber": {
          "type": "string",
          "x-samplevalue": "650-555-1234"
        }
      },
      "title": "PrimaryPhone",
      "type": "object",
      "x-has-customfields": false
    },
    "InvoicecustomerMemo": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "This is a message Café"
        }
      },
      "title": "InvoicecustomerMemo",
      "type": "object"
    },
    "EmployeePrimaryAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "address.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "address.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line3",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "address.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "budgetObjectAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPatchTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/PurchaseOrderPatchTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatch": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "$ref": "#/definitions/ReceiptPatchAttachableRef"
        },
        "balance": {
          "format": "int32",
          "type": "integer"
        },
        "billAddr": {
          "$ref": "#/definitions/ReceiptPatchBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/ReceiptPatchBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/ReceiptPatchCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/ReceiptPatchClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/ReceiptPatchCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/ReceiptPatchCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/ReceiptPatchCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/ReceiptPatchCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/ReceiptPatchDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/ReceiptPatchDepositToAccountRef"
        },
        "docNumber": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/ReceiptPatchMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/ReceiptPatchPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/ReceiptPatchRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/ReceiptPatchSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/ReceiptPatchShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/ReceiptPatchShipMethodRef"
        },
        "syncToken": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/ReceiptPatchTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/ReceiptPatchTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "salesreceipt",
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllVendorRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchVendorAndPurchasesPrefsPOCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesPatchVendorAndPurchasesPrefsPOCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DiscountAccountRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePost": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-alias": "status"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/EmployeePostAttachableRef"
          },
          "type": "array"
        },
        "billRate": {
          "description": "This attribute can only be set if billableTime is true",
          "format": "float",
          "type": "number"
        },
        "billableTime": {
          "type": "boolean"
        },
        "birthDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dob",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EmployeePostCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "employeeNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "familyName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "lastName"
        },
        "gender": {
          "enum": [
            "MALE",
            "FEMALE"
          ],
          "type": "string",
          "x-alias": "gender"
        },
        "givenName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "firstName"
        },
        "hiredDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "hireDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/EmployeePostMetaData"
        },
        "middleName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "middleName"
        },
        "mobile": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/EmployeePostMobile"
        },
        "organization": {
          "type": "boolean"
        },
        "otherAddr": {
          "$ref": "#/definitions/EmployeePostOtherAddr"
        },
        "otherContactInfo": {
          "$ref": "#/definitions/EmployeePostOtherContactInfo"
        },
        "primaryAddr": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "$ref": "#/definitions/EmployeePostPrimaryAddr"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/EmployeePostPrimaryEmailAddr"
        },
        "primaryPhone": {
          "x-alias": "phone",
          "$ref": "#/definitions/EmployeePostPrimaryPhone"
        },
        "printOnCheckName": {
          "description": "Cannot be removed with a partial (sparse) update",
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "releasedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "releaseDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "ssn": {
          "type": "string",
          "x-alias": "ssn"
        },
        "suffix": {
          "description": "At least one of the name elements must be present to use suffix",
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "title": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "salutation"
        }
      },
      "required": [
        "familyName",
        "givenName"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "employee",
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTCustomField": {
      "properties": {
        "definitionId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Crew #"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "StringType"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": "bill[*].id"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "EstimateLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "NON"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/LedgerAccountPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/LedgerAccountPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "entitlements": {
      "properties": {
        "CompanyStartDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-16T10:59:02-08:00"
        },
        "CurrentUsers": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "DaysRemainingTrial": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "Email": {
          "type": "string",
          "x-samplevalue": "abc@gmail.com"
        },
        "EmployerId": {
          "type": "string",
          "x-name": true,
          "x-samplevalue": "1"
        },
        "Entitlement": {
          "items": {
            "$ref": "#/definitions/Entitlement"
          },
          "type": "array"
        },
        "FiscalYearStartMonth": {
          "type": "string"
        },
        "MaxUsers": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 5
        },
        "PlanName": {
          "type": "string",
          "x-samplevalue": "QBWEBPLUSMONTHLY"
        },
        "QboCompany": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "SupportedLanguages": {
          "type": "string"
        },
        "WebAddr": {
          "type": "string",
          "x-samplevalue": "abc.com"
        }
      },
      "title": "entitlements",
      "x-has-customfields": false,
      "x-vendor-objectname": "entitlements",
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseReqTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseReqTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseReqTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/PurchaseReqTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "currencyObjectAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "exchangeRatesPutResp": {
      "properties": {
        "AsOfDate": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-08-20"
        },
        "MetaData": {
          "$ref": "#/definitions/exchangeRateMetadata"
        },
        "Rate": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 2.5
        },
        "SourceCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "SyncToken": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "TargetCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "exchangeRatesPutResp",
      "type": "object",
      "x-has-customfields": true,
      "x-vendor-objectname": "exchangerate"
    },
    "CustomerBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "ReceiptPostRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPostPrefVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is payment"
            },
            {
              "alias": "parentDocumentNumber",
              "description": "parentDocumentNumber maps to txnId field under linkedTxn array when txnType is estimate"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TimeActivityEmployeeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/LedgerAccountAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/LedgerAccountAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DepartmentReqAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "type": "object"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "EstimateAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerbillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "21"
        },
        "lat": {
          "type": "string",
          "x-samplevalue": "INVALID"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "5647 Cypress Hill Rd"
        },
        "long": {
          "type": "string",
          "x-samplevalue": "INVALID"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "CustomerbillAddr",
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Purchase": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseAccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PurchaseAttachableRef"
          },
          "type": "array"
        },
        "credit": {
          "type": "boolean"
        },
        "currencyRef": {
          "$ref": "#/definitions/PurchaseCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/PurchaseDepartmentRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "entityRef": {
          "$ref": "#/definitions/PurchaseEntityRef"
        },
        "exchangeRate": {
          "format": "double",
          "type": "number"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PurchaseLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/PurchaseMetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/PurchasePaymentMethodRef"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "purchaseEx": {
          "$ref": "#/definitions/PurchasePurchaseEx"
        },
        "remitToAddr": {
          "$ref": "#/definitions/PurchaseRemitToAddr"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/PurchaseTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "purchase",
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPostParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLineDepositLineDetailEntity": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "type": {
          "enum": [
            "CUSTOMER"
          ],
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentParentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimatePOSTShipAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Half Moon Bay"
        },
        "country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "104"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line2": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line3": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94213"
        }
      },
      "type": "object"
    },
    "MetaDataPutRequest": {
      "properties": {
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-07-07T12:38:40-07:00"
        }
      },
      "title": "MetaDataPutRequest",
      "type": "object",
      "x-has-customfields": false
    },
    "budgetObjectAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetailDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Invoice": {
      "properties": {
        "allowIPNPayment": {
          "description": "Flag to allow payments from legacy Intuit Payment Network (IPN). Provided to maintain backward compatibility and must always be set to false.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineACHPayment": {
          "default": false,
          "description": "Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice.If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineCreditCardPayment": {
          "default": false,
          "description": "Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI.If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlinePayment": {
          "default": false,
          "description": "Deprecated flag to allow online payments. In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility.If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed. In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true.If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used",
          "type": "boolean"
        },
        "applyTaxAfterDiscount": {
          "default": false,
          "description": "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.",
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRefResponse"
          },
          "type": "array"
        },
        "balance": {
          "description": "The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-readOnly": true,
          "x-samplevalue": 100,
          "x-sub-format": "Money"
        },
        "billAddr": {
          "$ref": "#/definitions/BillAddress",
          "description": "Bill-to address of the Invoice. If BillAddris not specified, and a default Customer:BillingAddr is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks."
        },
        "billEmail": {
          "$ref": "#/definitions/BillEmail",
          "description": "Identifies the e-mail address where the invoice is sent. If EmailStatus=NeedToSend, BillEmailis a required input"
        },
        "billEmailBcc": {
          "$ref": "#/definitions/BillEmailBcc",
          "description": "Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent."
        },
        "billEmailCc": {
          "$ref": "#/definitions/BillEmailCc",
          "description": "Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent."
        },
        "classRef": {
          "$ref": "#/definitions/ClassRefResponse",
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively."
        },
        "currencyRef": {
          "$ref": "#/definitions/CurrencyRefResponse",
          "description": "Reference to the currency in which all amounts on the associated transaction are expressed. This must be defined if multicurrency is enabled for the company. Multicurrency is enabled for the company if Preferences.MultiCurrencyEnabled is set to true. Read more about multicurrency support here.",
          "x-conditionally-required-description": "required if multicurrency is enabled for the company"
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/estimateCustomerMemo",
          "description": "User-entered message to the customer; this message is visible to end user on their transactions."
        },
        "customerRef": {
          "$ref": "#/definitions/CustomerRefResponse",
          "description": "Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively."
        },
        "deliveryInfo": {
          "$ref": "#/definitions/DeliveryInfo",
          "description": "Email delivery information. Returned when a request has been made to deliver email with the send operation.",
          "x-readOnly": true
        },
        "departmentRef": {
          "$ref": "#/definitions/DepartmentRefResponse",
          "description": "A reference to a Department object specifying the location of the transaction. Available if Preferences.AccountingInfoPrefs.TrackDepartments is set to true. Query the Department name list resource to determine the appropriate department object for this reference. Use Department.Id and Department.Name from that object for DepartmentRef.value and DepartmentRef.name, respectively.Child attributes",
          "x-nullable": true
        },
        "deposit": {
          "description": "The deposit made towards this invoice",
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/DepositToAccountRefResponse",
          "description": "Account to which money is deposited. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType is Other Current Asset or Bank. Use Account.Id and Account.Name from that object for DepositToAccountRef.value and DepositToAccountRef.name, respectively. If you do not specify this account, payment is applied to the Undeposited Funds account."
        },
        "docNumber": {
          "description": "Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows:If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.If Preferences:CustomTxnNumber is false and a value is supplied, that value is stored even if it is a duplicate. Recommended best practice: check the setting of Preferences:CustomTxnNumber before setting DocNumber. Sort order is ASC by default.",
          "type": "string",
          "x-length": 21,
          "x-samplevalue": "1069"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDate": {
          "description": "Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-sub-format": "Date Time-ISO 8601"
        },
        "einvoiceStatus": {
          "type": "string"
        },
        "emailStatus": {
          "default": "NOT_SET",
          "description": "Email status of the invoice. Valid values: NotSet, NeedToSend, EmailSent",
          "enum": [
            "NEED_TO_SEND",
            "NOT_SET",
            "EMAIL_SENT"
          ],
          "type": "string",
          "x-samplevalue": "NOT_SET",
          "x-sub-format": "enum"
        },
        "exchangeRate": {
          "default": 1,
          "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef.",
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "default": "TAX_EXCLUDED",
          "description": "Method in which tax is applied. Allowed values are: TaxExcluded, TaxInclusive, and NotApplicable.",
          "enum": [
            "TAX_EXCLUDED",
            "TAX_INCLUSIVE",
            "NOT_APPLICABLE"
          ],
          "type": "string",
          "x-sub-format": "enum"
        },
        "homeBalance": {
          "description": "Convenience field containing the amount in Balance expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified and available when endpoint is evoked with the minorversion=3 query parameter.",
          "format": "double",
          "type": "number",
          "x-readOnly": true,
          "x-sub-format": "Money"
        },
        "homeTotalAmt": {
          "description": "Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified.",
          "format": "double",
          "type": "number",
          "x-readOnly": true,
          "x-sub-format": "Money"
        },
        "id": {
          "description": "Unique identifier for this object. Sort order is ASC by default.",
          "type": "string",
          "x-name": true,
          "x-samplevalue": 238
        },
        "invoiceStatusLog": {
          "items": {
            "$ref": "#/definitions/AttachableRef1Response"
          },
          "type": "array"
        },
        "line": {
          "description": "Individual line items of a transaction",
          "items": {
            "$ref": "#/definitions/InvoiceOrderLineResp"
          },
          "type": "array"
        },
        "linkedTxn": {
          "description": "Zero or more related transactions to this Invoice object. The following linked relationships are supported:Links to Estimate and TimeActivity objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are available at the API level for these types of links.Links to expenses incurred on behalf of the customer are returned in the response with LinkedTxn.TxnType set to ReimburseCharge, ChargeCredit or StatementCharge corresponding to billable customer expenses of type Cash, Delayed Credit, and Delayed Charge, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.Links to payments applied to an Invoice object are returned in the response with LinkedTxn.TxnType set to Payment. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.Use LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.",
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransactionResponse"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/MetaData",
          "description": "Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications."
        },
        "printStatus": {
          "enum": [
            "NOT_SET",
            "NEED_TO_PRINT",
            "PRINT_COMPLETE"
          ],
          "type": "string",
          "x-sub-format": "Enum"
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.",
          "type": "string",
          "x-length": 4000
        },
        "salesTermRef": {
          "$ref": "#/definitions/SalesTermRefResponse",
          "description": "Reference to the sales term associated with the transaction. Query the Term name list resource to determine the appropriate Term object for this reference. Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively."
        },
        "shipAddr": {
          "$ref": "#/definitions/ShipAddress",
          "description": "Identifies the address where the goods must be shipped. If ShipAddris not specified, and a default Customer:ShippingAddr is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks."
        },
        "shipDate": {
          "description": "Date for delivery of goods or services.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-sub-format": "Date Time-ISO 8601"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/ShipMethodRefResponse",
          "description": "Reference to the ShipMethod associated with the transaction. There is no shipping method list. Reference resolves to a string."
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-sub-format": "Money"
        },
        "trackingNum": {
          "description": "Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
          "type": "string"
        },
        "transactionLocationType": {
          "default": "WithinFrance",
          "description": "The account location.",
          "enum": [
            "WithinFrance",
            "FranceOverseas",
            "OutsideFranceWithEU",
            "OutsideEU"
          ],
          "type": "string",
          "x-sub-format": "enum"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used. Sort order is ASC by default.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-sub-format": "Date Time-ISO 8601"
        },
        "txnSource": {
          "description": "Used internally to specify originating source of a credit card transaction",
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/TxnTaxDetailBillResponse",
          "description": "This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See Global tax model for more information about this element."
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "invoice",
      "type": "object"
    },
    "depositCreateObjectLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].taxName"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "CreditMemoBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "InvoicePatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "exchangeRatesPutReq": {
      "properties": {
        "AsOfDate": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2015-07-08"
        },
        "MetaData": {
          "$ref": "#/definitions/MetaDataPutRequest"
        },
        "Rate": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 7
        },
        "SourceCurrencyCode": {
          "type": "string",
          "x-samplevalue": "INR"
        },
        "SyncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "TargetCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "required": [
        "SourceCurrencyCode",
        "Rate",
        "AsOfDate",
        "SyncToken"
      ],
      "title": "exchangeRatesPutReq",
      "x-has-customfields": true,
      "x-vendor-objectname": "exchangerate",
      "type": "object"
    },
    "PaymentGetAllResponsePaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentReqMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "InvoicePostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "checkBankAccount"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseInvoiceStatusLog": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseInvoiceStatusLogCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseInvoiceStatusLogEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Object": {
      "description": "Fields for the object. There will be fields associated with an Object, which are not all described here.",
      "properties": {
        "objectField": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllSalesTaxRateListTaxRateDetail": {
      "properties": {
        "taxOrder": {
          "format": "int32",
          "type": "integer"
        },
        "taxRateRef": {
          "$ref": "#/definitions/TaxCodeGetAllSalesTaxRateListTaxRateDetailTaxRateRef"
        },
        "taxTypeApplicable": {
          "enum": [
            "TAX_ON_AMOUNT",
            "TAX_ON_AMOUNT_PLUS_TAX",
            "TAX_ON_TAX"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PaymentMethodPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "JournalCodeGetAllMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchEmailMessagesPrefsStatementMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesAccountingInfoPrefs": {
      "properties": {
        "ClassTrackingPerTxn": {
          "type": "boolean"
        },
        "ClassTrackingPerTxnLine": {
          "type": "boolean"
        },
        "CustomerTerminology": {
          "enum": [
            "Clients",
            "Customers",
            "Donors",
            "Guests",
            "Patients",
            "Members",
            "Tenants"
          ],
          "type": "string"
        },
        "DepartmentTerminology": {
          "enum": [
            "business",
            "Departments",
            "Division",
            "Location",
            "Property",
            "Store",
            "Territory"
          ],
          "type": "string"
        },
        "TrackDepartments": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResEmailMessagesPrefsStatementMessage": {
      "properties": {
        "Message": {
          "type": "string",
          "x-samplevalue": "my statement"
        },
        "Subject": {
          "type": "string",
          "x-samplevalue": "statement"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "incomeAccount"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "ReceiptPatchPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTermGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CreditTermGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditTermGetAllCustomField"
          },
          "type": "array"
        },
        "dayOfMonthDue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "discountDayOfMonth": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "discountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60
        },
        "dueNextMonthDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "metaData": {
          "$ref": "#/definitions/CreditTermGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Net 60",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "33"
        },
        "type": {
          "enum": [
            "STANDARD",
            "DATE_DRIVEN"
          ],
          "type": "string",
          "x-samplevalue": "STANDARD"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "term",
      "type": "object"
    },
    "InvoicePostLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item. For Invoice objects in global locales: when updating Amount, remove the TxnTaxDetail element in the object before submitting it in the update request payload.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountAmount",
              "description": "discountAmount maps to amount field under line array when detailType is DISCOUNT_LINE_DETAIL"
            },
            {
              "alias": "subTotal",
              "description": "subTotal maps to amount field under line array when detailType is SUB_TOTAL_LINE_DETAIL"
            },
            {
              "alias": "lines[*].subTotal",
              "description": "lines[*].subTotal maps to amount field under line array when detailType is SALES_ITEM_LINE_DETAIL"
            }
          ]
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoicePostLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Set to SalesItemLineDetail this type of line.",
          "enum": [
            "SALES_ITEM_LINE_DETAIL",
            "SUB_TOTAL_LINE_DETAIL"
          ],
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoicePostLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation.",
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoicePostLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoicePostLineSubtotalLineDetail"
        }
      },
      "type": "object"
    },
    "RefundReceiptCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetailClassRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetailDepartmentRef"
        },
        "entity": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetailEntity"
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetailJournalCodeRef"
        },
        "postingType": {
          "type": "string"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxApplicableOn": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLineSalesItemLineDetail": {
      "properties": {
        "itemAccountRef": {
          "$ref": "#/definitions/EstimatePOSTLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "$ref": "#/definitions/EstimatePOSTLineSalesItemLineDetailItemRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "$ref": "#/definitions/EstimatePOSTLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 35.55
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchFax": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "RefundReceiptDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTermAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/ReceiptPatchTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorCreditReqAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatch": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-alias": "status"
        },
        "attachableRef": {
          "$ref": "#/definitions/EmployeePatchAttachableRef"
        },
        "billRate": {
          "description": "This attribute can only be set if billableTime is true",
          "format": "float",
          "type": "number"
        },
        "billableTime": {
          "type": "boolean"
        },
        "birthDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dob",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EmployeePatchCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "employeeNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "familyName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "lastName"
        },
        "gender": {
          "enum": [
            "MALE",
            "FEMALE"
          ],
          "type": "string",
          "x-alias": "gender"
        },
        "givenName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "firstName"
        },
        "hiredDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "hireDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/EmployeePatchMetaData"
        },
        "middleName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "middleName"
        },
        "mobile": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/EmployeePatchMobile"
        },
        "organization": {
          "type": "boolean"
        },
        "otherAddr": {
          "$ref": "#/definitions/EmployeePatchOtherAddr"
        },
        "otherContactInfo": {
          "$ref": "#/definitions/EmployeePatchOtherContactInfo"
        },
        "primaryAddr": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "$ref": "#/definitions/EmployeePatchPrimaryAddr"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/EmployeePatchPrimaryEmailAddr"
        },
        "primaryPhone": {
          "x-alias": "phone",
          "$ref": "#/definitions/EmployeePatchPrimaryPhone"
        },
        "printOnCheckName": {
          "description": "Cannot be removed with a partial (sparse) update",
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "releasedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "releaseDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "ssn": {
          "type": "string",
          "x-alias": "ssn"
        },
        "suffix": {
          "description": "At least one of the name elements must be present to use suffix",
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "title": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "salutation"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "employee",
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EmployeeAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CurrenciesGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllPurchaseEx": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllPurchaseExAny"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "attachmentsMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-16T10:59:02-08:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-16T10:59:02-08:00"
        }
      },
      "title": "MetaData",
      "type": "object",
      "x-has-customfields": false
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "incomeAccount"
        }
      },
      "type": "object"
    },
    "CreditMemoPost": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "$ref": "#/definitions/CreditMemoPostBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/CreditMemoPostBillEmail"
        },
        "classRef": {
          "$ref": "#/definitions/CreditMemoPostClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/CreditMemoPostCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/CreditMemoPostCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/CreditMemoPostCustomerRef"
        },
        "deliveryInfo": {
          "description": "Email delivery information. Returned when a request has been made to deliver email with the send operation.",
          "$ref": "#/definitions/CreditMemoPostDeliveryInfo"
        },
        "departmentRef": {
          "$ref": "#/definitions/CreditMemoPostDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/CreditMemoPostMetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/CreditMemoPostPaymentMethodRef"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remainingCredit": {
          "format": "double",
          "type": "number"
        },
        "salesTermRef": {
          "$ref": "#/definitions/CreditMemoPostSalesTermRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/CreditMemoPostShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetail"
        }
      },
      "required": [
        "customerRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "creditmemo",
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "Customer": {
      "properties": {
        "active": {
          "description": "If true, this entity is currently enabled for use by QuickBooks.If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount",
          "type": "boolean",
          "x-alias": "active"
        },
        "alternatePhone": {
          "description": "Alternate phone number.",
          "$ref": "#/definitions/CustomerAlternatePhone"
        },
        "araccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "$ref": "#/definitions/CustomerAraccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CustomerAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "description": "Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer.",
          "format": "double",
          "type": "number",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 10112
        },
        "balanceWithJobs": {
          "description": "Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.",
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "$ref": "#/definitions/CustomerBillAddr"
        },
        "billWithParent": {
          "description": "If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.",
          "type": "boolean"
        },
        "companyName": {
          "description": "The name of the company associated with the person or organization.",
          "type": "string",
          "x-alias": "name"
        },
        "currencyRef": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "$ref": "#/definitions/CustomerCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomerCustomField"
          },
          "type": "array"
        },
        "defaultTaxCodeRef": {
          "$ref": "#/definitions/CustomerDefaultTaxCodeRef"
        },
        "displayName": {
          "description": "The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update.",
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "description": "Family name or the last name of the person.",
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "fax": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerFax"
        },
        "fullyQualifiedName": {
          "description": "Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels",
          "type": "string"
        },
        "givenName": {
          "description": "Given name or first name of a person.",
          "type": "string",
          "x-alias": "contact.firstName"
        },
        "id": {
          "description": "Unique identifier for this object.",
          "type": "string",
          "x-alias": "id"
        },
        "job": {
          "description": "If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.",
          "type": "boolean"
        },
        "level": {
          "description": "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 101
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/CustomerMetaData"
        },
        "middleName": {
          "description": "Middle name of the person. The person can have zero or more middle names.",
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "mobile": {
          "description": "Mobile phone number. ",
          "$ref": "#/definitions/CustomerMobile"
        },
        "notes": {
          "description": "Free form text describing the Customer.",
          "type": "string",
          "x-alias": "description"
        },
        "openBalanceDate": {
          "format": "date",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM",
          "$ref": "#/definitions/CustomerOpenBalanceDate"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/CustomerOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/CustomerOtherContactInfo"
          },
          "type": "array"
        },
        "parentRef": {
          "description": "A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list. ",
          "$ref": "#/definitions/CustomerParentRef"
        },
        "paymentMethodRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "$ref": "#/definitions/CustomerPaymentMethodRef"
        },
        "preferredDeliveryMethod": {
          "description": "Preferred delivery method. Values are Print, Email, or None.",
          "enum": [
            "Print",
            "Email",
            "None"
          ],
          "type": "string"
        },
        "primaryEmailAddr": {
          "$ref": "#/definitions/CustomerPrimaryEmailAddr"
        },
        "primaryPhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerPrimaryPhone"
        },
        "primaryTaxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "printOnCheckName": {
          "description": "Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.",
          "type": "string"
        },
        "resaleNum": {
          "description": "Resale number or some additional info about the customer",
          "type": "string"
        },
        "salesTermRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/CustomerSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/CustomerShipAddr"
        },
        "sparse": {
          "description": "Mark as true to do a partial update of a Customer object, otherwise the full Customer object is required",
          "type": "boolean"
        },
        "suffix": {
          "description": "Suffix of the name. For example, Jr",
          "type": "string"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxExemptionReasonId": {
          "description": "The tax exemption reason associated with this customer object.",
          "type": "string"
        },
        "taxable": {
          "description": "If true, transactions for this customer are taxable. Default behaviour with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.",
          "type": "boolean"
        },
        "title": {
          "description": "Title of the person. This tag supports i18n, all locales",
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/CustomerWebAddr"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "customer",
      "type": "object"
    },
    "InvoiceGetAllResponseBillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided,          the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ReceiptPostTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditTermPutReq": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "dayOfMonthDue": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DueDays not present",
          "x-samplevalue": 1
        },
        "discountDayOfMonth": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DueDays not present",
          "x-samplevalue": 1
        },
        "discountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDays": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DayOfMonthDue not present",
          "x-samplevalue": 60
        },
        "dueNextMonthDays": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DueDays not present",
          "x-samplevalue": 1
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4"
        },
        "metaData": {
          "$ref": "#/definitions/CreditTermPutReqMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Net 60"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "type": {
          "enum": [
            "STANDARD",
            "DATE_DRIVEN"
          ],
          "type": "string",
          "x-samplevalue": "STANDARD"
        }
      },
      "required": [
        "syncToken",
        "name"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "term",
      "type": "object"
    },
    "depositsObjectLineAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPatchLineLineExAny": {
      "properties": {
        "declaredType": {
          "type": "string",
          "x-alias": "type",
          "x-samplevalue": "com.intuit.schema.finance.v3.NameValue"
        },
        "globalScope": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "{http://schema.intuit.com/finance/v3}NameValue"
        },
        "nil": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": false
        },
        "scope": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "javax.xml.bind.JAXBElement$GlobalScope"
        },
        "typeSubstituted": {
          "type": "boolean",
          "x-alias": "type",
          "x-samplevalue": false
        },
        "value": {
          "$ref": "#/definitions/PaymentPatchLineLineExAnyValue"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "preferencesListSalesFormsPrefsCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesListSalesFormsPrefsCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VendorGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "ReceiptLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxRate"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchVendorRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/BillPaymentPatchCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPostLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPostLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/RefundReceiptPatchCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/RefundReceiptPatchCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "LinkedTransactionResponse": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number",
          "x-length": 15
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string",
          "x-length": 4000
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/DescriptionLineDetailResponse"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/DiscountLineDetailResponse"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided,          the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/SalesItemLineDetailResponse"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/SubtotalLineDetailResponse"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/TaxLineDetailResponse"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseDefaultTaxCodeRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "transferGetAllLineDepositLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "type": "object"
    },
    "CurrenciesGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CurrenciesGetAllAttachableRef"
          },
          "type": "array"
        },
        "code": {
          "type": "string",
          "x-samplevalue": "INR",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CurrenciesGetAllCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4|1"
        },
        "metaData": {
          "$ref": "#/definitions/CurrenciesGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Indian Rupee"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "4"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "companyCurrency",
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPatchLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "OtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPostMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "BillPutTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryPostReqAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "settingsGetResMetaData": {
      "properties": {
        "CreateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-06-26T09:58:33-07:00"
        },
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-06-04T13:17:48-07:00"
        }
      },
      "type": "object"
    },
    "CreditMemoBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-length": 100,
          "x-samplevalue": "test@intuit.com",
          "x-sub-format": "Email"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListAccountingInfoPrefs": {
      "properties": {
        "ClassTrackingPerTxn": {
          "type": "boolean"
        },
        "ClassTrackingPerTxnLine": {
          "type": "boolean"
        },
        "CustomerTerminology": {
          "enum": [
            "Clients",
            "Customers",
            "Donors",
            "Guests",
            "Patients",
            "Members",
            "Tenants"
          ],
          "type": "string"
        },
        "DepartmentTerminology": {
          "enum": [
            "business",
            "Departments",
            "Division",
            "Location",
            "Property",
            "Store",
            "Territory"
          ],
          "type": "string"
        },
        "TrackDepartments": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "preferencesPatchEmailMessagesPrefsEstimateMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "TaxCodeSalesTaxRateListTaxRateDetail": {
      "properties": {
        "taxOrder": {
          "format": "int32",
          "type": "integer"
        },
        "taxRateRef": {
          "$ref": "#/definitions/TaxCodeSalesTaxRateListTaxRateDetailTaxRateRef"
        },
        "taxTypeApplicable": {
          "enum": [
            "TAX_ON_AMOUNT",
            "TAX_ON_AMOUNT_PLUS_TAX",
            "TAX_ON_TAX"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].bill.id",
              "description": "lines[*].bill.id will be mapped to id field under linkedTxn array when txnType is Bill",
              "path": "linkedTxn[?txnType=='Bill'].id"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentLinkedTransaction": {
      "description": "Transaction to which the current entity is related. For example, a billpayment line links to the originating bill object for which the billpayment is applied.",
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string",
          "x-sub-format": "Enum"
        }
      },
      "required": [
        "txnId",
        "txnType"
      ],
      "type": "object"
    },
    "TimeActivityGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TimeActivityGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchasePurchaseExAnyValue": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/PurchaseGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "EntityRefResponse": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/EstimateAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EstimateAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicePatchTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicePatchTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/InvoicePatchTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoicePatchTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAll": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "billAddr": {
          "$ref": "#/definitions/RefundReceiptGetAllBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/RefundReceiptGetAllBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/RefundReceiptGetAllCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/RefundReceiptGetAllClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/RefundReceiptGetAllCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/RefundReceiptGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/RefundReceiptGetAllCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/RefundReceiptGetAllCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/RefundReceiptGetAllDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllDepositToAccountRef"
        },
        "docNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "line": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/RefundReceiptGetAllMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/RefundReceiptGetAllPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/RefundReceiptGetAllRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/RefundReceiptGetAllSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/RefundReceiptGetAllShipAddr"
        },
        "shipDate": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/RefundReceiptGetAllShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "refundreceipt",
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].taxName"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "settingsGetResAccountingInfoPrefs": {
      "properties": {
        "ClassTrackingPerTxn": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ClassTrackingPerTxnLine": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CustomerTerminology": {
          "type": "string",
          "x-samplevalue": "Customers"
        },
        "TrackDepartments": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePostOtherContactInfo": {
      "properties": {
        "OtherContactInfo": {
          "items": {
            "$ref": "#/definitions/EmployeePostOtherContactInfoOtherContactInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "taxRate",
              "path": "txnTaxDetail.taxLine[*].taxLineDetail.taxPercent | [0]"
            }
          ]
        },
        "taxRateRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "BillGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TimeActivityAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TimeActivityAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "transferGetAllLineDepositLineDetailEntity": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "type": {
          "enum": [
            "CUSTOMER"
          ],
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "EstimateCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "TaxAgencyGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TxnTaxDetailBillResponse": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/TaxLineBillResponse"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number"
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/TxnTaxCodeRefResponse",
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponsePrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "taxRate",
              "path": "txnTaxDetail.taxLine[*].taxLineDetail.taxPercent | [0]"
            }
          ]
        },
        "taxRateRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetailEntity": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetailEntityEntityRef"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "BillPaymentPatchDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseShipMethodRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CustomerSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxRateGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TaxRateGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "settingsGetResEmailMessagesPrefsSalesReceiptMessage": {
      "properties": {
        "Message": {
          "type": "string",
          "x-samplevalue": "this my sale"
        },
        "Subject": {
          "type": "string",
          "x-samplevalue": "sale"
        }
      },
      "type": "object"
    },
    "CustomerPostWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "PaymentCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "preferencesEmailMessagesPrefsSalesReceiptMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllCashBackAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "CompanyChangedDataObject": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/CompanyEntities"
          },
          "type": "array"
        },
        "maxResults": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        },
        "startPosition": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "DepartmentGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/DepartmentGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/DepartmentGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPutTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/BillPutTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/BillPutTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/JournalEntryPostReqLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "journalEntryLineDetail": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetail"
        },
        "lineNum": {
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxAgencyPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TaxAgencyPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "budgetsGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/budgetsGetAllAttachableRef"
          },
          "type": "array"
        },
        "budgetDetail": {
          "items": {
            "$ref": "#/definitions/budgetsGetAllBudgetDetail"
          },
          "type": "array"
        },
        "budgetEntryType": {
          "type": "string",
          "x-samplevalue": "MONTHLY"
        },
        "budgetType": {
          "type": "string",
          "x-samplevalue": "PROFIT_AND_LOSS"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/budgetsGetAllCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "endDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-12-31T00:00:00-06:00"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1|34"
        },
        "metaData": {
          "$ref": "#/definitions/budgetsGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Demo Budget1"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "startDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-01-01T00:00:00-06:00"
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "34"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "1"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "budget",
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "transferGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "budgetsGetAllBudgetDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/budgetsGetAllBudgetDetailAccountRef"
        },
        "amount": {
          "format": "float",
          "type": "number",
          "x-samplevalue": -5241
        },
        "budgetDate": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds",
          "x-samplevalue": 1514786400000
        }
      },
      "type": "object"
    },
    "DepartmentReqAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/DepartmentReqAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/DepartmentReqAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "LedgerAccount": {
      "properties": {
        "accountAlias": {
          "type": "string"
        },
        "accountSubType": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "x-alias": "accSubCategory"
        },
        "acctNum": {
          "type": "string",
          "x-alias": "account"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/LedgerAccountAttachableRef"
          },
          "type": "array"
        },
        "classification": {
          "enum": [
            "ASSET",
            "EQUITY",
            "EXPENSE",
            "LIABILITY",
            "REVENUE"
          ],
          "type": "string",
          "x-alias": "accCategory"
        },
        "currencyRef": {
          "$ref": "#/definitions/LedgerAccountCurrencyRef"
        },
        "currentBalance": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "currentBalanceWithSubAccounts": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/LedgerAccountCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-alias": "name"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/LedgerAccountMetaData"
        },
        "name": {
          "type": "string",
          "x-alias": "accName"
        },
        "parentRef": {
          "$ref": "#/definitions/LedgerAccountParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subAccount": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/LedgerAccountTaxCodeRef"
        },
        "txnLocationType": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "account",
      "type": "object"
    },
    "RefundReceiptGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "WebAddr": {
      "properties": {
        "URI": {
          "type": "string",
          "x-samplevalue": "www.samplename.com"
        }
      },
      "title": "WebAddr",
      "type": "object",
      "x-has-customfields": false
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPatchCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "ReceiptLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrder": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/PurchaseOrderApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderAttachableRef"
          },
          "type": "array"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/PurchaseOrderCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/CodeRef"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderLinkedTxn"
          },
          "type": "array"
        },
        "memo": {
          "type": "string"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/PurchaseOrderMetaData"
        },
        "pOEmail": {
          "type": "string",
          "x-alias": "vendor.contact.email"
        },
        "postatus": {
          "type": "string",
          "x-alias": "status"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "$ref": "#/definitions/PurchaseOrderSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/PurchaseOrderShipAddr"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/PurchaseOrderShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/PurchaseOrderTxnTaxDetail"
        },
        "vendorAddr": {
          "$ref": "#/definitions/PurchaseOrderVendorAddr"
        },
        "vendorRef": {
          "$ref": "#/definitions/PurchaseOrderVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "purchaseorder",
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentMethodGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PaymentMethodGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TimeActivityVendorRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPostLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "JournalEntryLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllCreditCardPayment": {
      "properties": {
        "ccAccountRef": {
          "$ref": "#/definitions/BillPaymentGetAllCreditCardPaymentCcAccountRef"
        }
      },
      "type": "object"
    },
    "TaxRateCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string",
          "x-alias": "reference"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string",
          "x-alias": "status"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPatchCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/RefundReceiptCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/RefundReceiptCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Discounts given"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "86"
        }
      },
      "type": "object"
    },
    "budgetObject": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/budgetObjectAttachableRef"
          },
          "type": "array"
        },
        "budgetDetail": {
          "items": {
            "$ref": "#/definitions/budgetObjectBudgetDetail"
          },
          "type": "array"
        },
        "budgetEntryType": {
          "type": "string",
          "x-samplevalue": "MONTHLY"
        },
        "budgetType": {
          "type": "string",
          "x-samplevalue": "PROFIT_AND_LOSS"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/budgetObjectCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "endDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-12-31T00:00:00-06:00"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1|34"
        },
        "metaData": {
          "$ref": "#/definitions/budgetObjectMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Demo Budget1"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "startDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-01-01T00:00:00-06:00"
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "34"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "1"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "budget",
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PurchaseGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorCreditReqMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseLineCustomField"
          },
          "type": "array"
        },
        "lineEx": {
          "$ref": "#/definitions/PaymentGetAllResponseLineLineEx"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InvoicePatchAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cool Cars"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "3"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositCreateObjectLineDepositLineDetailEntity": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "type": {
          "enum": [
            "CUSTOMER"
          ],
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "depositCreateObjectLineDepositLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "ProductPostParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPostLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "InvoicePatchCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "NameValue": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchEmployeeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "CreditMemoLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodeAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "checkBankAccount"
        }
      },
      "type": "object"
    },
    "preferencesListObject": {
      "properties": {
        "AccountingInfoPrefs": {
          "$ref": "#/definitions/preferencesListAccountingInfoPrefs"
        },
        "CurrencyPrefs": {
          "$ref": "#/definitions/preferencesListCurrencyPrefs"
        },
        "EmailMessagesPrefs": {
          "$ref": "#/definitions/preferencesListEmailMessagesPrefs"
        },
        "Id": {
          "type": "string",
          "x-searchable": false
        },
        "MetaData": {
          "$ref": "#/definitions/preferencesListMetaData"
        },
        "OtherPrefs": {
          "$ref": "#/definitions/preferencesListOtherPrefs"
        },
        "ProductAndServicesPrefs": {
          "$ref": "#/definitions/preferencesListProductAndServicesPrefs"
        },
        "ReportPrefs": {
          "$ref": "#/definitions/preferencesListReportPrefs"
        },
        "SalesFormsPrefs": {
          "$ref": "#/definitions/preferencesListSalesFormsPrefs"
        },
        "SyncToken": {
          "type": "string",
          "x-searchable": false
        },
        "TaxPrefs": {
          "$ref": "#/definitions/preferencesListTaxPrefs"
        },
        "TimeTrackingPrefs": {
          "$ref": "#/definitions/preferencesListTimeTrackingPrefs"
        },
        "VendorAndPurchasesPrefs": {
          "$ref": "#/definitions/preferencesListVendorAndPurchasesPrefs"
        },
        "domain": {
          "type": "string",
          "x-searchable": false
        },
        "sparse": {
          "type": "boolean",
          "x-searchable": false
        }
      },
      "x-has-customfields": true,
      "x-primary-key": [
        "Id"
      ],
      "x-vendor-objectname": "preferences",
      "type": "object"
    },
    "ReceiptPatchBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "InvoicePatch": {
      "properties": {
        "allowIPNPayment": {
          "description": "Flag to allow payments from legacy Intuit Payment Network (IPN). Provided to maintain backward compatibility and must always be set to false.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineACHPayment": {
          "description": "Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice.If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineCreditCardPayment": {
          "description": "Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI.If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlinePayment": {
          "description": "Deprecated flag to allow online payments. In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility.If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed. In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true.If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used",
          "type": "boolean"
        },
        "applyTaxAfterDiscount": {
          "description": "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.",
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/InvoicePatchAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "description": "The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 100
        },
        "billAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/InvoicePatchBillAddr"
        },
        "billEmail": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoicePatchBillEmail"
        },
        "billEmailBcc": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoicePatchBillEmailBcc"
        },
        "billEmailCc": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoicePatchBillEmailCc"
        },
        "classRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchClassRef"
        },
        "currencyRef": {
          "description": "The full name of the currency.",
          "$ref": "#/definitions/InvoicePatchCurrencyRef"
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/InvoicePatchCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "description": "User-entered message to the customer; this message is visible to end user on their transactions.",
          "$ref": "#/definitions/InvoicePatchCustomerMemo"
        },
        "customerRef": {
          "description": "Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.",
          "$ref": "#/definitions/InvoicePatchCustomerRef"
        },
        "deliveryInfo": {
          "$ref": "#/definitions/InvoicePatchDeliveryInfo"
        },
        "departmentRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchDepartmentRef"
        },
        "deposit": {
          "description": "The deposit made towards this invoice",
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": 0
        },
        "depositToAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchDepositToAccountRef"
        },
        "docNumber": {
          "description": "Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows:If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.If Preferences:CustomTxnNumber is false and a value is supplied, that value is stored even if it is a duplicate. Recommended best practice: check the setting of Preferences:CustomTxnNumber before setting DocNumber. Sort order is ASC by default.",
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "1069"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDate": {
          "description": "Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.",
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "einvoiceStatus": {
          "type": "string"
        },
        "emailStatus": {
          "description": "Email status of the invoice. Valid values: NotSet, NeedToSend, EmailSent",
          "enum": [
            "NEED_TO_SEND",
            "NOT_SET",
            "EMAIL_SENT"
          ],
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "NOT_SET"
        },
        "exchangeRate": {
          "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef.",
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "description": "Method in which tax is applied. Allowed values are: TaxExcluded, TaxInclusive, and NotApplicable.",
          "enum": [
            "TAX_EXCLUDED",
            "TAX_INCLUSIVE",
            "NOT_APPLICABLE"
          ],
          "type": "string"
        },
        "homeBalance": {
          "description": "Convenience field containing the amount in Balance expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified and available when endpoint is evoked with the minorversion=3 query parameter.",
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "description": "Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified.",
          "format": "double",
          "type": "number"
        },
        "invoiceStatusLog": {
          "items": {
            "$ref": "#/definitions/InvoicePatchInvoiceStatusLog"
          },
          "type": "array"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/InvoicePatchLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/InvoicePatchLinkedTxn"
          },
          "type": "array"
        },
        "printStatus": {
          "enum": [
            "NOT_SET",
            "NEED_TO_PRINT",
            "PRINT_COMPLETE"
          ],
          "type": "string"
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.",
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/InvoicePatchShipAddr"
        },
        "shipDate": {
          "description": "Date for delivery of goods or services.",
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "shipMethodRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/InvoicePatchShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "trackingNum": {
          "description": "Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
          "type": "string"
        },
        "transactionLocationType": {
          "description": "The account location.",
          "enum": [
            "WithinFrance",
            "FranceOverseas",
            "OutsideFranceWithEU",
            "OutsideEU"
          ],
          "type": "string"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used. Sort order is ASC by default.",
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "description": "Used internally to specify originating source of a credit card transaction",
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/InvoicePatchTxnTaxDetail"
        }
      },
      "required": [
        "customerRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "invoice",
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "phone2"
        }
      },
      "type": "object"
    },
    "VendorPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "preferencesListTimeTrackingPrefs": {
      "properties": {
        "BillCustomers": {
          "type": "boolean"
        },
        "MarkTimeEntriesBillable": {
          "type": "boolean"
        },
        "ShowBillRateToAll": {
          "type": "boolean"
        },
        "UseServices": {
          "type": "boolean"
        },
        "WorkWeekStartDate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SalesItemLineDetailResponse": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/ClassRefResponse",
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively."
        },
        "itemRef": {
          "$ref": "#/definitions/ItemRefResponse",
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account."
        },
        "markupInfo": {
          "$ref": "#/definitions/MarkupInfoResponse",
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/TaxCodeRefResponse",
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively."
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number",
          "x-sub-format": "Money"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccoutRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "format": "bool",
          "type": "boolean"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "format": "bool",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseOrderClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerCommunicationAddr": {
      "properties": {
        "City": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "CountrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "Id": {
          "type": "string",
          "x-samplevalue": "4037"
        },
        "Line1": {
          "type": "string",
          "x-samplevalue": "1735 County Road"
        },
        "PostalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "CustomerCommunicationAddr",
      "type": "object",
      "x-has-customfields": false
    },
    "EstimatePOSTLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "NON"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoicePostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicePostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoicePostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].taxName"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "preferencesPatchSalesFormsPrefsCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReq": {
      "properties": {
        "adjustment": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqAttachableRef"
          },
          "type": "array"
        },
        "currencyRef": {
          "$ref": "#/definitions/JournalEntryPostReqCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqCustomField"
          },
          "type": "array"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryPostReqEntityRef"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryPostReqJournalCodeRef"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/JournalEntryPostReqMetaData"
        },
        "privateNote": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/JournalEntryPostReqTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "journalentry",
      "type": "object"
    },
    "ReceiptPostShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "preferencesListVendorAndPurchasesPrefsPOCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "StringValue": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Estimate": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/EstimateAttachableRef"
          },
          "type": "array"
        },
        "billAddr": {
          "$ref": "#/definitions/EstimateBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/EstimateBillEmail"
        },
        "billEmailBcc": {
          "description": "Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent.",
          "$ref": "#/definitions/EstimateBillEmailBcc"
        },
        "billEmailCc": {
          "description": "Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent.",
          "$ref": "#/definitions/EstimateBillEmailCc"
        },
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/EstimateClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/EstimateCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EstimateCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/EstimateCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/EstimateCustomerRef"
        },
        "deliveryInfo": {
          "description": "Email delivery information. Returned when a request has been made to deliver email with the send operation.",
          "$ref": "#/definitions/EstimateDeliveryInfo"
        },
        "docNumber": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "emailStatus": {
          "type": "string",
          "x-samplevalue": "NotSet"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "expirationDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-03-26T13:25:05-07:00"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 324.17
        },
        "id": {
          "type": "string",
          "x-samplevalue": "177"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/EstimateLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/EstimateLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/EstimateMetaData"
        },
        "printStatus": {
          "type": "string",
          "x-samplevalue": "NeedToPrint"
        },
        "privateNote": {
          "type": "string"
        },
        "shipAddr": {
          "$ref": "#/definitions/EstimateShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 31.5
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-12T00:00:00+05:30"
        },
        "txnStatus": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "Estimate",
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllRemitToAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "description": "The amount processed using the credit card.",
          "$ref": "#/definitions/PaymentGetAllResponseCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "$ref": "#/definitions/PaymentGetAllResponseCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchVendorAndPurchasesPrefsPOCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JournalEntryLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateLineSalesItemLineDetail": {
      "properties": {
        "itemAccountRef": {
          "$ref": "#/definitions/EstimateLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "$ref": "#/definitions/EstimateLineSalesItemLineDetailItemRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "$ref": "#/definitions/EstimateLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 35.55
        }
      },
      "type": "object"
    },
    "BillPutLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPutLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPutLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentEntities": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicecustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-samplevalue": "ohrpkrtwbipfad3oko6r (deleted)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "296"
        },
        "metaData": {
          "$ref": "#/definitions/MetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "ohrpkrtwbipfad3oko6r (deleted)"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "subDepartment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "2"
        }
      },
      "title": "DepartmentEntities",
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/InvoiceGetAllResponseTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "PurchaseOrderCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "currency"
        }
      },
      "type": "object"
    },
    "ReceiptPostTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAll": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TimeActivityGetAllAttachableRef"
          },
          "type": "array"
        },
        "billableStatus": {
          "enum": [
            "BILLABLE",
            "NOT_BILLABLE"
          ],
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "breakHours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "breakMinutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "classRef": {
          "$ref": "#/definitions/TimeActivityGetAllClassRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityGetAllCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/TimeActivityGetAllCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/TimeActivityGetAllDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "employeeRef": {
          "$ref": "#/definitions/TimeActivityGetAllEmployeeRef"
        },
        "endTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "hourlyRate": {
          "format": "int32",
          "type": "integer",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "hours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "itemRef": {
          "$ref": "#/definitions/TimeActivityGetAllItemRef"
        },
        "metaData": {
          "$ref": "#/definitions/TimeActivityGetAllMetaData"
        },
        "minutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "nameOf": {
          "enum": [
            "EMPLOYEE",
            "VENDOR"
          ],
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "startTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "timeZone": {
          "description": "This value is not used and will not be returned",
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "vendorRef": {
          "$ref": "#/definitions/TimeActivityGetAllVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "timeactivity",
      "type": "object"
    },
    "JournalEntryPostReqAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListEmailMessagesPrefsInvoiceMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseReqAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PurchaseReqAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeSalesTaxRateList": {
      "properties": {
        "taxRateDetail": {
          "items": {
            "$ref": "#/definitions/TaxCodeSalesTaxRateListTaxRateDetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CustomerPatchWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "InvoicePatchSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllEffectiveTaxRate": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/DepositsGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/VendorGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRateAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxRateAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TaxRateAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "InvoicePostBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "ReceiptCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "VendorCreditCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "TaxAgencyGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "BillGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResVendorAndPurchasesPrefsPOCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/settingsGetResVendorAndPurchasesPrefsPOCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "DepartmentAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/JournalEntryPostReqTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "preferencesSalesFormsPrefsDefaultTerms": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostOtherContactInfo": {
      "properties": {
        "OtherContactInfo": {
          "items": {
            "$ref": "#/definitions/TaxAgencyPostOtherContactInfoOtherContactInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "transferCreateObject": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 500
        },
        "currencyRef": {
          "$ref": "#/definitions/transferCreateObjectCurrencyRef"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "fromAccountRef": {
          "$ref": "#/definitions/transferCreateObjectFromAccountRef"
        },
        "toAccountRef": {
          "$ref": "#/definitions/transferCreateObjectToAccountRef"
        }
      },
      "required": [
        "amount",
        "toAccountRef",
        "fromAccountRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "transfer",
      "type": "object"
    },
    "depositsObjectCashBack": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/depositsObjectCashBackAccountRef"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 12.5
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "cash back Memo 1611"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodeAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalCodeAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalCodeAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicecurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "InvoicecurrencyRef",
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutDepartmentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "BillPostLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "purchase-order.id",
              "description": "purchase-order.id maps to txnId field under linkedTxn array when txnType is PurchaseOrder"
            },
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is BillPaymentCheck"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/ReceiptPatchCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/ReceiptPatchCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPost": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "$ref": "#/definitions/RefundReceiptPostBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/RefundReceiptPostBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/RefundReceiptPostCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/RefundReceiptPostClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/RefundReceiptPostCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/RefundReceiptPostCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/RefundReceiptPostCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/RefundReceiptPostCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/RefundReceiptPostDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostDepositToAccountRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/RefundReceiptPostMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/RefundReceiptPostPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/RefundReceiptPostRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/RefundReceiptPostSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/RefundReceiptPostShipAddr"
        },
        "shipDate": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/RefundReceiptPostShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/RefundReceiptPostTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/RefundReceiptPostTxnTaxDetail"
        }
      },
      "required": [
        "depositToAccountRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "refundreceipt",
      "type": "object"
    },
    "VendorGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "ReceiptLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineJournalEntryLineDetailEntityEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseDepartmentRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchSalesTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Pest Control"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "10.23"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseRemitToAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "markUpIncomeAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        }
      },
      "type": "object"
    },
    "BillPutLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "objectsMetadataFields": {
      "properties": {
        "mask": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vendorDisplayName": {
          "type": "string"
        },
        "vendorPath": {
          "type": "string"
        },
        "vendorReadOnly": {
          "type": "boolean"
        },
        "vendorRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "metaDataGET": {
      "properties": {
        "CreateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-06-26T09:58:33-07:00"
        },
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-04-12T04:19:49-07:00"
        }
      },
      "title": "metaDataGET",
      "type": "object",
      "x-has-customfields": false
    },
    "ProductPatchPrefVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "BillPostTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPostTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/BillPostTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/BillPostTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "bulkDownloadRequest": {
      "properties": {
        "apiLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "continueFromJobId": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "docsHubDetails": {
          "$ref": "#/definitions/bulkDownloadRequestDocsHubDetails"
        },
        "filterDateField": {
          "type": "string",
          "x-samplevalue": "lastModifiedDate"
        },
        "filterNulls": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "format": {
          "enum": [
            "application/json",
            "txt/csv",
            "application/jsonl"
          ],
          "type": "string",
          "x-samplevalue": "application/json"
        },
        "from": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-06T13:22:17-08:00"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 107
        },
        "notificationUrl": {
          "type": "string",
          "x-samplevalue": "https://myreceiver.com/whatever"
        },
        "objectName": {
          "type": "string",
          "x-samplevalue": "accounts"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "query": {
          "$ref": "#/definitions/bulkDownloadRequestQuery"
        },
        "selectFields": {
          "type": "string",
          "x-samplevalue": "a,b,c"
        },
        "to": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-10T13:22:17-08:00"
        },
        "where": {
          "type": "string",
          "x-samplevalue": "name='Alex' and gender='male'"
        }
      },
      "required": [
        "objectName",
        "format"
      ],
      "title": "bulkDownloadRequest",
      "type": "object"
    },
    "PurchaseOrderPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxRate"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPatchIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "incomeAccount"
        }
      },
      "type": "object"
    },
    "BillPostTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Customerfax": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-samplevalue": "(214) 111-2222"
        }
      },
      "title": "Customerfax",
      "type": "object"
    },
    "ProductGetAllResponseAssetAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "assetAccount"
        }
      },
      "type": "object"
    },
    "JournalCode": {
      "properties": {
        "Description": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/JournalCodeAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalCodeCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2"
        },
        "metaData": {
          "$ref": "#/definitions/JournalCodeMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "VT"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string"
        },
        "time": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
          "x-samplevalue": "2015-12-16T11:01:37.346-07:00"
        },
        "type": {
          "enum": [
            "Expenses",
            "Sales",
            "Bank",
            "Nouveaux",
            "Wages",
            "Cash",
            "Others"
          ],
          "type": "string",
          "x-samplevalue": "Sales"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "JournalCode",
      "type": "object"
    },
    "companyAddr": {
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countrySubDivisionCode": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-readOnly": true
        },
        "lat": {
          "type": "string",
          "x-readOnly": true
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "line4": {
          "type": "string"
        },
        "line5": {
          "type": "string"
        },
        "long": {
          "type": "string",
          "x-readOnly": true
        },
        "postalCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPostLineLineEx": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/PaymentPostLineLineExAny"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TaxRateTaxReturnLineRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentReqCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptGetAllLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "preferencesPatchProductAndServicesPrefs": {
      "properties": {
        "ForPurchase": {
          "type": "boolean"
        },
        "ForSales": {
          "type": "boolean"
        },
        "QuantityOnHand": {
          "type": "boolean"
        },
        "QuantityWithPriceAndRate": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CustomerPostPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "swaggerparametersschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact",
          "type": "string"
        }
      }
    },
    "CreditMemoGetAllLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicebillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Denver"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CO"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5139"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "1310 South Sherman Street"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "80210"
        }
      },
      "title": "InvoicebillAddr",
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductChangedDataObject": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/ProductEntitiesChangeData"
          },
          "type": "array"
        },
        "maxResults": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        },
        "startPosition": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/InvoiceTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/InvoiceTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "checkBankAccount"
        }
      },
      "type": "object"
    },
    "VendorPatchPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseUQCId": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "inventoryStockUom"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostSalesTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatchPrimaryAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "address.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "address.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line3",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "address.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "ReceiptPostTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/ReceiptPostTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/ReceiptPostTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetailJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "RefundReceiptPatchSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger400": {
      "x-has-customfields": false,
      "type": "object",
      "title": "400",
      "properties": {
        "description": {
          "x-samplevalue": "Bad Request - Often due to a missing request parameter",
          "type": "string"
        }
      }
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "swagger401": {
      "x-has-customfields": false,
      "type": "object",
      "title": "401",
      "properties": {
        "description": {
          "x-samplevalue": "Unauthorized - An invalid element token, user secret and/or org secret provided",
          "type": "string"
        }
      }
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger403": {
      "x-has-customfields": false,
      "type": "object",
      "title": "403",
      "properties": {
        "description": {
          "x-samplevalue": "Forbidden - Access to the resource by the provider is forbidden",
          "type": "string"
        }
      }
    },
    "ReceiptPostLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger404": {
      "x-has-customfields": false,
      "type": "object",
      "title": "404",
      "properties": {
        "description": {
          "x-samplevalue": "Not found - The requested resource is not found",
          "type": "string"
        }
      }
    },
    "swagger405": {
      "x-has-customfields": false,
      "type": "object",
      "title": "405",
      "properties": {
        "description": {
          "x-samplevalue": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected",
          "type": "string"
        }
      }
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "currencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-name": true,
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD",
          "x-sub-format": "Enum"
        }
      },
      "title": "currencyRef",
      "type": "object",
      "x-has-customfields": false
    },
    "TaxLineBillResponse": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransaction"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/TaxLineDetailResponse"
        }
      },
      "type": "object"
    },
    "swagger406": {
      "x-has-customfields": false,
      "type": "object",
      "title": "406",
      "properties": {
        "description": {
          "x-samplevalue": "Not acceptable - The response content type does not match the 'Accept' header value",
          "type": "string"
        }
      }
    },
    "ReceiptShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger409": {
      "x-has-customfields": false,
      "type": "object",
      "title": "409",
      "properties": {
        "description": {
          "x-samplevalue": "Conflict - If a resource being created already exists",
          "type": "string"
        }
      }
    },
    "BillPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListVendorAndPurchasesPrefs": {
      "properties": {
        "BillableExpenseTracking": {
          "type": "boolean"
        },
        "DefaultMarkup": {
          "format": "double",
          "type": "number"
        },
        "DefaultTerms": {
          "$ref": "#/definitions/preferencesListVendorAndPurchasesPrefsDefaultTerms"
        },
        "POCustomField": {
          "items": {
            "$ref": "#/definitions/preferencesListVendorAndPurchasesPrefsPOCustomField"
          },
          "type": "array"
        },
        "TrackingByCustomer": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "taxId"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "TxnTaxCodeRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "ProductPostIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "incomeAccount"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceCustomerMemo": {
      "properties": {
        "value": {
          "description": "maximum 1000 chars, default is null User-entered message to the customer; this message is visible to the end user on their transactions.",
          "type": "string",
          "x-samplevalue": "Thank you for your business and have a great day!"
        }
      },
      "type": "object"
    },
    "CustomerPatchAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "settingsGetResEmailMessagesPrefs": {
      "properties": {
        "EstimateMessage": {
          "$ref": "#/definitions/settingsGetResEmailMessagesPrefsEstimateMessage"
        },
        "InvoiceMessage": {
          "$ref": "#/definitions/settingsGetResEmailMessagesPrefsInvoiceMessage"
        },
        "SalesReceiptMessage": {
          "$ref": "#/definitions/settingsGetResEmailMessagesPrefsSalesReceiptMessage"
        },
        "StatementMessage": {
          "$ref": "#/definitions/settingsGetResEmailMessagesPrefsStatementMessage"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "taxId"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "preferences": {
      "properties": {
        "AccountingInfoPrefs": {
          "$ref": "#/definitions/preferencesAccountingInfoPrefs"
        },
        "CurrencyPrefs": {
          "$ref": "#/definitions/preferencesCurrencyPrefs"
        },
        "EmailMessagesPrefs": {
          "$ref": "#/definitions/preferencesEmailMessagesPrefs"
        },
        "Id": {
          "type": "string"
        },
        "MetaData": {
          "$ref": "#/definitions/preferencesMetaData"
        },
        "OtherPrefs": {
          "$ref": "#/definitions/preferencesOtherPrefs"
        },
        "ProductAndServicesPrefs": {
          "$ref": "#/definitions/preferencesProductAndServicesPrefs"
        },
        "ReportPrefs": {
          "$ref": "#/definitions/preferencesReportPrefs"
        },
        "SalesFormsPrefs": {
          "$ref": "#/definitions/preferencesSalesFormsPrefs"
        },
        "SyncToken": {
          "type": "string"
        },
        "TaxPrefs": {
          "$ref": "#/definitions/preferencesTaxPrefs"
        },
        "TimeTrackingPrefs": {
          "$ref": "#/definitions/preferencesTimeTrackingPrefs"
        },
        "VendorAndPurchasesPrefs": {
          "$ref": "#/definitions/preferencesVendorAndPurchasesPrefs"
        },
        "domain": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        }
      },
      "x-has-customfields": true,
      "x-primary-key": [
        "Id"
      ],
      "x-vendor-objectname": "preferences",
      "type": "object"
    },
    "EmployeeAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EmployeeAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CompanyprimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-samplevalue": "650-555-1234"
        }
      },
      "title": "CompanyprimaryPhone",
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxAgencyOtherContactInfoOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/DepartmentGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/DepartmentGetAllCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "LIKE"
          ]
        },
        "metaData": {
          "x-searchable": true,
          "$ref": "#/definitions/DepartmentGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "parentRef": {
          "$ref": "#/definitions/DepartmentGetAllParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subDepartment": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "department",
      "type": "object"
    },
    "CompanycustomerCommunicationAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4037"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "1735 County Road"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "CompanycustomerCommunicationAddr",
      "type": "object"
    },
    "ReceiptPostLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptPostLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "preferencesPatchSalesFormsPrefs": {
      "properties": {
        "AllowDeposit": {
          "type": "boolean"
        },
        "AllowDiscount": {
          "type": "boolean"
        },
        "AllowEstimates": {
          "type": "boolean"
        },
        "AllowServiceDate": {
          "type": "boolean"
        },
        "AllowShipping": {
          "type": "boolean"
        },
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesPatchSalesFormsPrefsCustomField"
          },
          "type": "array"
        },
        "CustomTxnNumbers": {
          "type": "boolean"
        },
        "DefaultCustomerMessage": {
          "type": "string"
        },
        "DefaultDiscountAccount": {
          "type": "string"
        },
        "DefaultShippingAccount": {
          "type": "string"
        },
        "DefaultTerms": {
          "$ref": "#/definitions/preferencesPatchSalesFormsPrefsDefaultTerms"
        },
        "ETransactionAttachPDF": {
          "type": "boolean"
        },
        "ETransactionEnabledStatus": {
          "type": "string"
        },
        "ETransactionPaymentEnabled": {
          "type": "boolean"
        },
        "EmailCopyToCompany": {
          "type": "boolean"
        },
        "IPNSupportEnabled": {
          "type": "boolean"
        },
        "SalesEmailBcc": {
          "type": "string"
        },
        "SalesEmailCc": {
          "type": "string"
        },
        "UsingPriceLevels": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorGetAllWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "bulkDownloadRequestQuery": {
      "properties": {
        "anyKey": {
          "type": "string",
          "x-samplevalue": "anyValue"
        }
      },
      "title": "query",
      "type": "object"
    },
    "BillPutTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoicePostTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicePostTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/InvoicePostTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoicePostTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "swagger415": {
      "x-has-customfields": false,
      "type": "object",
      "title": "415",
      "properties": {
        "description": {
          "x-samplevalue": "Unsupported media type - The server cannot handle the requested Content-Type",
          "type": "string"
        }
      }
    },
    "BillPutTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/BillPutTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/BillPutTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "InvoiceAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoiceAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoiceAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "PurchaseTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAll": {
      "properties": {
        "accountAlias": {
          "type": "string"
        },
        "accountSubType": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "accountType": {
          "type": "string",
          "x-alias": "accSubCategory",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "acctNum": {
          "type": "string",
          "x-alias": "account"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/LedgerAccountGetAllAttachableRef"
          },
          "type": "array"
        },
        "classification": {
          "enum": [
            "ASSET",
            "EQUITY",
            "EXPENSE",
            "LIABILITY",
            "REVENUE"
          ],
          "type": "string",
          "x-alias": "accCategory",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "currencyRef": {
          "$ref": "#/definitions/LedgerAccountGetAllCurrencyRef"
        },
        "currentBalance": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "currentBalanceWithSubAccounts": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/LedgerAccountGetAllCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "description",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-alias": "name",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "="
          ]
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/LedgerAccountGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-alias": "accName",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "parentRef": {
          "$ref": "#/definitions/LedgerAccountGetAllParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subAccount": {
          "type": "boolean",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "syncToken": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/LedgerAccountGetAllTaxCodeRef"
        },
        "txnLocationType": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "account",
      "type": "object"
    },
    "BillPostLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetailDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanyAddr": {
      "properties": {
        "City": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "CountrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "Id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "Lat": {
          "type": "string",
          "x-samplevalue": "29.3755352"
        },
        "Line1": {
          "type": "string",
          "x-samplevalue": "1735 County Road"
        },
        "Long": {
          "type": "string",
          "x-samplevalue": "-98.5052734"
        },
        "PostalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "CompanyAddr",
      "type": "object",
      "x-has-customfields": false
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "preferencesListEmailMessagesPrefsEstimateMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePostDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/EstimateTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/transferGetObjectAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/transferGetObjectAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "swagger-contacts-path": {
      "x-has-customfields": false,
      "type": "object",
      "title": "/contacts",
      "properties": {
        "post": {
          "$ref": "#/definitions/swaggerpost"
        }
      }
    },
    "CreditMemoTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorCreditReqAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "TaxAgencyMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTermGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderPostLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllTaxReturnLineRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "preferencesVendorAndPurchasesPrefsDefaultTerms": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPatchLineLineExAnyValue": {
      "properties": {
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "txnId"
        },
        "Value": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "36"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "InvoiceLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAll": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillPaymentGetAllApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/BillPaymentGetAllAttachableRef"
          },
          "type": "array"
        },
        "checkPayment": {
          "$ref": "#/definitions/BillPaymentGetAllCheckPayment"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/BillPaymentGetAllCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillPaymentGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentGetAllCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillPaymentGetAllDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillPaymentGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/BillPaymentGetAllMetaData"
        },
        "payType": {
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "processBillPayment": {
          "type": "boolean"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "vendorRef": {
          "$ref": "#/definitions/BillPaymentGetAllVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "billpayment",
      "type": "object"
    },
    "InvoicePost": {
      "properties": {
        "allowIPNPayment": {
          "description": "Flag to allow payments from legacy Intuit Payment Network (IPN). Provided to maintain backward compatibility and must always be set to false.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineACHPayment": {
          "description": "Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice.If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineCreditCardPayment": {
          "description": "Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI.If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlinePayment": {
          "description": "Deprecated flag to allow online payments. In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility.If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed. In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true.If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used",
          "type": "boolean"
        },
        "applyTaxAfterDiscount": {
          "description": "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.",
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/InvoicePostAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "description": "The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 100
        },
        "billAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/InvoicePostBillAddr"
        },
        "billEmail": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoicePostBillEmail"
        },
        "billEmailBcc": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoicePostBillEmailBcc"
        },
        "billEmailCc": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoicePostBillEmailCc"
        },
        "classRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostClassRef"
        },
        "currencyRef": {
          "description": "The full name of the currency.",
          "$ref": "#/definitions/InvoicePostCurrencyRef"
        },
        "customerMemo": {
          "description": "User-entered message to the customer; this message is visible to end user on their transactions.",
          "$ref": "#/definitions/InvoicePostCustomerMemo"
        },
        "customerRef": {
          "description": "Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.",
          "$ref": "#/definitions/InvoicePostCustomerRef"
        },
        "deliveryInfo": {
          "$ref": "#/definitions/InvoicePostDeliveryInfo"
        },
        "departmentRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostDepartmentRef"
        },
        "deposit": {
          "description": "The deposit made towards this invoice",
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": 0
        },
        "depositToAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostDepositToAccountRef"
        },
        "docNumber": {
          "description": "Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows:If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.If Preferences:CustomTxnNumber is false and a value is supplied, that value is stored even if it is a duplicate. Recommended best practice: check the setting of Preferences:CustomTxnNumber before setting DocNumber. Sort order is ASC by default.",
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "1069"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDate": {
          "description": "Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.",
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "einvoiceStatus": {
          "type": "string"
        },
        "emailStatus": {
          "description": "Email status of the invoice. Valid values: NotSet, NeedToSend, EmailSent",
          "enum": [
            "NEED_TO_SEND",
            "NOT_SET",
            "EMAIL_SENT"
          ],
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "NOT_SET"
        },
        "exchangeRate": {
          "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef.",
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "description": "Method in which tax is applied. Allowed values are: TaxExcluded, TaxInclusive, and NotApplicable.",
          "enum": [
            "TAX_EXCLUDED",
            "TAX_INCLUSIVE",
            "NOT_APPLICABLE"
          ],
          "type": "string"
        },
        "homeBalance": {
          "description": "Convenience field containing the amount in Balance expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified and available when endpoint is evoked with the minorversion=3 query parameter.",
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "description": "Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified.",
          "format": "double",
          "type": "number"
        },
        "invoiceStatusLog": {
          "items": {
            "$ref": "#/definitions/InvoicePostInvoiceStatusLog"
          },
          "type": "array"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/InvoicePostLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/InvoicePostLinkedTxn"
          },
          "type": "array"
        },
        "printStatus": {
          "enum": [
            "NOT_SET",
            "NEED_TO_PRINT",
            "PRINT_COMPLETE"
          ],
          "type": "string"
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.",
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/InvoicePostShipAddr"
        },
        "shipDate": {
          "description": "Date for delivery of goods or services.",
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "shipMethodRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/InvoicePostShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "trackingNum": {
          "description": "Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
          "type": "string"
        },
        "transactionLocationType": {
          "description": "The account location.",
          "enum": [
            "WithinFrance",
            "FranceOverseas",
            "OutsideFranceWithEU",
            "OutsideEU"
          ],
          "type": "string"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used. Sort order is ASC by default.",
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "description": "Used internally to specify originating source of a credit card transaction",
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/InvoicePostTxnTaxDetail"
        }
      },
      "required": [
        "customerRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "invoice",
      "type": "object"
    },
    "RefundReceiptPatchLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "type": "object"
    },
    "VendorPatchCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositCreateObjectDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/RefundReceiptPostTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePostLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "JournalEntryAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "preferencesTaxPrefsTaxGroupCodeRef": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPatchExpenseAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "expenseAccount"
        }
      },
      "type": "object"
    },
    "TaxCodePurchaseTaxRateList": {
      "properties": {
        "taxRateDetail": {
          "items": {
            "$ref": "#/definitions/TaxCodePurchaseTaxRateListTaxRateDetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseInvoiceStatusLogCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentLineResponse": {
      "description": "Zero or more transactions accounting for this payment. Values for Line.LinkedTxn.TxnTypecan be one of the following:\n\n    Expense--Payment is reimbursement for expense paid by cash made on behalf of the customer\n    Check--Payment is reimbursement for expense paid by check made on behalf of the customer\n    CreditCardCredit--Payment is reimbursement for a credit card credit made on behalf of the customer\n    JournalEntry--Payment is linked to the representative journal entry\n    CreditMemo--Payment is linked to the credit memo the customer has with the business\n    Invoice--The invoice to which payment is applied\n",
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number",
          "x-sub-format": "Money"
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "lineEx": {
          "$ref": "#/definitions/LineExPaymentLine"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransactionResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ReceiptTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/ReceiptTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/ReceiptTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicetaxRateRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "25"
        }
      },
      "title": "InvoicetaxRateRef",
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "email"
        }
      },
      "type": "object"
    },
    "Receipt": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/ReceiptAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "int32",
          "type": "integer"
        },
        "billAddr": {
          "$ref": "#/definitions/ReceiptBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/ReceiptBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/ReceiptCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/ReceiptClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/ReceiptCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/ReceiptCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/ReceiptCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/ReceiptCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/ReceiptDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/ReceiptDepositToAccountRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/ReceiptLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/ReceiptMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/ReceiptPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/ReceiptRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/ReceiptSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/ReceiptShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/ReceiptShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/ReceiptTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/ReceiptTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "salesreceipt",
      "type": "object"
    },
    "budgetObjectCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ProductAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillPaymentCreditCardPayment": {
      "properties": {
        "ccAccountRef": {
          "$ref": "#/definitions/BillPaymentCreditCardPaymentCcAccountRef"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectLineDepositLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/ReceiptPostCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/ReceiptPostCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoBillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Vendor": {
      "properties": {
        "acctNum": {
          "type": "string",
          "x-alias": "account"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active"
        },
        "alternatePhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/VendorAlternatePhone"
        },
        "apaccountRef": {
          "$ref": "#/definitions/VendorApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/VendorAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount"
        },
        "billAddr": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "$ref": "#/definitions/VendorBillAddr"
        },
        "billRate": {
          "format": "float",
          "type": "number"
        },
        "companyName": {
          "type": "string",
          "x-alias": "name"
        },
        "currencyRef": {
          "$ref": "#/definitions/VendorCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "fax": {
          "$ref": "#/definitions/VendorFax"
        },
        "givenName": {
          "type": "string",
          "x-alias": "contact.firstName"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/VendorMetaData"
        },
        "middleName": {
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "mobile": {
          "$ref": "#/definitions/VendorMobile"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/VendorOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/VendorOtherContactInfo"
          },
          "type": "array"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/VendorPrimaryEmailAddr"
        },
        "primaryPhone": {
          "$ref": "#/definitions/VendorPrimaryPhone"
        },
        "printOnCheckName": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "suffix": {
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "taxReportingBasis": {
          "type": "string"
        },
        "termRef": {
          "$ref": "#/definitions/VendorTermRef"
        },
        "title": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "vendor1099": {
          "type": "boolean"
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/VendorWebAddr"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "vendor",
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/JournalEntryTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "InvoicePatchTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "taxRate",
              "path": "txnTaxDetail.taxLine[*].taxLineDetail.taxPercent | [0]"
            }
          ]
        },
        "taxRateRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicetaxLine": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 22.95
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string",
          "x-samplevalue": "TAX_LINE_DETAIL"
        },
        "linkedTxn": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoicetaxLineDetail"
        }
      },
      "title": "InvoicetaxLine",
      "type": "object"
    },
    "RefundReceiptGetAllClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "companies": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRef"
          },
          "type": "array"
        },
        "companyAddr": {
          "$ref": "#/definitions/companyAddr"
        },
        "companyName": {
          "type": "string"
        },
        "companyStartDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "country": {
          "type": "string"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "customerCommunicationAddr": {
          "$ref": "#/definitions/customerCommunicationAddr"
        },
        "domain": {
          "type": "string"
        },
        "email": {
          "$ref": "#/definitions/email"
        },
        "fiscalYearStartMonth": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-name": true
        },
        "legalAddr": {
          "$ref": "#/definitions/legalAddr"
        },
        "legalName": {
          "type": "string"
        },
        "metaData": {
          "$ref": "#/definitions/MetaData"
        },
        "nameValue": {
          "items": {
            "$ref": "#/definitions/NameValue"
          },
          "type": "array"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/OtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/OtherContactInfo"
          },
          "type": "array"
        },
        "primaryPhone": {
          "$ref": "#/definitions/PhoneNumber"
        },
        "sparse": {
          "type": "boolean"
        },
        "supportedLanguages": {
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "webAddr": {
          "$ref": "#/definitions/webSiteAddr"
        },
        "webSite": {
          "$ref": "#/definitions/webSiteAddr"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "companyinfo",
      "type": "object"
    },
    "depositCreateObjectLine": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/depositCreateObjectLineAccountRef"
        },
        "amount": {
          "format": "float",
          "type": "number",
          "x-samplevalue": 1200
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/depositCreateObjectLineCustomField"
          },
          "type": "array"
        },
        "depositLineDetail": {
          "$ref": "#/definitions/depositCreateObjectLineDepositLineDetail"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Interest"
        },
        "detailType": {
          "enum": [
            "DEPOSIT_LINE_DETAIL"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/depositCreateObjectLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptPatchLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptPatchLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorPost": {
      "properties": {
        "acctNum": {
          "type": "string",
          "x-alias": "account"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active"
        },
        "alternatePhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/VendorPostAlternatePhone"
        },
        "apaccountRef": {
          "$ref": "#/definitions/VendorPostApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/VendorPostAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount"
        },
        "billAddr": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "$ref": "#/definitions/VendorPostBillAddr"
        },
        "companyName": {
          "type": "string",
          "x-alias": "name"
        },
        "currencyRef": {
          "$ref": "#/definitions/VendorPostCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorPostCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "fax": {
          "$ref": "#/definitions/VendorPostFax"
        },
        "givenName": {
          "type": "string",
          "x-alias": "contact.firstName"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/VendorPostMetaData"
        },
        "middleName": {
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "mobile": {
          "$ref": "#/definitions/VendorPostMobile"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/VendorPostOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/VendorPostOtherContactInfo"
          },
          "type": "array"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/VendorPostPrimaryEmailAddr"
        },
        "primaryPhone": {
          "$ref": "#/definitions/VendorPostPrimaryPhone"
        },
        "printOnCheckName": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "suffix": {
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "taxReportingBasis": {
          "type": "string"
        },
        "termRef": {
          "$ref": "#/definitions/VendorPostTermRef"
        },
        "title": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "vendor1099": {
          "type": "boolean"
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/VendorPostWebAddr"
        }
      },
      "required": [
        "displayName"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "vendor",
      "type": "object"
    },
    "DepartmentGetAllParentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptPatchClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "CreditMemoDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/JournalEntryGetAllLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "transferGetObjectCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "BillGetAllTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "double",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "double",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "double",
          "type": "number"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TaxLineDetailResponse": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/TaxRateRefResponse"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "format": "double",
          "type": "number"
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CustomerPatchPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "VendorPatchFax": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "budgetObjectBudgetDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/PurchaseGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesEmailMessagesPrefsStatementMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetAllLineDepositLineDetailPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllPurchaseTaxRateListTaxRateDetail": {
      "properties": {
        "taxOrder": {
          "format": "int32",
          "type": "integer"
        },
        "taxRateRef": {
          "$ref": "#/definitions/TaxCodeGetAllPurchaseTaxRateListTaxRateDetailTaxRateRef"
        },
        "taxTypeApplicable": {
          "enum": [
            "TAX_ON_AMOUNT",
            "TAX_ON_AMOUNT_PLUS_TAX",
            "TAX_ON_TAX"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoicecustomField": {
      "properties": {
        "definitionId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "PO Number"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "STRING_TYPE"
        }
      },
      "title": "InvoicecustomField",
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].taxName"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/BillTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/BillTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseReqMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "TaxAgencyAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxAgencyAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TaxAgencyAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "webSiteAddr": {
      "description": "Website address.",
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-length": 1000,
          "x-sub-format": "URL"
        }
      },
      "type": "object"
    },
    "CompanyCurrencyEntities": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRef"
          },
          "type": "array"
        },
        "code": {
          "type": "string",
          "x-samplevalue": "GBP"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicecustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "metaData": {
          "$ref": "#/definitions/MetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "British Pound Sterling"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "1"
        }
      },
      "title": "CompanyCurrencyEntities",
      "type": "object"
    },
    "TimeActivityPatchDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptGetAllLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/ClassGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ClassGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseCustomerMemo": {
      "properties": {
        "value": {
          "description": "maximum 1000 chars, default is null User-entered message to the customer; this message is visible to the end user on their transactions.",
          "type": "string",
          "x-samplevalue": "Thank you for your business and have a great day!"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/PurchaseOrderLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "type": "object"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseOrderLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "PurchaseReqEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "markUpIncomeAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        }
      },
      "type": "object"
    },
    "InvoiceEntities": {
      "properties": {
        "allowIPNPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineACHPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineCreditCardPayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlinePayment": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "applyTaxAfterDiscount": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 324.17
        },
        "billAddr": {
          "$ref": "#/definitions/InvoicebillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/InvoicebillEmail"
        },
        "currencyRef": {
          "$ref": "#/definitions/InvoicecurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicecustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/InvoicecustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/InvoicecustomerRef"
        },
        "deposit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "docNumber": {
          "type": "string",
          "x-samplevalue": "7042"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1526063400000
        },
        "emailStatus": {
          "type": "string",
          "x-samplevalue": "NOT_SET"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "homeBalance": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 324.17
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 324.17
        },
        "id": {
          "type": "string",
          "x-samplevalue": "6302"
        },
        "invoiceStatusLog": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/InvoiceLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/MetaData"
        },
        "printStatus": {
          "type": "string",
          "x-samplevalue": "NEED_TO_PRINT"
        },
        "salesTermRef": {
          "$ref": "#/definitions/InvoicesalesTermRef"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 324.17
        },
        "txnDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1523471400000
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/InvoicetxnTaxDetail"
        }
      },
      "title": "InvoiceEntities",
      "type": "object"
    },
    "BillPaymentPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/PurchaseReqTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "TaxAgencyAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditGetAllLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/VendorCreditGetAllLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/JournalEntryPatchLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "journalEntryLineDetail": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetail"
        },
        "lineNum": {
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PurchaseCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].bill.id",
              "description": "lines[*].bill.id will be mapped to id field under linkedTxn array when txnType is Bill",
              "path": "linkedTxn[?txnType=='Bill'].id"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "transferCreateObjectToAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "InvoicetxnTaxCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "title": "InvoicetxnTaxCodeRef",
      "type": "object"
    },
    "ReceiptGetAllCheckPayment": {
      "properties": {
        "CheckNum": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "acctNum": {
          "type": "boolean"
        },
        "bankName": {
          "type": "string"
        },
        "nameOnAcct": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided,          the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "InvoiceLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoiceLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "VendorCreditReq": {
      "properties": {
        "apaccountRef": {
          "$ref": "#/definitions/VendorCreditReqApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/VendorCreditReqAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "currencyRef": {
          "$ref": "#/definitions/VendorCreditReqCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditReqCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/VendorCreditReqDepartmentRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/VendorCreditReqLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/VendorCreditReqLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/VendorCreditReqMetaData"
        },
        "privateNote": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "boolean"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/VendorCreditReqVendorRef"
        }
      },
      "required": [
        "vendorRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "vendorcredit",
      "type": "object"
    },
    "RefundReceiptPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesSalesFormsPrefsCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentReqAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostInvoiceStatusLogCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "DepartmentChangedDataObject": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/DepartmentEntities"
          },
          "type": "array"
        },
        "maxResults": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        },
        "startPosition": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.product.priceLevel"
        }
      },
      "type": "object"
    },
    "CustomerOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostMobile": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "value": {
          "type": "string",
          "x-alias": "currency"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoBillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CurrenciesGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPostItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/PurchaseOrderTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineJournalEntryLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "BillPaymentPostCreditCardPayment": {
      "properties": {
        "ccAccountRef": {
          "$ref": "#/definitions/BillPaymentPostCreditCardPaymentCcAccountRef"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/RefundReceiptCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillPostLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPostLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillPostLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPostLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JournalCodeCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountParentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "parentName"
        },
        "value": {
          "type": "string",
          "x-alias": "parentAcc.id"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "CustomerpaymentMethodRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "6"
        }
      },
      "title": "CustomerpaymentMethodRef",
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillPutLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "JournalEntryMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/JournalEntryPostReqTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/JournalEntryPostReqTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TimeActivityPostDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorGetAllOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "ReceiptPostShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateBillEmail": {
      "properties": {
        "address": {
          "type": "string",
          "x-samplevalue": "Cool_Cars@intuit.com"
        }
      },
      "type": "object"
    },
    "ProductExpenseAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "expenseAccount"
        }
      },
      "type": "object"
    },
    "option": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimateLineDiscountLineDetail": {
      "properties": {
        "discountAccountRef": {
          "$ref": "#/definitions/EstimateLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 10.99
        },
        "percentBased": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "budgetsGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/budgetsGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/budgetsGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TaxCode": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TaxCodeAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxCodeCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "$ref": "#/definitions/TaxCodeMetaData"
        },
        "name": {
          "type": "string"
        },
        "purchaseTaxRateList": {
          "$ref": "#/definitions/TaxCodePurchaseTaxRateList"
        },
        "salesTaxRateList": {
          "$ref": "#/definitions/TaxCodeSalesTaxRateList"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "taxGroup": {
          "type": "boolean"
        },
        "taxable": {
          "type": "boolean"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "taxcode",
      "type": "object"
    },
    "PurchaseGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CurrenciesGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostBillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "CreditTermPostReq": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "dayOfMonthDue": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DueDays not present",
          "x-samplevalue": 1
        },
        "discountDayOfMonth": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DueDays not present",
          "x-samplevalue": 1
        },
        "discountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDays": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DayOfMonthDue not present",
          "x-samplevalue": 60
        },
        "dueNextMonthDays": {
          "format": "int32",
          "type": "integer",
          "x-conditionally-required-description": "required if DueDays not present",
          "x-samplevalue": 1
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4"
        },
        "metaData": {
          "$ref": "#/definitions/CreditTermPostReqMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Net 60"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "type": {
          "enum": [
            "STANDARD",
            "DATE_DRIVEN"
          ],
          "type": "string",
          "x-samplevalue": "STANDARD"
        }
      },
      "required": [
        "name"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "term",
      "type": "object"
    },
    "JournalEntryGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/JournalEntryGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PaymentMethodMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CurrenciesGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CurrenciesGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CurrenciesGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TimeActivityPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllPurchaseExAnyValue": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponse": {
      "properties": {
        "allowIPNPayment": {
          "description": "Flag to allow payments from legacy Intuit Payment Network (IPN). Provided to maintain backward compatibility and must always be set to false.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineACHPayment": {
          "description": "Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice.If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlineCreditCardPayment": {
          "description": "Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true.If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI.If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.",
          "type": "boolean",
          "x-samplevalue": false
        },
        "allowOnlinePayment": {
          "description": "Deprecated flag to allow online payments. In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility.If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed. In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true.If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used",
          "type": "boolean"
        },
        "applyTaxAfterDiscount": {
          "description": "If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.",
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "description": "The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-samplevalue": 100,
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "billAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/InvoiceGetAllResponseBillAddr"
        },
        "billEmail": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoiceGetAllResponseBillEmail"
        },
        "billEmailBcc": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoiceGetAllResponseBillEmailBcc"
        },
        "billEmailCc": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "$ref": "#/definitions/InvoiceGetAllResponseBillEmailCc"
        },
        "classRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseClassRef"
        },
        "currencyRef": {
          "description": "The full name of the currency.",
          "$ref": "#/definitions/InvoiceGetAllResponseCurrencyRef"
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "description": "User-entered message to the customer; this message is visible to end user on their transactions.",
          "$ref": "#/definitions/InvoiceGetAllResponseCustomerMemo"
        },
        "customerRef": {
          "description": "Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively.",
          "$ref": "#/definitions/InvoiceGetAllResponseCustomerRef"
        },
        "deliveryInfo": {
          "$ref": "#/definitions/InvoiceGetAllResponseDeliveryInfo"
        },
        "departmentRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseDepartmentRef"
        },
        "deposit": {
          "description": "The deposit made towards this invoice",
          "format": "int32",
          "type": "integer",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": 0
        },
        "depositToAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseDepositToAccountRef"
        },
        "docNumber": {
          "description": "Reference number for the transaction. If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows:If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null.If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.If Preferences:CustomTxnNumber is false and a value is supplied, that value is stored even if it is a duplicate. Recommended best practice: check the setting of Preferences:CustomTxnNumber before setting DocNumber. Sort order is ASC by default.",
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "1069",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDate": {
          "description": "Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.",
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        },
        "einvoiceStatus": {
          "type": "string"
        },
        "emailStatus": {
          "description": "Email status of the invoice. Valid values: NotSet, NeedToSend, EmailSent",
          "enum": [
            "NEED_TO_SEND",
            "NOT_SET",
            "EMAIL_SENT"
          ],
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "NOT_SET"
        },
        "exchangeRate": {
          "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef.",
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "description": "Method in which tax is applied. Allowed values are: TaxExcluded, TaxInclusive, and NotApplicable.",
          "enum": [
            "TAX_EXCLUDED",
            "TAX_INCLUSIVE",
            "NOT_APPLICABLE"
          ],
          "type": "string"
        },
        "homeBalance": {
          "description": "Convenience field containing the amount in Balance expressed in terms of the home currency. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified and available when endpoint is evoked with the minorversion=3 query parameter.",
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "description": "Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified.",
          "format": "double",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for this object. Sort order is ASC by default.",
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": 238,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "invoiceStatusLog": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseInvoiceStatusLog"
          },
          "type": "array"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/InvoiceGetAllResponseMetaData"
        },
        "printStatus": {
          "enum": [
            "NOT_SET",
            "NEED_TO_PRINT",
            "PRINT_COMPLETE"
          ],
          "type": "string"
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.",
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/InvoiceGetAllResponseShipAddr"
        },
        "shipDate": {
          "description": "Date for delivery of goods or services.",
          "format": "date-time",
          "type": "string",
          "x-alias": "shipDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "shipMethodRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/InvoiceGetAllResponseShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "trackingNum": {
          "description": "Shipping provider's tracking number for the delivery of the goods associated with the transaction.",
          "type": "string"
        },
        "transactionLocationType": {
          "description": "The account location.",
          "enum": [
            "WithinFrance",
            "FranceOverseas",
            "OutsideFranceWithEU",
            "OutsideEU"
          ],
          "type": "string"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used. Sort order is ASC by default.",
          "format": "date-time",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        },
        "txnSource": {
          "description": "Used internally to specify originating source of a credit card transaction",
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-searchable": true,
      "x-vendor-objectname": "invoice",
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPostAssetAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "assetAccount"
        }
      },
      "type": "object"
    },
    "currencyObject": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/currencyObjectAttachableRef"
          },
          "type": "array"
        },
        "code": {
          "type": "string",
          "x-samplevalue": "INR"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/currencyObjectCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4|1"
        },
        "metaData": {
          "$ref": "#/definitions/currencyObjectMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Indian Rupee"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "4"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "companyCurrency",
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodePutReqMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        }
      },
      "type": "object"
    },
    "PaymentPatchCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string",
          "x-alias": "reference"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string",
          "x-alias": "status"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "depositsObjectLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillGetAllLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillGetAllLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillGetAllLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptPostLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptPostLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "preferencesListVendorAndPurchasesPrefsPOCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesListVendorAndPurchasesPrefsPOCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "preferencesListEmailMessagesPrefsSalesReceiptMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatch": {
      "properties": {
        "adjustment": {
          "type": "boolean"
        },
        "attachableRef": {
          "$ref": "#/definitions/JournalEntryPatchAttachableRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/JournalEntryPatchCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchCustomField"
          },
          "type": "array"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryPatchEntityRef"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryPatchJournalCodeRef"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/JournalEntryPatchMetaData"
        },
        "privateNote": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/JournalEntryPatchTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "journalentry",
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ProductPatchPurchaseTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "purchaseTaxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPatchLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptPatchLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TaxAgencyGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPostPaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "Pong": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatch": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/PurchaseOrderPatchApaccountRef"
        },
        "attachableRef": {
          "$ref": "#/definitions/PurchaseOrderPatchAttachableRef"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderPatchClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/PurchaseOrderPatchCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPatchCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/CodeRef"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPatchLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPatchLinkedTxn"
          },
          "type": "array"
        },
        "memo": {
          "type": "string"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/PurchaseOrderPatchMetaData"
        },
        "pOEmail": {
          "type": "string",
          "x-alias": "vendor.contact.email"
        },
        "postatus": {
          "type": "string",
          "x-alias": "status"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "$ref": "#/definitions/PurchaseOrderPatchSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/PurchaseOrderPatchShipAddr"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/PurchaseOrderPatchShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/PurchaseOrderPatchTxnTaxDetail"
        },
        "vendorAddr": {
          "$ref": "#/definitions/PurchaseOrderPatchVendorAddr"
        },
        "vendorRef": {
          "$ref": "#/definitions/PurchaseOrderPatchVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "purchaseorder",
      "type": "object"
    },
    "CustomerParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EmployeePostPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "email"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostOtherContactInfo": {
      "properties": {
        "OtherContactInfo": {
          "items": {
            "$ref": "#/definitions/VendorPostOtherContactInfoOtherContactInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPatchAssetAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "assetAccount"
        }
      },
      "type": "object"
    },
    "TaxCodeCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseBillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CreditMemoAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger500": {
      "x-has-customfields": false,
      "type": "object",
      "title": "500",
      "properties": {
        "description": {
          "x-samplevalue": "Server error - Something went wrong on the Cloud Elements server",
          "type": "string"
        }
      }
    },
    "EmployeePatchOtherContactInfo": {
      "properties": {
        "OtherContactInfo": {
          "items": {
            "$ref": "#/definitions/EmployeePatchOtherContactInfoOtherContactInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swagger502": {
      "x-has-customfields": false,
      "type": "object",
      "title": "502",
      "properties": {
        "description": {
          "x-samplevalue": "Provider server error - Something went wrong on the Provider or Endpoint's server",
          "type": "string"
        }
      }
    },
    "JournalEntryGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/JournalEntryGetAllTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimateLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Pest Control"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "10.23"
        }
      },
      "type": "object"
    },
    "InvoicePostTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "ReceiptPatchTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPostLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "exchangeRateMetadata": {
      "properties": {
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-07-08T09:24:02-07:00"
        }
      },
      "title": "Metadata",
      "type": "object",
      "x-has-customfields": false
    },
    "VendorPatchMobile": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ProductUQCId": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "inventoryStockUom"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponsePaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "nameValue": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "NeoEnabled"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "true"
        }
      },
      "title": "nameValue",
      "x-has-customfields": false,
      "type": "object"
    },
    "ReceiptPatchLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/ClassGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ClassGetAllCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "="
          ]
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "metaData": {
          "$ref": "#/definitions/ClassGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "parentRef": {
          "$ref": "#/definitions/ClassGetAllParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subClass": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "class",
      "type": "object"
    },
    "RefundReceiptDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MarkkupAccountRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChangedDataList": {
      "items": {
        "$ref": "#/definitions/ChangedData"
      },
      "type": "array"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "type": "object"
    },
    "CreditTermGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetailDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "BillAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRate": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "agencyRef": {
          "$ref": "#/definitions/TaxRateAgencyRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TaxRateAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxRateCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "displayType": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "effectiveTaxRate": {
          "items": {
            "$ref": "#/definitions/TaxRateEffectiveTaxRate"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "$ref": "#/definitions/TaxRateMetaData"
        },
        "name": {
          "type": "string"
        },
        "rateValue": {
          "format": "double",
          "type": "number"
        },
        "sparse": {
          "type": "boolean"
        },
        "specialTaxType": {
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "taxReturnLineRef": {
          "$ref": "#/definitions/TaxRateTaxReturnLineRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "taxrate",
      "type": "object"
    },
    "PurchaseOrderPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicePostSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerinfo": {
      "x-has-customfields": false,
      "type": "object",
      "title": "info",
      "properties": {
        "contact": {
          "$ref": "#/definitions/swaggercontact"
        },
        "title": {
          "x-samplevalue": "hubspotcrm",
          "type": "string"
        },
        "version": {
          "x-samplevalue": "api-v2",
          "type": "string"
        }
      }
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineJournalEntryLineDetailJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPatch": {
      "properties": {
        "attachableRef": {
          "$ref": "#/definitions/TimeActivityPatchAttachableRef"
        },
        "billableStatus": {
          "enum": [
            "BILLABLE",
            "NOT_BILLABLE"
          ],
          "type": "string"
        },
        "breakHours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "breakMinutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "classRef": {
          "$ref": "#/definitions/TimeActivityPatchClassRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityPatchCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/TimeActivityPatchCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/TimeActivityPatchDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "employeeRef": {
          "$ref": "#/definitions/TimeActivityPatchEmployeeRef"
        },
        "endTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "hourlyRate": {
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "itemRef": {
          "$ref": "#/definitions/TimeActivityPatchItemRef"
        },
        "minutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "nameOf": {
          "enum": [
            "EMPLOYEE",
            "VENDOR"
          ],
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "startTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "systemId": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "timeZone": {
          "description": "This value is not used and will not be returned",
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/TimeActivityPatchVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "timeactivity",
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPatchLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "VendorPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/VendorPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "Entitlement": {
      "properties": {
        "@id": {
          "type": "string",
          "x-samplevalue": "7"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "PayPal"
        },
        "term": {
          "type": "string",
          "x-samplevalue": "Off"
        }
      },
      "title": "Entitlement",
      "x-has-customfields": false,
      "x-primary-key": [
        "@id"
      ],
      "type": "object"
    },
    "ReportMetadata": {
      "properties": {
        "filters": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "report",
      "type": "object"
    },
    "VendorAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/VendorAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "settingsGetResTaxPrefsTaxGroupCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "3"
        }
      },
      "type": "object"
    },
    "EstimateShipAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Half Moon Bay"
        },
        "country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "104"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line2": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line3": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94213"
        }
      },
      "type": "object"
    },
    "transferGetAllLine": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/transferGetAllLineAccountRef"
        },
        "amount": {
          "format": "float",
          "type": "number",
          "x-samplevalue": 1200
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/transferGetAllLineCustomField"
          },
          "type": "array"
        },
        "depositLineDetail": {
          "$ref": "#/definitions/transferGetAllLineDepositLineDetail"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Interest"
        },
        "detailType": {
          "enum": [
            "DEPOSIT_LINE_DETAIL"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/transferGetAllLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ReceiptPostCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/PurchaseTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/PurchaseTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicetaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 299.99
        },
        "percentBased": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "taxPercent": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 7.65
        },
        "taxRateRef": {
          "$ref": "#/definitions/InvoicetaxRateRef"
        }
      },
      "title": "InvoicetaxLineDetail",
      "type": "object"
    },
    "RefundReceiptGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "mobile"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAll": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderGetAllAttachableRef"
          },
          "type": "array"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderGetAllCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/CodeRef"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderGetAllLinkedTxn"
          },
          "type": "array"
        },
        "memo": {
          "type": "string"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/PurchaseOrderGetAllMetaData"
        },
        "pOEmail": {
          "type": "string",
          "x-alias": "vendor.contact.email"
        },
        "postatus": {
          "type": "string",
          "x-alias": "status"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/PurchaseOrderGetAllShipAddr"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/PurchaseOrderGetAllTxnTaxDetail"
        },
        "vendorAddr": {
          "$ref": "#/definitions/PurchaseOrderGetAllVendorAddr"
        },
        "vendorRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "purchaseorder",
      "type": "object"
    },
    "CreditMemoGetAllCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "budgetsGetAllBudgetDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "type": "object"
    },
    "ReceiptPostLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "attachmentsAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/attachmentsEntityRef"
        },
        "inactive": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "includeOnSend": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lineInfo": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "noRefOnly": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "attachmentsAttachableRef",
      "x-has-customfields": false,
      "type": "object"
    },
    "PurchaseOrderPostShipMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRateEffectiveTaxRate": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "BillPostDepartmentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetailJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "budgetObjectBudgetDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/budgetObjectBudgetDetailAccountRef"
        },
        "amount": {
          "format": "float",
          "type": "number",
          "x-samplevalue": -5241
        },
        "budgetDate": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds",
          "x-samplevalue": 1514786400000
        }
      },
      "type": "object"
    },
    "ReceiptGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchOtherPrefs": {
      "properties": {
        "NameValue": {
          "items": {
            "$ref": "#/definitions/preferencesPatchOtherPrefsNameValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CreditMemoGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BulkQuery": {
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "instance_id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "TaxAgencyOtherContactInfo": {
      "properties": {
        "OtherContactInfo": {
          "items": {
            "$ref": "#/definitions/TaxAgencyOtherContactInfoOtherContactInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentPatch": {
      "properties": {
        "araccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "$ref": "#/definitions/PaymentPatchAraccountRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/PaymentPatchCreditCardPayment"
        },
        "customerRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PaymentPatchCustomerRef"
        },
        "depositToAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/PaymentPatchDepositToAccountRef"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. ",
          "format": "double",
          "type": "number",
          "x-alias": "exchangeRate"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PaymentPatchLine"
          },
          "type": "array"
        },
        "paymentMethodRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "$ref": "#/definitions/PaymentPatchPaymentMethodRef"
        },
        "paymentRefNum": {
          "description": "The reference number for the payment received. For example,  Check # for a check, envelope # for a cash donation. ",
          "type": "string"
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. ",
          "type": "string",
          "x-alias": "description"
        },
        "processPayment": {
          "type": "boolean"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "transactionLocationType": {
          "description": "The account location.",
          "enum": [
            "WithinFrance",
            "FranceOverseas",
            "OutsideFranceWithEU",
            "OutsideEU"
          ],
          "type": "string"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "description": "Used internally to specify originating source of a credit card transaction",
          "type": "string"
        },
        "txnStatus": {
          "description": "Default is PAID, The status of the transaction. For Payment objects, this status is always set to PAID.",
          "type": "string"
        },
        "unappliedAmt": {
          "description": "Indicates the amount that has not been applied to pay amounts owed for sales transactions.",
          "format": "double",
          "type": "number"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "payment",
      "type": "object"
    },
    "TaxAgencyGetAllOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferUpdateObjectFromAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10300 Savings"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "59"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillPaymentPatch": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillPaymentPatchApaccountRef"
        },
        "attachableRef": {
          "$ref": "#/definitions/BillPaymentPatchAttachableRef"
        },
        "checkPayment": {
          "$ref": "#/definitions/BillPaymentPatchCheckPayment"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/BillPaymentPatchCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillPaymentPatchCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentPatchCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillPaymentPatchDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillPaymentPatchLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentPatchLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/BillPaymentPatchMetaData"
        },
        "payType": {
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "processBillPayment": {
          "type": "boolean"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/BillPaymentPatchVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "billpayment",
      "type": "object"
    },
    "PaymentLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentLineCustomField"
          },
          "type": "array"
        },
        "lineEx": {
          "$ref": "#/definitions/PaymentLineLineEx"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VendorCreditAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/transferGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/transferGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "EmployeePostOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxCodeGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TaxCodeGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CustomerprimaryEmailAddr": {
      "properties": {
        "address": {
          "type": "string",
          "x-samplevalue": "kristy1@samplename.com",
          "x-sub-format": "email"
        }
      },
      "title": "CustomerprimaryEmailAddr",
      "type": "object"
    },
    "CreditMemoMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchLine": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentPatchLineCustomField"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentPatchLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPatchAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimateClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxRate"
        }
      },
      "type": "object"
    },
    "BillLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPostTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPostTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptPostTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "CreditMemoCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllParentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "parentName"
        },
        "value": {
          "type": "string",
          "x-alias": "parentAcc.id"
        }
      },
      "type": "object"
    },
    "ProductSalesTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "salesTaxCode"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "value": {
          "type": "string",
          "x-alias": "currency"
        }
      },
      "type": "object"
    },
    "JournalEntryLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/JournalEntryLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "OtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InvoicePatchInvoiceStatusLogEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePatchLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountRate",
              "path": "line[*].discountLineDetail.discountPercent | [0]"
            }
          ]
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/InvoicePatchLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "PurchaseOrderLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": "bill[*].id"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTerm": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CreditTermAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditTermCustomField"
          },
          "type": "array"
        },
        "dayOfMonthDue": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "discountDayOfMonth": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "discountDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discountPercent": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "dueDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 60
        },
        "dueNextMonthDays": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4"
        },
        "metaData": {
          "$ref": "#/definitions/CreditTermMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Net 60"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "33"
        },
        "type": {
          "enum": [
            "STANDARD",
            "DATE_DRIVEN"
          ],
          "type": "string",
          "x-samplevalue": "STANDARD"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "term",
      "type": "object"
    },
    "CustomerPatchBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "BillAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "value": {
          "type": "string",
          "x-alias": "currency"
        }
      },
      "type": "object"
    },
    "InvoicePatchTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccoutRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "format": "bool",
          "type": "boolean"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "format": "bool",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchTaxPrefsTaxGroupCodeRef": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CustomerOpenBalanceDate": {
      "properties": {
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM"
        }
      },
      "type": "object"
    },
    "DepartmentGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetailEntityEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "email": {
      "properties": {
        "address": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAll": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseGetAllAccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllAttachableRef"
          },
          "type": "array"
        },
        "credit": {
          "type": "boolean"
        },
        "currencyRef": {
          "$ref": "#/definitions/PurchaseGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/PurchaseGetAllDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "entityRef": {
          "$ref": "#/definitions/PurchaseGetAllEntityRef"
        },
        "exchangeRate": {
          "format": "double",
          "type": "number"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/PurchaseGetAllMetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/PurchaseGetAllPaymentMethodRef"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "purchaseEx": {
          "$ref": "#/definitions/PurchaseGetAllPurchaseEx"
        },
        "remitToAddr": {
          "$ref": "#/definitions/PurchaseGetAllRemitToAddr"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "txnSource": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/PurchaseGetAllTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "purchase",
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimateBillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Half Moon Bay"
        },
        "country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "103"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line2": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line3": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94213"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLineDiscountLineDetail": {
      "properties": {
        "discountAccountRef": {
          "$ref": "#/definitions/EstimatePOSTLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 10.99
        },
        "percentBased": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePostInvoiceStatusLogEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodeGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "BillPayment": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillPaymentApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/BillPaymentAttachableRef"
          },
          "type": "array"
        },
        "checkPayment": {
          "$ref": "#/definitions/BillPaymentCheckPayment"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/BillPaymentCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillPaymentCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillPaymentDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillPaymentLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/BillPaymentMetaData"
        },
        "payType": {
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "processBillPayment": {
          "type": "boolean"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/BillPaymentVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "billpayment",
      "type": "object"
    },
    "TimeActivityClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "depositsObjectLineDepositLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/depositsObjectLineDepositLineDetailAccountRef"
        },
        "checkNum": {
          "type": "string",
          "x-samplevalue": "8602"
        },
        "entity": {
          "$ref": "#/definitions/depositsObjectLineDepositLineDetailEntity"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/depositsObjectLineDepositLineDetailPaymentMethodRef"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "VendorGetAllBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/JournalEntryGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListEmailMessagesPrefsStatementMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "TaxCodeSalesTaxRateListTaxRateDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.product.priceLevel"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanylegalAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lat": {
          "type": "string",
          "x-samplevalue": "29.3755352"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "1735 County Road"
        },
        "long": {
          "type": "string",
          "x-samplevalue": "-98.5052734"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "CompanylegalAddr",
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "double",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "double",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "double",
          "type": "number"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "InvoicePostShipMethodRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "companyinfoa": {
      "properties": {
        "CompanyAddr": {
          "$ref": "#/definitions/CompanyAddr"
        },
        "CompanyName": {
          "type": "string",
          "x-samplevalue": "Rock Castle Construction"
        },
        "CompanyStartDate": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2014-06-26"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "CustomerCommunicationAddr": {
          "$ref": "#/definitions/CustomerCommunicationAddr"
        },
        "Email": {
          "$ref": "#/definitions/Email"
        },
        "EmployerId": {
          "type": "string",
          "x-samplevalue": "00-7904153"
        },
        "FiscalYearStartMonth": {
          "type": "string",
          "x-samplevalue": "January"
        },
        "Id": {
          "type": "string",
          "x-name": true,
          "x-samplevalue": "1"
        },
        "LegalAddr": {
          "$ref": "#/definitions/LegalAddr"
        },
        "LegalName": {
          "type": "string",
          "x-samplevalue": "Rock Castle Construction, Inc."
        },
        "MetaData": {
          "$ref": "#/definitions/metaDataGET"
        },
        "NameValue": {
          "items": {
            "$ref": "#/definitions/nameValue"
          },
          "type": "array"
        },
        "PrimaryPhone": {
          "$ref": "#/definitions/PrimaryPhone"
        },
        "SupportedLanguages": {
          "type": "string",
          "x-samplevalue": "en"
        },
        "SyncToken": {
          "type": "string",
          "x-samplevalue": "221"
        },
        "WebAddr": {
          "$ref": "#/definitions/WebAddr"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "companyinfoa",
      "x-has-customfields": false,
      "x-primary-key": [
        "Id"
      ],
      "x-vendor-objectname": "companyinfo",
      "type": "object"
    },
    "currencyObjectAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/currencyObjectAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/currencyObjectAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "settingsGetResCurrencyPrefs": {
      "properties": {
        "HomeCurrency": {
          "$ref": "#/definitions/settingsGetResCurrencyPrefsHomeCurrency"
        },
        "MultiCurrencyEnabled": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "transferGetObjectLineDepositLineDetailPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicePostCustomerMemo": {
      "properties": {
        "value": {
          "description": "maximum 1000 chars, default is null User-entered message to the customer; this message is visible to the end user on their transactions.",
          "type": "string",
          "x-samplevalue": "Thank you for your business and have a great day!"
        }
      },
      "type": "object"
    },
    "preferencesPatchTaxPrefs": {
      "properties": {
        "TaxGroupCodeRef": {
          "$ref": "#/definitions/preferencesPatchTaxPrefsTaxGroupCodeRef"
        },
        "UsingSalesTax": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentPatchAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillPaymentPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditTermPutReqMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseLineLineExAny": {
      "properties": {
        "declaredType": {
          "type": "string",
          "x-alias": "type",
          "x-samplevalue": "com.intuit.schema.finance.v3.NameValue"
        },
        "globalScope": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "{http://schema.intuit.com/finance/v3}NameValue"
        },
        "nil": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": false
        },
        "scope": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "javax.xml.bind.JAXBElement$GlobalScope"
        },
        "typeSubstituted": {
          "type": "boolean",
          "x-alias": "type",
          "x-samplevalue": false
        },
        "value": {
          "$ref": "#/definitions/PaymentGetAllResponseLineLineExAnyValue"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPatchLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTermCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "TaxRateDetails": {
      "properties": {
        "rateValue": {
          "type": "number"
        },
        "taxAgencyId": {
          "type": "string"
        },
        "taxApplicableOn": {
          "type": "string"
        },
        "taxRateId": {
          "type": "string"
        },
        "taxRateName": {
          "type": "string"
        }
      },
      "required": [
        "taxRateName",
        "taxRateId",
        "rateValue",
        "taxAgencyId"
      ],
      "type": "object"
    },
    "CompanyEntities": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRef"
          },
          "type": "array"
        },
        "companyAddr": {
          "$ref": "#/definitions/CompanycompanyAddr"
        },
        "companyName": {
          "type": "string",
          "x-samplevalue": "Rock Castle Construction"
        },
        "companyStartDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1403721000000
        },
        "country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "customerCommunicationAddr": {
          "$ref": "#/definitions/CompanycustomerCommunicationAddr"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "email": {
          "$ref": "#/definitions/Companyemail"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "legalAddr": {
          "$ref": "#/definitions/CompanylegalAddr"
        },
        "legalName": {
          "type": "string",
          "x-samplevalue": "Rock Castle Construction, Inc."
        },
        "metaData": {
          "$ref": "#/definitions/MetaData"
        },
        "nameValue": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/OtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/OtherContactInfo"
          },
          "type": "array"
        },
        "primaryPhone": {
          "$ref": "#/definitions/CompanyprimaryPhone"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "supportedLanguages": {
          "type": "string",
          "x-samplevalue": "en"
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "239"
        },
        "webSite": {
          "$ref": "#/definitions/CompanywebSite"
        }
      },
      "title": "CompanyEntities",
      "type": "object"
    },
    "PurchaseLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "InvoiceChangedDataObject": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/InvoiceEntities"
          },
          "type": "array"
        },
        "maxResults": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        },
        "startPosition": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is payment"
            },
            {
              "alias": "parentDocumentNumber",
              "description": "parentDocumentNumber maps to txnId field under linkedTxn array when txnType is estimate"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentLineLineEx": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/PaymentLineLineExAny"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptPatchTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "currencyObjectAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "PaymentPostCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string",
          "x-alias": "reference"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string",
          "x-alias": "status"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "companiesList": {
      "items": {
        "$ref": "#/definitions/companies"
      },
      "type": "array"
    },
    "PurchaseOrderLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetAllFromAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10300 Savings"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "59"
        }
      },
      "type": "object"
    },
    "InvoiceTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoiceTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/InvoiceTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoiceTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "columns": {
      "properties": {
        "column": {
          "items": {
            "$ref": "#/definitions/column"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorGetAllOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "markUpIncomeAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "double",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "double",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "double",
          "type": "number"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "VendorOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPostFax": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "ReceiptAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item. For Invoice objects in global locales: when updating Amount, remove the TxnTaxDetail element in the object before submitting it in the update request payload.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountAmount",
              "description": "discountAmount maps to amount field under line array when detailType is DISCOUNT_LINE_DETAIL"
            },
            {
              "alias": "subTotal",
              "description": "subTotal maps to amount field under line array when detailType is SUB_TOTAL_LINE_DETAIL"
            },
            {
              "alias": "lines[*].subTotal",
              "description": "lines[*].subTotal maps to amount field under line array when detailType is SALES_ITEM_LINE_DETAIL"
            }
          ]
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Set to SalesItemLineDetail this type of line.",
          "enum": [
            "SALES_ITEM_LINE_DETAIL",
            "SUB_TOTAL_LINE_DETAIL"
          ],
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation.",
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoicePatchLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoicePatchLineSubtotalLineDetail"
        }
      },
      "type": "object"
    },
    "TaxAgencyGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxAgencyGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TaxAgencyGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponsePurchaseTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "purchaseTaxCode"
        }
      },
      "type": "object"
    },
    "VendorCreditReqApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VendorPostAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "phone2"
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetailClassRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetailDepartmentRef"
        },
        "entity": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetailEntity"
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetailJournalCodeRef"
        },
        "postingType": {
          "type": "string"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxApplicableOn": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PriceLevelRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountPost": {
      "properties": {
        "accountAlias": {
          "type": "string"
        },
        "accountSubType": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "x-alias": "accSubCategory"
        },
        "acctNum": {
          "type": "string",
          "x-alias": "account"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/LedgerAccountPostAttachableRef"
          },
          "type": "array"
        },
        "classification": {
          "enum": [
            "ASSET",
            "EQUITY",
            "EXPENSE",
            "LIABILITY",
            "REVENUE"
          ],
          "type": "string",
          "x-alias": "accCategory"
        },
        "currencyRef": {
          "$ref": "#/definitions/LedgerAccountPostCurrencyRef"
        },
        "currentBalance": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "currentBalanceWithSubAccounts": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/LedgerAccountPostCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-alias": "name"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/LedgerAccountPostMetaData"
        },
        "name": {
          "type": "string",
          "x-alias": "accName"
        },
        "parentRef": {
          "$ref": "#/definitions/LedgerAccountPostParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subAccount": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/LedgerAccountPostTaxCodeRef"
        },
        "txnLocationType": {
          "type": "string"
        }
      },
      "required": [
        "accountSubType",
        "name"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "account",
      "type": "object"
    },
    "PurchaseOrderGetAllVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "JournalEntryTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].invoice.id",
              "path": "linkedTxn[?txnType=='Invoice'].id"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllPurchaseTaxRateListTaxRateDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "checkBankAccount"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositToAccountRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTCustomerMemo": {
      "properties": {
        "value": {
          "description": "maximum 1000 chars, default is null User-entered message to the customer; this message is visible to the end user on their transactions.",
          "type": "string",
          "x-samplevalue": "Thank you for your business and have a great day!"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/JournalEntryPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "budgetObjectAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/budgetObjectAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/budgetObjectAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "settingsGetResSalesFormsPrefsCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/settingsGetResSalesFormsPrefsCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PaymentMethodCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorGetAllPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseOrderTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransaction"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/PurchaseOrderTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentLine": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentLineCustomField"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ClassParentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchShipMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggercontact": {
      "x-has-customfields": false,
      "type": "object",
      "title": "contact",
      "properties": {
        "email": {
          "x-samplevalue": "support@cloud-elements.com",
          "type": "string"
        }
      }
    },
    "InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceOrderLineResp": {
      "properties": {
        "amount": {
          "description": "The amount of the line item. For Invoice objects in global locales: when updating Amount, remove the TxnTaxDetail element in the object before submitting it in the update request payload.",
          "format": "float",
          "type": "number",
          "x-length": 15
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string",
          "x-length": 4000
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/DescriptionLineDetailResponse"
        },
        "detailType": {
          "description": "Set to SalesItemLineDetail this type of line.",
          "enum": [
            "SALES_ITEM_LINE_DETAIL",
            "SUB_TOTAL_LINE_DETAIL"
          ],
          "type": "string",
          "x-sub-format": "enum"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/DiscountLineDetailResponse",
          "description": "Discount detail type for the entire transaction. This is in contrast to a discount applied to a specific line. The company preference Sales Form Entry | Discounts must be enabled for this type of line to be available."
        },
        "groupLineDetail": {
          "$ref": "#/definitions/GroupLineDetailResponse"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransactionResponse"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoiceSalesLineItemResponse"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/SubtotalLineDetailResponse"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllCreditCardPaymentCcAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "ccBankAccount"
        }
      },
      "type": "object"
    },
    "ProductPostUQCId": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "inventoryStockUom"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerdefinition-property": {
      "x-has-customfields": false,
      "type": "object",
      "title": "#/definitions/definition-property",
      "properties": {
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        }
      }
    },
    "VendorPostFax": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "InvoicePostDepartmentRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptPostLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "preferencesListSalesFormsPrefsCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "StringValue": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<=",
            "LIKE"
          ]
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "TimeActivityCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseLineLineEx": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseLineLineExAny"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LedgerAccountMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoicePostLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "currency"
        }
      },
      "type": "object"
    },
    "PurchaseOrderApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "LineExPaymentLine": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/AnyLineEx"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "estimateCustomerMemo": {
      "properties": {
        "value": {
          "description": "maximum 1000 chars, default is null User-entered message to the customer; this message is visible to the end user on their transactions.",
          "type": "string",
          "x-length": 1000,
          "x-nullable": true,
          "x-samplevalue": "Thank you for your business and have a great day!"
        }
      },
      "title": "customerMemo",
      "type": "object",
      "x-has-customfields": false
    },
    "CreditMemoGetAllPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Discounts given"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "86"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseFax": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "RefundReceiptLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PaymentPostPaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicecustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Stout Man"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "1905"
        }
      },
      "title": "InvoicecustomerRef",
      "type": "object"
    },
    "VendorPostWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetailClassRef"
        },
        "discountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountAmount"
        },
        "discountRate": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountRate"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "int64",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "serviceDate": {
          "description": "Date when the service is performed",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "description": "The total amount of the line item including tax. Constraints: Available when endpoint is evoked with the minorversion=1query parameter.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.price"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillPaymentApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferCreateObjectFromAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10300 Savings"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "59"
        }
      },
      "type": "object"
    },
    "PaymentAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PaymentAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "transferGetAllLineDepositLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/transferGetAllLineDepositLineDetailAccountRef"
        },
        "checkNum": {
          "type": "string",
          "x-samplevalue": "8602"
        },
        "entity": {
          "$ref": "#/definitions/transferGetAllLineDepositLineDetailEntity"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/transferGetAllLineDepositLineDetailPaymentMethodRef"
        }
      },
      "type": "object"
    },
    "transferGetAllLineAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductassetAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Inventory Asset-1"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "182"
        }
      },
      "title": "ProductassetAccountRef",
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllSalesTaxRateListTaxRateDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Report": {
      "properties": {
        "columns": {
          "$ref": "#/definitions/columns"
        },
        "header": {
          "$ref": "#/definitions/header"
        },
        "rows": {
          "$ref": "#/definitions/rows"
        }
      },
      "x-vendor-objectname": "report",
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "VendorPatchWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "preferencesCurrencyPrefsHomeCurrency": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesVendorAndPurchasesPrefs": {
      "properties": {
        "BillableExpenseTracking": {
          "type": "boolean"
        },
        "DefaultMarkup": {
          "format": "double",
          "type": "number"
        },
        "DefaultTerms": {
          "$ref": "#/definitions/preferencesVendorAndPurchasesPrefsDefaultTerms"
        },
        "POCustomField": {
          "items": {
            "$ref": "#/definitions/preferencesVendorAndPurchasesPrefsPOCustomField"
          },
          "type": "array"
        },
        "TrackingByCustomer": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptGetAll": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "int32",
          "type": "integer",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "billAddr": {
          "$ref": "#/definitions/ReceiptGetAllBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/ReceiptGetAllBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/ReceiptGetAllCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/ReceiptGetAllClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/ReceiptGetAllCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/ReceiptGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/ReceiptGetAllCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/ReceiptGetAllCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/ReceiptGetAllDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/ReceiptGetAllDepositToAccountRef"
        },
        "docNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!="
          ]
        },
        "line": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/ReceiptGetAllMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/ReceiptGetAllPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/ReceiptGetAllRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/ReceiptGetAllSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/ReceiptGetAllShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/ReceiptGetAllShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/ReceiptGetAllTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/ReceiptGetAllTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "salesreceipt",
      "type": "object"
    },
    "EmployeePostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchMetaData": {
      "properties": {
        "CreateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssXXX"
        },
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssXXX"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResOtherPrefs": {
      "properties": {
        "NameValue": {
          "items": {
            "$ref": "#/definitions/settingsGetResOtherPrefsNameValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "TimeActivityPost": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TimeActivityPostAttachableRef"
          },
          "type": "array"
        },
        "billableStatus": {
          "enum": [
            "BILLABLE",
            "NOT_BILLABLE"
          ],
          "type": "string"
        },
        "breakHours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "breakMinutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "classRef": {
          "$ref": "#/definitions/TimeActivityPostClassRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityPostCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/TimeActivityPostCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/TimeActivityPostDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "employeeRef": {
          "$ref": "#/definitions/TimeActivityPostEmployeeRef"
        },
        "endTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "hourlyRate": {
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "itemRef": {
          "$ref": "#/definitions/TimeActivityPostItemRef"
        },
        "metaData": {
          "$ref": "#/definitions/TimeActivityPostMetaData"
        },
        "minutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "nameOf": {
          "enum": [
            "EMPLOYEE",
            "VENDOR"
          ],
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "startTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "timeZone": {
          "description": "This value is not used and will not be returned",
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/TimeActivityPostVendorRef"
        }
      },
      "required": [
        "startTime",
        "endTime",
        "nameOf",
        "vendorRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "timeactivity",
      "type": "object"
    },
    "ReceiptGetAllLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "BillGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "purchase-order.id",
              "description": "purchase-order.id maps to txnId field under linkedTxn array when txnType is PurchaseOrder"
            },
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is BillPaymentCheck"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        }
      },
      "type": "object"
    },
    "AttachableRef1Response": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EntityRefResponse"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "preferencesListTaxPrefsTaxGroupCodeRef": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/JournalEntryPostReqTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GroupLineDetailResponse": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/LinkedTransactionResponse"
          },
          "type": "array"
        },
        "quantity": {
          "default": 1,
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesVendorAndPurchasesPrefsPOCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean"
        },
        "Name": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<="
          ]
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostLine": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentPostLineCustomField"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentPostLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "transferGetObjectFromAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10300 Savings"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "59"
        }
      },
      "type": "object"
    },
    "preferencesListProductAndServicesPrefs": {
      "properties": {
        "ForPurchase": {
          "type": "boolean"
        },
        "ForSales": {
          "type": "boolean"
        },
        "QuantityOnHand": {
          "type": "boolean"
        },
        "QuantityWithPriceAndRate": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostOtherContactInfoOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepartmentAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineJournalEntryLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "currency"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRateAgencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptGetAllLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "JournalCodeAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassGetAllParentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ReceiptGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "objectsMetadata": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/objectsMetadataFields"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "depositsObjectCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "ProductPatch": {
      "properties": {
        "abatementRate": {
          "description": "Sales tax abatement rate for India locales.",
          "format": "float",
          "type": "number"
        },
        "active": {
          "description": "If true, the object is currently enabled for use by QuickBooks.",
          "format": "float",
          "type": "boolean",
          "x-alias": "active"
        },
        "assetAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductPatchAssetAccountRef"
        },
        "attachableRef": {
          "$ref": "#/definitions/ProductPatchAttachableRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ProductPatchCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the item.",
          "type": "string",
          "x-alias": "inventoryStockDescription"
        },
        "domain": {
          "type": "string"
        },
        "expenseAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPatchExpenseAccountRef"
        },
        "fullyQualifiedName": {
          "description": "Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Item:SubItem. Returned from an existing object and not input on a new object.Limited to 5 levels.",
          "type": "string"
        },
        "incomeAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductPatchIncomeAccountRef"
        },
        "invStartDate": {
          "description": "Date of opening balance for the inventory transaction. For read operations, the date returned in this field is always the originally provided inventory start date. For update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "itemCategoryType": {
          "description": "Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Read-only after object is created. Valid values include: Product and Service.",
          "type": "string"
        },
        "level": {
          "description": "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be the next level with respect to the parent. Limited to 5 levels.",
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "description": "Name of the item",
          "type": "string",
          "x-alias": "name"
        },
        "parentRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPatchParentRef"
        },
        "prefVendorRef": {
          "$ref": "#/definitions/ProductPatchPrefVendorRef"
        },
        "purchaseCost": {
          "description": "Amount paid when buying or ordering the item, as expressed in the home currency",
          "format": "int32",
          "type": "integer",
          "x-alias": "cost"
        },
        "purchaseDesc": {
          "description": "Purchase description for the item.",
          "type": "string",
          "x-alias": "purchaseDescription"
        },
        "purchaseTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPatchPurchaseTaxCodeRef"
        },
        "purchaseTaxIncluded": {
          "description": "True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction",
          "type": "boolean"
        },
        "purchaseTaxInclusive": {
          "description": "Default is false. True if the purchase tax is included in the item amount.",
          "type": "boolean"
        },
        "qtyOnHand": {
          "description": "Current quantity of the Inventory items available for sale. Not used for Service or NonInventory type items.",
          "format": "float",
          "type": "number",
          "x-alias": "quantityOnHand"
        },
        "reorderPoint": {
          "format": "double",
          "type": "number",
          "x-alias": "reOrderPoint"
        },
        "reverseChargeRate": {
          "description": "Sales tax reverse charge rate for India locales.",
          "format": "float",
          "type": "number"
        },
        "salesTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPatchSalesTaxCodeRef"
        },
        "salesTaxIncluded": {
          "description": "True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.",
          "type": "boolean"
        },
        "salesTaxInclusive": {
          "description": "Default is false. True only if sales tax is included in the item amount.",
          "type": "boolean"
        },
        "serviceType": {
          "description": "Sales tax service type for India locales.",
          "enum": [
            "ADVT",
            "AIRPORTSERVICES",
            "AIRTRANSPORT",
            "AIRTRVLAGNT",
            "ARCHITECT",
            "ASSTMGMT",
            "ATMMAINTENANCE",
            "AUCTIONSERV",
            "AUTHSERST",
            "BANKANDFIN",
            "BEAUTYPARLOR",
            "BROADCAST",
            "BUSINESSAUX",
            "BUSINESSEXHIBITION",
            "BUSINESSSUPPORTSERV",
            "CA",
            "CABLEOPTR",
            "CARGOHAND",
            "CLEANINGSERV",
            "CLEARANDFORW",
            "CLUBSANDASSSERVICE",
            "COMMCOACHORTRAINING",
            "CONSENG",
            "CONSTRCOMMERCIALCOMPLEX",
            "CONTAINERRAILTRANS",
            "CONVSERV",
            "COSTACC",
            "COURIER",
            "CREDITCARD",
            "CREDITRATAGNCY",
            "CRUISESHIPTOUR",
            "CS",
            "CUSHOUSEAG",
            "DESIGNSERV",
            "DEVELOPSUPPLYCONTENT",
            "DREDGING",
            "DRYCLEANING",
            "ERECTIONCOMMORINSTALL",
            "EVENTMGMT",
            "FASHIONDES",
            "FOREXBROKING",
            "FORWARDCONTRACT",
            "FRANCHISESERV",
            "GENERALINSURANCE",
            "GOODSTRANSPORT",
            "HEALTHCLUBANDFITNESS",
            "INFORMATIONSERV",
            "INSURAUX",
            "INTDEC",
            "INTELLECTUALPROPERTY",
            "INTERNATIONALAIRTRAVEL",
            "INTERNETCAFE",
            "INTERNETTELEPHONY",
            "LIFEINS",
            "MAILLISTCOMPILE",
            "MANDAPKEEPER",
            "MANPWRRECRUIT",
            "MGMTCONSUL",
            "MGMTMAINTREPAIR",
            "MININGOIL",
            "MKTRESAGNCY",
            "ONLINEINFORMRETRIEVAL",
            "OPINIONPOLL",
            "OUTDOORCATERING",
            "PACKAGINGSERV",
            "PANDALSHAMIANA",
            "PHOTOGRAPHY",
            "PORT",
            "PORTSER",
            "PROCESSCLEARHOUSE",
            "PUBLICRELATIONMGMT",
            "RAILTRAVELAGNT",
            "REALESTAGT",
            "RECOVERYAGENTS",
            "REGISTRARSERV",
            "RENTACAB",
            "RENTINGIMMOVABLEPROP",
            "RESIDENTIALCOMPLEXCONST",
            "SALEOFSPACEFORADVT",
            "SCANDTECHCONSUL",
            "SECAG",
            "SERVICESPROVIDEDFORTRANSACTION",
            "SHARETRANSFERSERV",
            "SHIPMGMT",
            "SITEPREP",
            "SOUNDRECORD",
            "SPONSORSHIP",
            "STAG",
            "STOCKBROKING",
            "STOCKEXCHGSERV",
            "STORANDWAREHOUSING",
            "SUPPLYTANGIBLEGOODS",
            "SURVEYANDMAPMAKING",
            "SURVEYMINERALS",
            "TECHINSPECTION",
            "TECHTESTING",
            "TELECOMMUNICATIONSERV",
            "TELEVISIONANDRADIO",
            "TOUROP",
            "TRANSPORTPIPELINE",
            "TRAVELAGENT",
            "ULIPMANAGEMENT",
            "UNDERWRITER",
            "VIDEOTAPEPROD",
            "WORKSCONTRACT"
          ],
          "type": "string"
        },
        "sku": {
          "description": "The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.",
          "type": "string",
          "x-alias": "externalId"
        },
        "sparse": {
          "type": "boolean"
        },
        "subItem": {
          "description": "If true, this is a sub item. If false or null, this is a top-level item. Creating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.",
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the entity. Required for the update operation.",
          "type": "string"
        },
        "taxable": {
          "description": "If true, transactions for this item are taxable. Applicable to US companies, only.",
          "type": "boolean",
          "x-alias": "taxable"
        },
        "trackQtyOnHand": {
          "description": "True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type Inventory. Not applicable for Service or NonInventory item types.",
          "type": "boolean"
        },
        "type": {
          "description": "Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types. For requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows:Inventory--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are specified. Used for goods the company sells and buys that are tracked as inventory.Service--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.",
          "enum": [
            "INVENTORY",
            "SERVICE",
            "CATEGORY"
          ],
          "type": "string",
          "x-alias": "type"
        },
        "uQCId": {
          "$ref": "#/definitions/ProductPatchUQCId"
        },
        "unitPrice": {
          "description": "Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "int32",
          "type": "integer",
          "x-alias": "price"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "item",
      "type": "object"
    },
    "BillPaymentPatchApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "VendorPostTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchOpenBalanceDate": {
      "properties": {
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatchBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "JournalEntryJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "EmployeePostMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "mobile"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/PurchaseTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReceiptMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "VendorMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "EmployeePostPrimaryAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "address.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "address.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line3",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "address.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchAccountingInfoPrefs": {
      "properties": {
        "ClassTrackingPerTxn": {
          "type": "boolean"
        },
        "ClassTrackingPerTxnLine": {
          "type": "boolean"
        },
        "CustomerTerminology": {
          "enum": [
            "Clients",
            "Customers",
            "Donors",
            "Guests",
            "Patients",
            "Members",
            "Tenants"
          ],
          "type": "string"
        },
        "DepartmentTerminology": {
          "enum": [
            "business",
            "Departments",
            "Division",
            "Location",
            "Property",
            "Store",
            "Territory"
          ],
          "type": "string"
        },
        "TrackDepartments": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "BillGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicetxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/InvoicetaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 22.95
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/InvoicetxnTaxCodeRef"
        }
      },
      "title": "InvoicetxnTaxDetail",
      "type": "object"
    },
    "ProductGetAllResponse": {
      "properties": {
        "abatementRate": {
          "description": "Sales tax abatement rate for India locales.",
          "format": "float",
          "type": "number"
        },
        "active": {
          "description": "If true, the object is currently enabled for use by QuickBooks.",
          "format": "float",
          "type": "boolean",
          "x-alias": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "assetAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductGetAllResponseAssetAccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/ProductGetAllResponseAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ProductGetAllResponseCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the item.",
          "type": "string",
          "x-alias": "inventoryStockDescription"
        },
        "domain": {
          "type": "string"
        },
        "expenseAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductGetAllResponseExpenseAccountRef"
        },
        "fullyQualifiedName": {
          "description": "Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Item:SubItem. Returned from an existing object and not input on a new object.Limited to 5 levels.",
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "id": {
          "description": "Unique Identifier for an Intuit entity (object). Required for the update operation.",
          "type": "string",
          "x-alias": "id",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "incomeAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductGetAllResponseIncomeAccountRef"
        },
        "invStartDate": {
          "description": "Date of opening balance for the inventory transaction. For read operations, the date returned in this field is always the originally provided inventory start date. For update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "itemCategoryType": {
          "description": "Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Read-only after object is created. Valid values include: Product and Service.",
          "type": "string"
        },
        "level": {
          "description": "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be the next level with respect to the parent. Limited to 5 levels.",
          "format": "int64",
          "type": "integer"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/ProductGetAllResponseMetaData"
        },
        "name": {
          "description": "Name of the item",
          "type": "string",
          "x-alias": "name",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "parentRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductGetAllResponseParentRef"
        },
        "prefVendorRef": {
          "$ref": "#/definitions/ProductGetAllResponsePrefVendorRef"
        },
        "purchaseCost": {
          "description": "Amount paid when buying or ordering the item, as expressed in the home currency",
          "format": "int32",
          "type": "integer",
          "x-alias": "cost"
        },
        "purchaseDesc": {
          "description": "Purchase description for the item.",
          "type": "string",
          "x-alias": "purchaseDescription"
        },
        "purchaseTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductGetAllResponsePurchaseTaxCodeRef"
        },
        "purchaseTaxIncluded": {
          "description": "True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction",
          "type": "boolean"
        },
        "purchaseTaxInclusive": {
          "description": "Default is false. True if the purchase tax is included in the item amount.",
          "type": "boolean"
        },
        "qtyOnHand": {
          "description": "Current quantity of the Inventory items available for sale. Not used for Service or NonInventory type items.",
          "format": "float",
          "type": "number",
          "x-alias": "quantityOnHand"
        },
        "reorderPoint": {
          "format": "double",
          "type": "number",
          "x-alias": "reOrderPoint"
        },
        "reverseChargeRate": {
          "description": "Sales tax reverse charge rate for India locales.",
          "format": "float",
          "type": "number"
        },
        "salesTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductGetAllResponseSalesTaxCodeRef"
        },
        "salesTaxIncluded": {
          "description": "True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.",
          "type": "boolean"
        },
        "salesTaxInclusive": {
          "description": "Default is false. True only if sales tax is included in the item amount.",
          "type": "boolean"
        },
        "serviceType": {
          "description": "Sales tax service type for India locales.",
          "enum": [
            "ADVT",
            "AIRPORTSERVICES",
            "AIRTRANSPORT",
            "AIRTRVLAGNT",
            "ARCHITECT",
            "ASSTMGMT",
            "ATMMAINTENANCE",
            "AUCTIONSERV",
            "AUTHSERST",
            "BANKANDFIN",
            "BEAUTYPARLOR",
            "BROADCAST",
            "BUSINESSAUX",
            "BUSINESSEXHIBITION",
            "BUSINESSSUPPORTSERV",
            "CA",
            "CABLEOPTR",
            "CARGOHAND",
            "CLEANINGSERV",
            "CLEARANDFORW",
            "CLUBSANDASSSERVICE",
            "COMMCOACHORTRAINING",
            "CONSENG",
            "CONSTRCOMMERCIALCOMPLEX",
            "CONTAINERRAILTRANS",
            "CONVSERV",
            "COSTACC",
            "COURIER",
            "CREDITCARD",
            "CREDITRATAGNCY",
            "CRUISESHIPTOUR",
            "CS",
            "CUSHOUSEAG",
            "DESIGNSERV",
            "DEVELOPSUPPLYCONTENT",
            "DREDGING",
            "DRYCLEANING",
            "ERECTIONCOMMORINSTALL",
            "EVENTMGMT",
            "FASHIONDES",
            "FOREXBROKING",
            "FORWARDCONTRACT",
            "FRANCHISESERV",
            "GENERALINSURANCE",
            "GOODSTRANSPORT",
            "HEALTHCLUBANDFITNESS",
            "INFORMATIONSERV",
            "INSURAUX",
            "INTDEC",
            "INTELLECTUALPROPERTY",
            "INTERNATIONALAIRTRAVEL",
            "INTERNETCAFE",
            "INTERNETTELEPHONY",
            "LIFEINS",
            "MAILLISTCOMPILE",
            "MANDAPKEEPER",
            "MANPWRRECRUIT",
            "MGMTCONSUL",
            "MGMTMAINTREPAIR",
            "MININGOIL",
            "MKTRESAGNCY",
            "ONLINEINFORMRETRIEVAL",
            "OPINIONPOLL",
            "OUTDOORCATERING",
            "PACKAGINGSERV",
            "PANDALSHAMIANA",
            "PHOTOGRAPHY",
            "PORT",
            "PORTSER",
            "PROCESSCLEARHOUSE",
            "PUBLICRELATIONMGMT",
            "RAILTRAVELAGNT",
            "REALESTAGT",
            "RECOVERYAGENTS",
            "REGISTRARSERV",
            "RENTACAB",
            "RENTINGIMMOVABLEPROP",
            "RESIDENTIALCOMPLEXCONST",
            "SALEOFSPACEFORADVT",
            "SCANDTECHCONSUL",
            "SECAG",
            "SERVICESPROVIDEDFORTRANSACTION",
            "SHARETRANSFERSERV",
            "SHIPMGMT",
            "SITEPREP",
            "SOUNDRECORD",
            "SPONSORSHIP",
            "STAG",
            "STOCKBROKING",
            "STOCKEXCHGSERV",
            "STORANDWAREHOUSING",
            "SUPPLYTANGIBLEGOODS",
            "SURVEYANDMAPMAKING",
            "SURVEYMINERALS",
            "TECHINSPECTION",
            "TECHTESTING",
            "TELECOMMUNICATIONSERV",
            "TELEVISIONANDRADIO",
            "TOUROP",
            "TRANSPORTPIPELINE",
            "TRAVELAGENT",
            "ULIPMANAGEMENT",
            "UNDERWRITER",
            "VIDEOTAPEPROD",
            "WORKSCONTRACT"
          ],
          "type": "string"
        },
        "sku": {
          "description": "The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.",
          "type": "string",
          "x-alias": "externalId",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!="
          ]
        },
        "sparse": {
          "type": "boolean"
        },
        "subItem": {
          "description": "If true, this is a sub item. If false or null, this is a top-level item. Creating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.",
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the entity. Required for the update operation.",
          "type": "string"
        },
        "taxable": {
          "description": "If true, transactions for this item are taxable. Applicable to US companies, only.",
          "type": "boolean",
          "x-alias": "taxable"
        },
        "trackQtyOnHand": {
          "description": "True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type Inventory. Not applicable for Service or NonInventory item types.",
          "type": "boolean"
        },
        "type": {
          "description": "Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types. For requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows:Inventory--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are specified. Used for goods the company sells and buys that are tracked as inventory.Service--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.",
          "enum": [
            "INVENTORY",
            "SERVICE",
            "CATEGORY"
          ],
          "type": "string",
          "x-alias": "type",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "uQCId": {
          "$ref": "#/definitions/ProductGetAllResponseUQCId"
        },
        "unitPrice": {
          "description": "Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "int32",
          "type": "integer",
          "x-alias": "price"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "and"
      ],
      "x-vendor-objectname": "item",
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchCreditCardPayment": {
      "properties": {
        "ccAccountRef": {
          "$ref": "#/definitions/BillPaymentPatchCreditCardPaymentCcAccountRef"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "CustomerPatchAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "lines[*].taxRate"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ValuePaymentLine": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "txnId"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "36"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoicePostLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoiceLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPatchLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "BulkStatus": {
      "description": "Status of the bulk upload.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "numOfLeadsProcessed": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "numOfRowsFailed": {
          "description": "Failed count",
          "type": "number"
        },
        "numOfRowsWithWarning": {
          "description": "Contact/Leads that had warnings",
          "type": "number"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      }
    },
    "VendorCreditGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided,          the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "settingsGetRes": {
      "properties": {
        "AccountingInfoPrefs": {
          "$ref": "#/definitions/settingsGetResAccountingInfoPrefs"
        },
        "CurrencyPrefs": {
          "$ref": "#/definitions/settingsGetResCurrencyPrefs"
        },
        "EmailMessagesPrefs": {
          "$ref": "#/definitions/settingsGetResEmailMessagesPrefs"
        },
        "Id": {
          "type": "string",
          "x-samplevalue": "1",
          "x-searchable": false
        },
        "MetaData": {
          "$ref": "#/definitions/settingsGetResMetaData"
        },
        "OtherPrefs": {
          "$ref": "#/definitions/settingsGetResOtherPrefs"
        },
        "ProductAndServicesPrefs": {
          "$ref": "#/definitions/settingsGetResProductAndServicesPrefs"
        },
        "ReportPrefs": {
          "$ref": "#/definitions/settingsGetResReportPrefs"
        },
        "SalesFormsPrefs": {
          "$ref": "#/definitions/settingsGetResSalesFormsPrefs"
        },
        "SyncToken": {
          "type": "string",
          "x-samplevalue": "31",
          "x-searchable": false
        },
        "TaxPrefs": {
          "$ref": "#/definitions/settingsGetResTaxPrefs"
        },
        "TimeTrackingPrefs": {
          "$ref": "#/definitions/settingsGetResTimeTrackingPrefs"
        },
        "VendorAndPurchasesPrefs": {
          "$ref": "#/definitions/settingsGetResVendorAndPurchasesPrefs"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO",
          "x-searchable": false
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false,
          "x-searchable": false
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "Id"
      ],
      "x-vendor-objectname": "preferences",
      "type": "object"
    },
    "CreditTermPostReqMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        }
      },
      "type": "object"
    },
    "JournalCodePutReq": {
      "properties": {
        "Active": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Description": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "Id": {
          "type": "string",
          "x-samplevalue": "2"
        },
        "MetaData": {
          "$ref": "#/definitions/JournalCodePutReqMetaData"
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "VT"
        },
        "SyncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "Type": {
          "enum": [
            "Expenses",
            "Sales",
            "Bank",
            "Nouveaux",
            "Wages",
            "Cash",
            "Others"
          ],
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "time": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
          "x-samplevalue": "2015-12-16T11:01:37.346-07:00"
        }
      },
      "required": [
        "SyncToken",
        "Name"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "JournalCode",
      "type": "object"
    },
    "RefundReceiptPatchRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/ReceiptCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/ReceiptCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseReqCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "legalAddr": {
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countrySubDivisionCode": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-readOnly": true
        },
        "lat": {
          "type": "string",
          "x-readOnly": true
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "line4": {
          "type": "string"
        },
        "line5": {
          "type": "string"
        },
        "long": {
          "type": "string",
          "x-readOnly": true
        },
        "postalCode": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCredit": {
      "properties": {
        "apaccountRef": {
          "$ref": "#/definitions/VendorCreditApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/VendorCreditAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "currencyRef": {
          "$ref": "#/definitions/VendorCreditCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/VendorCreditDepartmentRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/VendorCreditLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/VendorCreditLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/VendorCreditMetaData"
        },
        "privateNote": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "boolean"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/VendorCreditVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "vendorcredit",
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillPutLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TimeActivityAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectCashBackAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "depositsObjectLine": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/depositsObjectLineAccountRef"
        },
        "amount": {
          "format": "float",
          "type": "number",
          "x-samplevalue": 1200
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/depositsObjectLineCustomField"
          },
          "type": "array"
        },
        "depositLineDetail": {
          "$ref": "#/definitions/depositsObjectLineDepositLineDetail"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Interest"
        },
        "detailType": {
          "enum": [
            "DEPOSIT_LINE_DETAIL"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/depositsObjectLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllVendorAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "lat": {
          "type": "string"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "line4": {
          "type": "string"
        },
        "line5": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "ReceiptPatchTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "RefundReceiptCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatchOtherContactInfo": {
      "properties": {
        "OtherContactInfo": {
          "items": {
            "$ref": "#/definitions/VendorPatchOtherContactInfoOtherContactInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-alias": "billingAddress.contact.email",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-length": 100,
          "x-samplevalue": "test@intuit.com",
          "x-sub-format": "Email"
        }
      },
      "type": "object"
    },
    "BillPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "transferGetObjectLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllBillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "VendorGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllSalesTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/JournalEntryTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "TimeActivityDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransaction"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/PurchaseOrderGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "preferencesPatchReportPrefs": {
      "properties": {
        "CalcAgingReportFromTxnDate": {
          "type": "boolean"
        },
        "ReportBasis": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "preferencesPatchEmailMessagesPrefs": {
      "properties": {
        "EstimateMessage": {
          "$ref": "#/definitions/preferencesPatchEmailMessagesPrefsEstimateMessage"
        },
        "InvoiceMessage": {
          "$ref": "#/definitions/preferencesPatchEmailMessagesPrefsInvoiceMessage"
        },
        "SalesReceiptMessage": {
          "$ref": "#/definitions/preferencesPatchEmailMessagesPrefsSalesReceiptMessage"
        },
        "StatementMessage": {
          "$ref": "#/definitions/preferencesPatchEmailMessagesPrefsStatementMessage"
        }
      },
      "type": "object"
    },
    "ReceiptCheckPayment": {
      "properties": {
        "CheckNum": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "acctNum": {
          "type": "boolean"
        },
        "bankName": {
          "type": "string"
        },
        "nameOnAcct": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.product.priceLevel"
        }
      },
      "type": "object"
    },
    "InvoiceLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.product.priceLevel"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimatePOSTBillEmail": {
      "properties": {
        "address": {
          "type": "string",
          "x-samplevalue": "Cool_Cars@intuit.com"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PaymentPostLineLineExAny": {
      "properties": {
        "declaredType": {
          "type": "string",
          "x-alias": "type",
          "x-samplevalue": "com.intuit.schema.finance.v3.NameValue"
        },
        "globalScope": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "{http://schema.intuit.com/finance/v3}NameValue"
        },
        "nil": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": false
        },
        "scope": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "javax.xml.bind.JAXBElement$GlobalScope"
        },
        "typeSubstituted": {
          "type": "boolean",
          "x-alias": "type",
          "x-samplevalue": false
        },
        "value": {
          "$ref": "#/definitions/PaymentPostLineLineExAnyValue"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllPurchaseTaxRateList": {
      "properties": {
        "taxRateDetail": {
          "items": {
            "$ref": "#/definitions/TaxCodeGetAllPurchaseTaxRateListTaxRateDetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PaymentCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "ProductparentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Sass"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "461"
        }
      },
      "title": "ProductparentRef",
      "type": "object"
    },
    "BillPaymentPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "InvoiceLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountRate",
              "path": "line[*].discountLineDetail.discountPercent | [0]"
            }
          ]
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/InvoiceLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ProductCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatchPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is payment"
            },
            {
              "alias": "parentDocumentNumber",
              "description": "parentDocumentNumber maps to txnId field under linkedTxn array when txnType is estimate"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptPostCheckPayment": {
      "properties": {
        "CheckNum": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "acctNum": {
          "type": "boolean"
        },
        "bankName": {
          "type": "string"
        },
        "nameOnAcct": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutBillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "EmployeePostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EmployeePostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseReqLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseReqLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseReqLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "format": "double",
          "type": "number"
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchVendorAndPurchasesPrefsDefaultTerms": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TaxCodeGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxCodeGetAllCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "metaData": {
          "$ref": "#/definitions/TaxCodeGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "purchaseTaxRateList": {
          "$ref": "#/definitions/TaxCodeGetAllPurchaseTaxRateList"
        },
        "salesTaxRateList": {
          "$ref": "#/definitions/TaxCodeGetAllSalesTaxRateList"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "taxGroup": {
          "type": "boolean"
        },
        "taxable": {
          "type": "boolean"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "taxcode",
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqPurchaseEx": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/PurchaseReqPurchaseExAny"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "BillGetAllApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "DepartmentCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodeAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            ">",
            "<",
            ">=",
            "<="
          ]
        }
      },
      "type": "object"
    },
    "EmployeeCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObject": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 500
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/transferGetObjectAttachableRef"
          },
          "type": "array"
        },
        "currencyRef": {
          "$ref": "#/definitions/transferGetObjectCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/transferGetObjectCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "fromAccountRef": {
          "$ref": "#/definitions/transferGetObjectFromAccountRef"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "239|0"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/transferGetObjectLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/transferGetObjectLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/transferGetObjectMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-samplevalue": "Funds Transfer"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "239"
        },
        "toAccountRef": {
          "$ref": "#/definitions/transferGetObjectToAccountRef"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-12-15T00:00:00-06:00"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "transfer",
      "type": "object"
    },
    "InvoicePatchLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CustomerChangedDataObject": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/CustomerEntities"
          },
          "type": "array"
        },
        "maxResults": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        },
        "startPosition": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "CustomField": {
      "properties": {
        "definitionId": {
          "type": "string",
          "x-readOnly": true
        },
        "name": {
          "type": "string",
          "x-readOnly": true
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-readOnly": true
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetailJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPostCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomercurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "CustomercurrencyRef",
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Product": {
      "properties": {
        "abatementRate": {
          "description": "Sales tax abatement rate for India locales.",
          "format": "float",
          "type": "number"
        },
        "active": {
          "description": "If true, the object is currently enabled for use by QuickBooks.",
          "format": "float",
          "type": "boolean",
          "x-alias": "active"
        },
        "assetAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductAssetAccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/ProductAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ProductCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the item.",
          "type": "string",
          "x-alias": "inventoryStockDescription"
        },
        "domain": {
          "type": "string"
        },
        "expenseAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductExpenseAccountRef"
        },
        "fullyQualifiedName": {
          "description": "Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Item:SubItem. Returned from an existing object and not input on a new object.Limited to 5 levels.",
          "type": "string"
        },
        "id": {
          "description": "Unique Identifier for an Intuit entity (object). Required for the update operation.",
          "type": "string",
          "x-alias": "id"
        },
        "incomeAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductIncomeAccountRef"
        },
        "invStartDate": {
          "description": "Date of opening balance for the inventory transaction. For read operations, the date returned in this field is always the originally provided inventory start date. For update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "itemCategoryType": {
          "description": "Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Read-only after object is created. Valid values include: Product and Service.",
          "type": "string"
        },
        "level": {
          "description": "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be the next level with respect to the parent. Limited to 5 levels.",
          "format": "int64",
          "type": "integer"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/ProductMetaData"
        },
        "name": {
          "description": "Name of the item",
          "type": "string",
          "x-alias": "name"
        },
        "parentRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductParentRef"
        },
        "prefVendorRef": {
          "$ref": "#/definitions/ProductPrefVendorRef"
        },
        "purchaseCost": {
          "description": "Amount paid when buying or ordering the item, as expressed in the home currency",
          "format": "int32",
          "type": "integer",
          "x-alias": "cost"
        },
        "purchaseDesc": {
          "description": "Purchase description for the item.",
          "type": "string",
          "x-alias": "purchaseDescription"
        },
        "purchaseTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPurchaseTaxCodeRef"
        },
        "purchaseTaxIncluded": {
          "description": "True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction",
          "type": "boolean"
        },
        "purchaseTaxInclusive": {
          "description": "Default is false. True if the purchase tax is included in the item amount.",
          "type": "boolean"
        },
        "qtyOnHand": {
          "description": "Current quantity of the Inventory items available for sale. Not used for Service or NonInventory type items.",
          "format": "float",
          "type": "number",
          "x-alias": "quantityOnHand"
        },
        "reorderPoint": {
          "format": "double",
          "type": "number",
          "x-alias": "reOrderPoint"
        },
        "reverseChargeRate": {
          "description": "Sales tax reverse charge rate for India locales.",
          "format": "float",
          "type": "number"
        },
        "salesTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductSalesTaxCodeRef"
        },
        "salesTaxIncluded": {
          "description": "True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.",
          "type": "boolean"
        },
        "salesTaxInclusive": {
          "description": "Default is false. True only if sales tax is included in the item amount.",
          "type": "boolean"
        },
        "serviceType": {
          "description": "Sales tax service type for India locales.",
          "enum": [
            "ADVT",
            "AIRPORTSERVICES",
            "AIRTRANSPORT",
            "AIRTRVLAGNT",
            "ARCHITECT",
            "ASSTMGMT",
            "ATMMAINTENANCE",
            "AUCTIONSERV",
            "AUTHSERST",
            "BANKANDFIN",
            "BEAUTYPARLOR",
            "BROADCAST",
            "BUSINESSAUX",
            "BUSINESSEXHIBITION",
            "BUSINESSSUPPORTSERV",
            "CA",
            "CABLEOPTR",
            "CARGOHAND",
            "CLEANINGSERV",
            "CLEARANDFORW",
            "CLUBSANDASSSERVICE",
            "COMMCOACHORTRAINING",
            "CONSENG",
            "CONSTRCOMMERCIALCOMPLEX",
            "CONTAINERRAILTRANS",
            "CONVSERV",
            "COSTACC",
            "COURIER",
            "CREDITCARD",
            "CREDITRATAGNCY",
            "CRUISESHIPTOUR",
            "CS",
            "CUSHOUSEAG",
            "DESIGNSERV",
            "DEVELOPSUPPLYCONTENT",
            "DREDGING",
            "DRYCLEANING",
            "ERECTIONCOMMORINSTALL",
            "EVENTMGMT",
            "FASHIONDES",
            "FOREXBROKING",
            "FORWARDCONTRACT",
            "FRANCHISESERV",
            "GENERALINSURANCE",
            "GOODSTRANSPORT",
            "HEALTHCLUBANDFITNESS",
            "INFORMATIONSERV",
            "INSURAUX",
            "INTDEC",
            "INTELLECTUALPROPERTY",
            "INTERNATIONALAIRTRAVEL",
            "INTERNETCAFE",
            "INTERNETTELEPHONY",
            "LIFEINS",
            "MAILLISTCOMPILE",
            "MANDAPKEEPER",
            "MANPWRRECRUIT",
            "MGMTCONSUL",
            "MGMTMAINTREPAIR",
            "MININGOIL",
            "MKTRESAGNCY",
            "ONLINEINFORMRETRIEVAL",
            "OPINIONPOLL",
            "OUTDOORCATERING",
            "PACKAGINGSERV",
            "PANDALSHAMIANA",
            "PHOTOGRAPHY",
            "PORT",
            "PORTSER",
            "PROCESSCLEARHOUSE",
            "PUBLICRELATIONMGMT",
            "RAILTRAVELAGNT",
            "REALESTAGT",
            "RECOVERYAGENTS",
            "REGISTRARSERV",
            "RENTACAB",
            "RENTINGIMMOVABLEPROP",
            "RESIDENTIALCOMPLEXCONST",
            "SALEOFSPACEFORADVT",
            "SCANDTECHCONSUL",
            "SECAG",
            "SERVICESPROVIDEDFORTRANSACTION",
            "SHARETRANSFERSERV",
            "SHIPMGMT",
            "SITEPREP",
            "SOUNDRECORD",
            "SPONSORSHIP",
            "STAG",
            "STOCKBROKING",
            "STOCKEXCHGSERV",
            "STORANDWAREHOUSING",
            "SUPPLYTANGIBLEGOODS",
            "SURVEYANDMAPMAKING",
            "SURVEYMINERALS",
            "TECHINSPECTION",
            "TECHTESTING",
            "TELECOMMUNICATIONSERV",
            "TELEVISIONANDRADIO",
            "TOUROP",
            "TRANSPORTPIPELINE",
            "TRAVELAGENT",
            "ULIPMANAGEMENT",
            "UNDERWRITER",
            "VIDEOTAPEPROD",
            "WORKSCONTRACT"
          ],
          "type": "string"
        },
        "sku": {
          "description": "The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.",
          "type": "string",
          "x-alias": "externalId"
        },
        "sparse": {
          "type": "boolean"
        },
        "subItem": {
          "description": "If true, this is a sub item. If false or null, this is a top-level item. Creating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.",
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the entity. Required for the update operation.",
          "type": "string"
        },
        "taxable": {
          "description": "If true, transactions for this item are taxable. Applicable to US companies, only.",
          "type": "boolean",
          "x-alias": "taxable"
        },
        "trackQtyOnHand": {
          "description": "True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type Inventory. Not applicable for Service or NonInventory item types.",
          "type": "boolean"
        },
        "type": {
          "description": "Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types. For requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows:Inventory--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are specified. Used for goods the company sells and buys that are tracked as inventory.Service--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.",
          "enum": [
            "INVENTORY",
            "SERVICE",
            "CATEGORY"
          ],
          "type": "string",
          "x-alias": "type"
        },
        "uQCId": {
          "$ref": "#/definitions/ProductUQCId"
        },
        "unitPrice": {
          "description": "Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "int32",
          "type": "integer",
          "x-alias": "price"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "item",
      "type": "object"
    },
    "InvoiceMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "TaxRateAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CustomerPatch": {
      "properties": {
        "active": {
          "description": "If true, this entity is currently enabled for use by QuickBooks.If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount",
          "type": "boolean",
          "x-alias": "active"
        },
        "alternatePhone": {
          "description": "Alternate phone number.",
          "$ref": "#/definitions/CustomerPatchAlternatePhone"
        },
        "araccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "$ref": "#/definitions/CustomerPatchAraccountRef"
        },
        "balance": {
          "description": "Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer.",
          "format": "double",
          "type": "number",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 10112
        },
        "balanceWithJobs": {
          "description": "Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.",
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "$ref": "#/definitions/CustomerPatchBillAddr"
        },
        "billWithParent": {
          "description": "If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.",
          "type": "boolean"
        },
        "companyName": {
          "description": "The name of the company associated with the person or organization.",
          "type": "string",
          "x-alias": "name"
        },
        "currencyRef": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "$ref": "#/definitions/CustomerPatchCurrencyRef"
        },
        "defaultTaxCodeRef": {
          "$ref": "#/definitions/CustomerPatchDefaultTaxCodeRef"
        },
        "displayName": {
          "description": "The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update.",
          "type": "string",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "description": "Family name or the last name of the person.",
          "type": "string",
          "x-alias": "contact.lastName",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "fax": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerPatchFax"
        },
        "fullyQualifiedName": {
          "description": "Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels",
          "type": "string"
        },
        "givenName": {
          "description": "Given name or first name of a person.",
          "type": "string",
          "x-alias": "contact.firstName",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "job": {
          "description": "If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.",
          "type": "boolean"
        },
        "level": {
          "description": "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 101
        },
        "middleName": {
          "description": "Middle name of the person. The person can have zero or more middle names.",
          "type": "string",
          "x-alias": "contact.middleName",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "mobile": {
          "description": "Mobile phone number. ",
          "$ref": "#/definitions/CustomerPatchMobile"
        },
        "notes": {
          "description": "Free form text describing the Customer.",
          "type": "string",
          "x-alias": "description"
        },
        "openBalanceDate": {
          "format": "date",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM",
          "$ref": "#/definitions/CustomerPatchOpenBalanceDate"
        },
        "parentRef": {
          "description": "A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list. ",
          "x-conditionally-required-description": "Required for the create operation if this object is a sub-customer or Job. ",
          "$ref": "#/definitions/CustomerPatchParentRef"
        },
        "paymentMethodRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "$ref": "#/definitions/CustomerPatchPaymentMethodRef"
        },
        "preferredDeliveryMethod": {
          "description": "Preferred delivery method. Values are Print, Email, or None.",
          "enum": [
            "Print",
            "Email",
            "None"
          ],
          "type": "string"
        },
        "primaryEmailAddr": {
          "$ref": "#/definitions/CustomerPatchPrimaryEmailAddr"
        },
        "primaryPhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerPatchPrimaryPhone"
        },
        "primaryTaxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "printOnCheckName": {
          "description": "Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.",
          "type": "string"
        },
        "resaleNum": {
          "description": "Resale number or some additional info about the customer",
          "type": "string"
        },
        "salesTermRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/CustomerPatchSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/CustomerPatchShipAddr"
        },
        "sparse": {
          "description": "Mark as true to do a partial update of a Customer object, otherwise the full Customer object is required",
          "type": "boolean"
        },
        "suffix": {
          "description": "Suffix of the name. For example, Jr",
          "type": "string",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxExemptionReasonId": {
          "description": "The tax exemption reason associated with this customer object.",
          "type": "string"
        },
        "taxable": {
          "description": "If true, transactions for this customer are taxable. Default behaviour with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.",
          "type": "boolean"
        },
        "title": {
          "description": "Title of the person. This tag supports i18n, all locales",
          "type": "string",
          "x-alias": "contact.salutation",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/CustomerPatchWebAddr"
        }
      },
      "required": [
        "syncToken"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "customer",
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "EstimateBillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "PurchaseReqTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-03-26T13:25:05-07:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-03-26T13:25:05-07:00"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchSalesFormsPrefsDefaultTerms": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/JournalEntryPatchTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "PaymentPost": {
      "properties": {
        "araccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "$ref": "#/definitions/PaymentPostAraccountRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/PaymentPostCreditCardPayment"
        },
        "customerRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PaymentPostCustomerRef"
        },
        "depositToAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/PaymentPostDepositToAccountRef"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PaymentPostLine"
          },
          "type": "array"
        },
        "paymentMethodRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "$ref": "#/definitions/PaymentPostPaymentMethodRef"
        },
        "paymentRefNum": {
          "description": "The reference number for the payment received. For example,  Check # for a check, envelope # for a cash donation. ",
          "type": "string"
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. ",
          "type": "string",
          "x-alias": "description"
        },
        "processPayment": {
          "type": "boolean"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnStatus": {
          "description": "Default is PAID, The status of the transaction. For Payment objects, this status is always set to PAID.",
          "type": "string"
        }
      },
      "required": [
        "totalAmt",
        "customerRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "payment",
      "type": "object"
    },
    "CustomerPostPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "mobile"
        }
      },
      "type": "object"
    },
    "preferencesListSalesFormsPrefsDefaultTerms": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponse": {
      "properties": {
        "araccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "$ref": "#/definitions/PaymentGetAllResponseAraccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseAttachableRef"
          },
          "type": "array"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/PaymentGetAllResponseCreditCardPayment"
        },
        "currencyRef": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "$ref": "#/definitions/PaymentGetAllResponseCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PaymentGetAllResponseCustomerRef"
        },
        "depositToAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/PaymentGetAllResponseDepositToAccountRef"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. ",
          "format": "double",
          "type": "number",
          "x-alias": "exchangeRate"
        },
        "id": {
          "description": "Unique identifier for this object.\nSort order is ASC by default. ",
          "type": "string",
          "x-alias": "id",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "LIKE",
            "!="
          ]
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/PaymentGetAllResponseMetaData"
        },
        "paymentMethodRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "$ref": "#/definitions/PaymentGetAllResponsePaymentMethodRef"
        },
        "paymentRefNum": {
          "description": "The reference number for the payment received. For example,  Check # for a check, envelope # for a cash donation. ",
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "LIKE",
            "!="
          ]
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. ",
          "type": "string",
          "x-alias": "description"
        },
        "processPayment": {
          "type": "boolean"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "transactionLocationType": {
          "description": "The account location.",
          "enum": [
            "WithinFrance",
            "FranceOverseas",
            "OutsideFranceWithEU",
            "OutsideEU"
          ],
          "type": "string"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "txnSource": {
          "description": "Used internally to specify originating source of a credit card transaction",
          "type": "string"
        },
        "txnStatus": {
          "description": "Default is PAID, The status of the transaction. For Payment objects, this status is always set to PAID.",
          "type": "string"
        },
        "unappliedAmt": {
          "description": "Indicates the amount that has not been applied to pay amounts owed for sales transactions.",
          "format": "double",
          "type": "number"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "and"
      ],
      "x-vendor-objectname": "payment",
      "type": "object"
    },
    "InvoicePatchLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResVendorAndPurchasesPrefs": {
      "properties": {
        "BillableExpenseTracking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DefaultMarkup": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "POCustomField": {
          "items": {
            "$ref": "#/definitions/settingsGetResVendorAndPurchasesPrefsPOCustomField"
          },
          "type": "array"
        },
        "TrackingByCustomer": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "transferGetObjectLine": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/transferGetObjectLineAccountRef"
        },
        "amount": {
          "format": "float",
          "type": "number",
          "x-samplevalue": 1200
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/transferGetObjectLineCustomField"
          },
          "type": "array"
        },
        "depositLineDetail": {
          "$ref": "#/definitions/transferGetObjectLineDepositLineDetail"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Interest"
        },
        "detailType": {
          "enum": [
            "DEPOSIT_LINE_DETAIL"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/transferGetObjectLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "BillTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/BillTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/BillTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string",
          "x-alias": "reference"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string",
          "x-alias": "status"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPatchLineLineEx": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/PaymentPatchLineLineExAny"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VendorPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectLineDepositLineDetailEntity": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "type": {
          "enum": [
            "CUSTOMER"
          ],
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ProductPostSalesTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "salesTaxCode"
        }
      },
      "type": "object"
    },
    "ReceiptPatchRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicesalesItemLineDetail": {
      "properties": {
        "itemAccountRef": {
          "$ref": "#/definitions/InvoiceitemAccountRef"
        },
        "itemRef": {
          "$ref": "#/definitions/SalesItemitemRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "$ref": "#/definitions/SalesItemtaxCodeRef"
        },
        "unitPrice": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        }
      },
      "title": "InvoicesalesItemLineDetail",
      "type": "object"
    },
    "ProductGetAllResponseSalesTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "salesTaxCode"
        }
      },
      "type": "object"
    },
    "CustomerPaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPost": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/PurchaseOrderPostApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPostAttachableRef"
          },
          "type": "array"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderPostClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/PurchaseOrderPostCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPostCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/CodeRef"
        },
        "description": {
          "type": "string",
          "x-alias": "description"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPostLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPostLinkedTxn"
          },
          "type": "array"
        },
        "memo": {
          "type": "string"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/PurchaseOrderPostMetaData"
        },
        "pOEmail": {
          "type": "string",
          "x-alias": "vendor.contact.email"
        },
        "postatus": {
          "type": "string",
          "x-alias": "status"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "$ref": "#/definitions/PurchaseOrderPostSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/PurchaseOrderPostShipAddr"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/PurchaseOrderPostShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "purchaseOrderDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/PurchaseOrderPostTxnTaxDetail"
        },
        "vendorAddr": {
          "$ref": "#/definitions/PurchaseOrderPostVendorAddr"
        },
        "vendorRef": {
          "$ref": "#/definitions/PurchaseOrderPostVendorRef"
        }
      },
      "required": [
        "vendorRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "purchaseorder",
      "type": "object"
    },
    "PaymentGetAllResponseCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer",
          "x-alias": "cardExpiry"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostBillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetailClassRef"
        },
        "discountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountAmount"
        },
        "discountRate": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountRate"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "int64",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "serviceDate": {
          "description": "Date when the service is performed",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/InvoicePatchLineSalesItemLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "description": "The total amount of the line item including tax. Constraints: Available when endpoint is evoked with the minorversion=1query parameter.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.price"
        }
      },
      "type": "object"
    },
    "BulkUploadResponse": {
      "description": "BulkLoad response of bulk download.",
      "properties": {
        "id": {
          "description": "Id of the bulk job",
          "type": "string"
        },
        "instanceId": {
          "description": "Instance Id of the bulk job",
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "preferencesPatchSalesFormsPrefsCustomField": {
      "properties": {
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesPatchSalesFormsPrefsCustomFieldCustomField"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLineDepositLineDetailPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillGetAllTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "description": "Transaction type of the linked object. ",
          "items": {
            "$ref": "#/definitions/BillGetAllTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/BillGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PaymentLinkedTransactionResponse": {
      "description": "Transaction to which the current entity is related. For example, a billpayment line links to the originating bill object for which the billpayment is applied.",
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string",
          "x-sub-format": "Enum"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ChangedData": {
      "properties": {
        "Account": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Attachable": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Bill": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "BillPayment": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Budget": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Class": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Company": {
          "$ref": "#/definitions/CompanyChangedDataObject"
        },
        "CompanyCurrency": {
          "$ref": "#/definitions/CompanyCurrencyChangedDataObject"
        },
        "CreditMemo": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Customer": {
          "$ref": "#/definitions/CustomerChangedDataObject"
        },
        "Department": {
          "$ref": "#/definitions/DepartmentChangedDataObject"
        },
        "Deposit": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Employee": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Estimate": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Invoice": {
          "$ref": "#/definitions/InvoiceChangedDataObject"
        },
        "Item": {
          "$ref": "#/definitions/ProductChangedDataObject"
        },
        "JournalEntry": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Payment": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "PaymentMethod": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Purchase": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "PurchaseOrder": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "RefundReceipt": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Report": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "ReportMetadata": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "SalesReceipt": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "TaxAgency": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "TaxCode": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "TaxRate": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "TaxService": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Term": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "TimeActivity": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Transfer": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "Vendor": {
          "$ref": "#/definitions/ChangedDataObject"
        },
        "VendorCredit": {
          "$ref": "#/definitions/ChangedDataObject"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "cdcquery",
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicePatchDepartmentRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ProductGetAllResponseAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoicePatchTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/InvoicePatchTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/InvoicePatchTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/RefundReceiptPatchTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPostExpenseAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "expenseAccount"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqPurchaseExAny": {
      "properties": {
        "declaredType": {
          "type": "string"
        },
        "globalScope": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nil": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "typeSubstituted": {
          "type": "boolean"
        },
        "value": {
          "$ref": "#/definitions/PurchaseReqPurchaseExAnyValue"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "taxId"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPostLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePostOtherContactInfoOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesSalesFormsPrefs": {
      "properties": {
        "AllowDeposit": {
          "type": "boolean"
        },
        "AllowDiscount": {
          "type": "boolean"
        },
        "AllowEstimates": {
          "type": "boolean"
        },
        "AllowServiceDate": {
          "type": "boolean"
        },
        "AllowShipping": {
          "type": "boolean"
        },
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesSalesFormsPrefsCustomField"
          },
          "type": "array"
        },
        "CustomTxnNumbers": {
          "type": "boolean"
        },
        "DefaultCustomerMessage": {
          "type": "string"
        },
        "DefaultDiscountAccount": {
          "type": "string"
        },
        "DefaultShippingAccount": {
          "type": "string"
        },
        "DefaultTerms": {
          "$ref": "#/definitions/preferencesSalesFormsPrefsDefaultTerms"
        },
        "ETransactionAttachPDF": {
          "type": "boolean"
        },
        "ETransactionEnabledStatus": {
          "type": "string"
        },
        "ETransactionPaymentEnabled": {
          "type": "boolean"
        },
        "EmailCopyToCompany": {
          "type": "boolean"
        },
        "IPNSupportEnabled": {
          "type": "boolean"
        },
        "SalesEmailBcc": {
          "type": "string"
        },
        "SalesEmailCc": {
          "type": "string"
        },
        "UsingPriceLevels": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchShipMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/ReceiptGetAllCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/ReceiptGetAllCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PaymentPatchLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].invoice.id",
              "path": "linkedTxn[?txnType=='Invoice'].id"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseGetAllLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "settingsGetResEmailMessagesPrefsEstimateMessage": {
      "properties": {
        "Message": {
          "type": "string",
          "x-samplevalue": "my name is tani"
        },
        "Subject": {
          "type": "string",
          "x-samplevalue": "name"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/BillGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/BillGetAllTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ShipMethodRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositCreateObjectLineAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string",
          "x-alias": "lines[*].billableStatus"
        },
        "classRef": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/BillLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "CreditMemoLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "ReceiptPostCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "ReceiptPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ReceiptPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPostLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "lineEx": {
          "$ref": "#/definitions/PaymentPostLineLineEx"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentPostLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseExpenseAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "expenseAccount"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "ReceiptTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxAgencyPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "settingsGetResReportPrefs": {
      "properties": {
        "CalcAgingReportFromTxnDate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ReportBasis": {
          "type": "string",
          "x-samplevalue": "Accrual"
        }
      },
      "type": "object"
    },
    "preferencesPatch": {
      "properties": {
        "AccountingInfoPrefs": {
          "$ref": "#/definitions/preferencesPatchAccountingInfoPrefs"
        },
        "CurrencyPrefs": {
          "$ref": "#/definitions/preferencesPatchCurrencyPrefs"
        },
        "EmailMessagesPrefs": {
          "$ref": "#/definitions/preferencesPatchEmailMessagesPrefs"
        },
        "Id": {
          "type": "string"
        },
        "MetaData": {
          "$ref": "#/definitions/preferencesPatchMetaData"
        },
        "OtherPrefs": {
          "$ref": "#/definitions/preferencesPatchOtherPrefs"
        },
        "ProductAndServicesPrefs": {
          "$ref": "#/definitions/preferencesPatchProductAndServicesPrefs"
        },
        "ReportPrefs": {
          "$ref": "#/definitions/preferencesPatchReportPrefs"
        },
        "SalesFormsPrefs": {
          "$ref": "#/definitions/preferencesPatchSalesFormsPrefs"
        },
        "SyncToken": {
          "type": "string"
        },
        "TaxPrefs": {
          "$ref": "#/definitions/preferencesPatchTaxPrefs"
        },
        "TimeTrackingPrefs": {
          "$ref": "#/definitions/preferencesPatchTimeTrackingPrefs"
        },
        "VendorAndPurchasesPrefs": {
          "$ref": "#/definitions/preferencesPatchVendorAndPurchasesPrefs"
        },
        "domain": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        }
      },
      "required": [
        "SyncToken",
        "sparse"
      ],
      "x-has-customfields": true,
      "x-vendor-objectname": "preferences",
      "type": "object"
    },
    "PaymentDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "bankAccount"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoicePatchLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptPatchLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "EmployeePostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "InvoicePostTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllBillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllShipMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ItemRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "header": {
      "properties": {
        "currency": {
          "type": "string"
        },
        "dateMacro": {
          "type": "string"
        },
        "endPeriod": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd"
        },
        "option": {
          "items": {
            "$ref": "#/definitions/option"
          },
          "type": "array"
        },
        "reportBasis": {
          "type": "string"
        },
        "reportName": {
          "type": "string"
        },
        "startPeriod": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd"
        },
        "summarizeColumnsBy": {
          "type": "string"
        },
        "time": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "TaxService": {
      "properties": {
        "id": {
          "type": "string"
        },
        "taxCode": {
          "type": "string"
        },
        "taxCodeId": {
          "type": "string",
          "x-readOnly": true
        },
        "taxRateDetails": {
          "items": {
            "$ref": "#/definitions/TaxRateDetails"
          },
          "type": "array"
        }
      },
      "required": [
        "taxCode",
        "taxRateDetails"
      ],
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "taxservice",
      "type": "object"
    },
    "DepositsGetAllLineAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResSalesFormsPrefs": {
      "properties": {
        "AllowDeposit": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AllowDiscount": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AllowEstimates": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "AllowServiceDate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "AllowShipping": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "CustomField": {
          "items": {
            "$ref": "#/definitions/settingsGetResSalesFormsPrefsCustomField"
          },
          "type": "array"
        },
        "CustomTxnNumbers": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "DefaultTerms": {
          "$ref": "#/definitions/settingsGetResSalesFormsPrefsDefaultTerms"
        },
        "ETransactionAttachPDF": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ETransactionEnabledStatus": {
          "type": "string",
          "x-samplevalue": "NotApplicable"
        },
        "ETransactionPaymentEnabled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "IPNSupportEnabled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UsingPriceLevels": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "PurchaseReqAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PaymentPostDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "bankAccount"
        }
      },
      "type": "object"
    },
    "ProductPatchUQCId": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "inventoryStockUom"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ArAccountRefResponse": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-reference-objectname": "Account"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-reference-objectname": "Account"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentMethodPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PaymentMethodPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "transferGetObjectAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "type": "object"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Companyemail": {
      "properties": {
        "address": {
          "type": "string",
          "x-samplevalue": "quickbooks@cloud-elements.com"
        }
      },
      "title": "Companyemail",
      "type": "object"
    },
    "CustomerPostDefaultTaxCodeRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "Department": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/DepartmentAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/DepartmentCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "$ref": "#/definitions/DepartmentMetaData"
        },
        "name": {
          "type": "string"
        },
        "parentRef": {
          "$ref": "#/definitions/DepartmentParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subDepartment": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "department",
      "type": "object"
    },
    "transferGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number",
          "x-sub-format": "Money"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string",
          "x-sub-format": "Street Address"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer",
          "x-sub-format": "Enum"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer",
          "x-length": 4
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string",
          "x-sub-format": "Postal Code"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillPutTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cool Cars"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "3"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositCreateObjectLineDepositLineDetailPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalCodeGetAll": {
      "properties": {
        "Description": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/JournalCodeGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalCodeGetAllCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "metaData": {
          "$ref": "#/definitions/JournalCodeGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "VT",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "time": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
          "x-samplevalue": "2015-12-16T11:01:37.346-07:00"
        },
        "type": {
          "enum": [
            "Expenses",
            "Sales",
            "Bank",
            "Nouveaux",
            "Wages",
            "Cash",
            "Others"
          ],
          "type": "string",
          "x-samplevalue": "Sales"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "JournalCode",
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentGetAllResponseAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PaymentGetAllResponseAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JournalEntryTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/JournalEntryTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/JournalEntryTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillPaymentCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "ReceiptPost": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/ReceiptPostAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "int32",
          "type": "integer"
        },
        "billAddr": {
          "$ref": "#/definitions/ReceiptPostBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/ReceiptPostBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/ReceiptPostCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/ReceiptPostClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/ReceiptPostCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/ReceiptPostCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPostCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/ReceiptPostCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/ReceiptPostCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/ReceiptPostDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/ReceiptPostDepositToAccountRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/ReceiptPostLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPostLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/ReceiptPostMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/ReceiptPostPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/ReceiptPostRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/ReceiptPostSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/ReceiptPostShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/ReceiptPostShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/ReceiptPostTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/ReceiptPostTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "salesreceipt",
      "type": "object"
    },
    "CustomerGetAllResponseMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatch": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "$ref": "#/definitions/RefundReceiptPatchAttachableRef"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "$ref": "#/definitions/RefundReceiptPatchBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/RefundReceiptPatchBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/RefundReceiptPatchCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/RefundReceiptPatchClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/RefundReceiptPatchCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/RefundReceiptPatchCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/RefundReceiptPatchCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/RefundReceiptPatchCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/RefundReceiptPatchDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchDepositToAccountRef"
        },
        "docNumber": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/RefundReceiptPatchMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/RefundReceiptPatchPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/RefundReceiptPatchRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/RefundReceiptPatchSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/RefundReceiptPatchShipAddr"
        },
        "shipDate": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/RefundReceiptPatchShipMethodRef"
        },
        "syncToken": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/RefundReceiptPatchTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/RefundReceiptPatchTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "refundreceipt",
      "type": "object"
    },
    "preferencesEmailMessagesPrefs": {
      "properties": {
        "EstimateMessage": {
          "$ref": "#/definitions/preferencesEmailMessagesPrefsEstimateMessage"
        },
        "InvoiceMessage": {
          "$ref": "#/definitions/preferencesEmailMessagesPrefsInvoiceMessage"
        },
        "SalesReceiptMessage": {
          "$ref": "#/definitions/preferencesEmailMessagesPrefsSalesReceiptMessage"
        },
        "StatementMessage": {
          "$ref": "#/definitions/preferencesEmailMessagesPrefsStatementMessage"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTLine": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 35.55
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Pest Control Services"
        },
        "detailType": {
          "type": "string",
          "x-samplevalue": "SalesItemLineDetail"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/EstimatePOSTLineDiscountLineDetail"
        },
        "id": {
          "type": "string",
          "x-conditionally-required-description": "Required for update",
          "x-samplevalue": "1"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/EstimatePOSTLineSalesItemLineDetail"
        }
      },
      "type": "object"
    },
    "BillPutAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchInvoiceStatusLog": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicePatchInvoiceStatusLogCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoicePatchInvoiceStatusLogEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].bill.id",
              "description": "lines[*].bill.id will be mapped to id field under linkedTxn array when txnType is Bill",
              "path": "linkedTxn[?txnType=='Bill'].id"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DescriptionLineDetailResponse": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-sub-format": "Date Time-ISO 8601"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/TaxCodeRefResponse",
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively."
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPostPurchaseTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "purchaseTaxCode"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostParentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "parentName"
        },
        "value": {
          "type": "string",
          "x-alias": "parentAcc.id"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cool Cars"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "3"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "ReceiptPatchTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPatchTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptPatchTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "currency"
        }
      },
      "type": "object"
    },
    "InvoiceTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPostEmployeeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCheckPaymentBankAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceInvoiceStatusLog": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoiceInvoiceStatusLogCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoiceInvoiceStatusLogEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferUpdateObjectToAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "RefundReceiptRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "taxRate",
              "path": "txnTaxDetail.taxLine[*].taxLineDetail.taxPercent | [0]"
            }
          ]
        },
        "taxRateRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceInvoiceStatusLogEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "format": "double",
          "type": "number"
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CustomerDefaultTaxCodeRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoicePatchLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "PaymentMethodGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoicePostTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchPaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "summary": {
      "properties": {
        "colData": {
          "items": {
            "$ref": "#/definitions/colData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomerGetAllResponseAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CustomerGetAllResponseAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomerAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CustomerAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomersalesTermRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "7"
        }
      },
      "title": "CustomersalesTermRef",
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "type": "object"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer",
          "x-alias": "lines[*].orderedQuantity"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.cost"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReceiptPostTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAll": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            ">",
            ">=",
            "<",
            "<="
          ]
        },
        "billAddr": {
          "$ref": "#/definitions/CreditMemoGetAllBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/CreditMemoGetAllBillEmail"
        },
        "billEmailBcc": {
          "description": "Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent.",
          "$ref": "#/definitions/CreditMemoGetAllBillEmailBcc"
        },
        "billEmailCc": {
          "description": "Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent.",
          "$ref": "#/definitions/CreditMemoGetAllBillEmailCc"
        },
        "classRef": {
          "$ref": "#/definitions/CreditMemoGetAllClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/CreditMemoGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/CreditMemoGetAllCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/CreditMemoGetAllCustomerRef"
        },
        "deliveryInfo": {
          "description": "Email delivery information. Returned when a request has been made to deliver email with the send operation.",
          "$ref": "#/definitions/CreditMemoGetAllDeliveryInfo"
        },
        "departmentRef": {
          "$ref": "#/definitions/CreditMemoGetAllDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "docNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<"
          ]
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/CreditMemoGetAllMetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/CreditMemoGetAllPaymentMethodRef"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remainingCredit": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "salesTermRef": {
          "$ref": "#/definitions/CreditMemoGetAllSalesTermRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/CreditMemoGetAllShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "creditmemo",
      "type": "object"
    },
    "PaymentPatchCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "description": "The amount processed using the credit card.",
          "$ref": "#/definitions/PaymentPatchCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "$ref": "#/definitions/PaymentPatchCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "BillPaymentLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLine": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/DepositsGetAllLineAccountRef"
        },
        "amount": {
          "format": "float",
          "type": "number",
          "x-samplevalue": 1200
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllLineCustomField"
          },
          "type": "array"
        },
        "depositLineDetail": {
          "$ref": "#/definitions/DepositsGetAllLineDepositLineDetail"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Interest"
        },
        "detailType": {
          "enum": [
            "DEPOSIT_LINE_DETAIL"
          ],
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "VendorCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "VendorPatchTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerdefinition-name": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definition-name",
      "properties": {
        "properties": {
          "$ref": "#/definitions/swaggerproperties"
        }
      }
    },
    "RefundReceiptGetAllRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "InvoiceBillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchVendorAndPurchasesPrefs": {
      "properties": {
        "BillableExpenseTracking": {
          "type": "boolean"
        },
        "DefaultMarkup": {
          "format": "double",
          "type": "number"
        },
        "DefaultTerms": {
          "$ref": "#/definitions/preferencesPatchVendorAndPurchasesPrefsDefaultTerms"
        },
        "POCustomField": {
          "items": {
            "$ref": "#/definitions/preferencesPatchVendorAndPurchasesPrefsPOCustomField"
          },
          "type": "array"
        },
        "TrackingByCustomer": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "BillPaymentPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResProductAndServicesPrefs": {
      "properties": {
        "ForPurchase": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ForSales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "QuantityOnHand": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "QuantityWithPriceAndRate": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string",
          "x-alias": "id"
        },
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "stringValue": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "markUpIncomeAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetailMarkupInfoMarkUpIncomeAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        }
      },
      "type": "object"
    },
    "RefundReceipt": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/RefundReceiptAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "$ref": "#/definitions/RefundReceiptBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/RefundReceiptBillEmail"
        },
        "checkPayment": {
          "$ref": "#/definitions/RefundReceiptCheckPayment"
        },
        "classRef": {
          "$ref": "#/definitions/RefundReceiptClassRef"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/RefundReceiptCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/RefundReceiptCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/RefundReceiptCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/RefundReceiptCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/RefundReceiptDepartmentRef"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/RefundReceiptDepositToAccountRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "fOB": {
          "type": "string"
        },
        "financeCharge": {
          "type": "boolean"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/RefundReceiptLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/RefundReceiptMetaData"
        },
        "pONumber": {
          "type": "string"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/RefundReceiptPaymentMethodRef"
        },
        "paymentRefNum": {
          "type": "string"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remitToRef": {
          "$ref": "#/definitions/RefundReceiptRemitToRef"
        },
        "salesRepRef": {
          "$ref": "#/definitions/RefundReceiptSalesRepRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/RefundReceiptShipAddr"
        },
        "shipDate": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        },
        "shipMethodRef": {
          "$ref": "#/definitions/RefundReceiptShipMethodRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "templateRef": {
          "$ref": "#/definitions/RefundReceiptTemplateRef"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "trackingNum": {
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnStatus": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "refundreceipt",
      "type": "object"
    },
    "CreditMemoPatchLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReceiptPostClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResTaxPrefs": {
      "properties": {
        "TaxGroupCodeRef": {
          "$ref": "#/definitions/settingsGetResTaxPrefsTaxGroupCodeRef"
        },
        "UsingSalesTax": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "type": "object"
    },
    "CustomerAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "CreditMemoShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "CurrencyRefResponse": {
      "description": "Reference to the currency in which all amounts for this customer are expressed. If not specified, currency for this customer is the home currency of the company",
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-samplevalue": "USD",
          "x-sub-format": "Currency"
        }
      },
      "type": "object"
    },
    "VendorPatchPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchShipMethodRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/VendorCreditReqLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditReqLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/VendorCreditReqLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/VendorCreditReqLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PurchaseAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PurchaseAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "depositsObjectLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PaymentLineLineExAnyValue": {
      "properties": {
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "txnId"
        },
        "Value": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "36"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CompanywebSite": {
      "properties": {
        "uri": {
          "type": "string",
          "x-samplevalue": "www.samplename.com"
        }
      },
      "title": "CompanywebSite",
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/PurchaseTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/CreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/CreditChargeResponse"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReportMetadataList": {
      "items": {
        "$ref": "#/definitions/ReportMetadata"
      },
      "type": "array"
    },
    "CustomerPostBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "VendorGetAll": {
      "properties": {
        "acctNum": {
          "type": "string",
          "x-alias": "account"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "alternatePhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/VendorGetAllAlternatePhone"
        },
        "apaccountRef": {
          "$ref": "#/definitions/VendorGetAllApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/VendorGetAllAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "billAddr": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "$ref": "#/definitions/VendorGetAllBillAddr"
        },
        "companyName": {
          "type": "string",
          "x-alias": "name",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "currencyRef": {
          "$ref": "#/definitions/VendorGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorGetAllCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "type": "string",
          "x-alias": "contact.lastName",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "fax": {
          "$ref": "#/definitions/VendorGetAllFax"
        },
        "givenName": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/VendorGetAllMetaData"
        },
        "middleName": {
          "type": "string",
          "x-alias": "contact.middleName",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "mobile": {
          "$ref": "#/definitions/VendorGetAllMobile"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/VendorGetAllOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/VendorGetAllOtherContactInfo"
          },
          "type": "array"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/VendorGetAllPrimaryEmailAddr"
        },
        "primaryPhone": {
          "$ref": "#/definitions/VendorGetAllPrimaryPhone"
        },
        "printOnCheckName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "sparse": {
          "type": "boolean"
        },
        "suffix": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "LIKE"
          ]
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "taxReportingBasis": {
          "type": "string"
        },
        "termRef": {
          "$ref": "#/definitions/VendorGetAllTermRef"
        },
        "title": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "vendor1099": {
          "type": "boolean"
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/VendorGetAllWebAddr"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "vendor",
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "InvoicePostLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "PaymentPatchPaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact-POST-Response",
          "type": "string"
        }
      }
    },
    "CreditTermGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditTermGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CreditTermGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerPostShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllPrimaryAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "address.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "address.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "address.line3",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "address.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "CreditMemoPatch": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "$ref": "#/definitions/CreditMemoPatchAttachableRef"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "$ref": "#/definitions/CreditMemoPatchBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/CreditMemoPatchBillEmail"
        },
        "classRef": {
          "$ref": "#/definitions/CreditMemoPatchClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/CreditMemoPatchCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/CreditMemoPatchCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/CreditMemoPatchCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/CreditMemoPatchDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/CreditMemoPatchMetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/CreditMemoPatchPaymentMethodRef"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remainingCredit": {
          "format": "double",
          "type": "number"
        },
        "salesTermRef": {
          "$ref": "#/definitions/CreditMemoPatchSalesTermRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/CreditMemoPatchShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "creditmemo",
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditReqAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/VendorCreditReqAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseOpenBalanceDate": {
      "properties": {
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM"
        }
      },
      "type": "object"
    },
    "InvoiceCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchBillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseOrderGetAllLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchDefaultTaxCodeRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.  Use TaxCode.Id and TaxCode.Name from that object for DefaultTaxCodeRef.value and DefaultTaxCodeRef.name, respectively.",
          "type": "string",
          "x-alias": "taxCode"
        }
      },
      "type": "object"
    },
    "TaxAgency": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TaxAgencyAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxAgencyCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastFileDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "metaData": {
          "$ref": "#/definitions/TaxAgencyMetaData"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/TaxAgencyOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/TaxAgencyOtherContactInfo"
          },
          "type": "array"
        },
        "reportingPeriod": {
          "type": "string"
        },
        "salesTaxCodeRef": {
          "type": "string"
        },
        "salesTaxCountry": {
          "type": "string"
        },
        "salesTaxReturnRef": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxAgencyExt": {
          "type": "string"
        },
        "taxOnTax": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxTrackedOnPurchases": {
          "type": "boolean"
        },
        "taxTrackedOnSales": {
          "type": "boolean"
        },
        "taxTrackedOnSalesAccountRef": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "taxagency",
      "type": "object"
    },
    "ReceiptPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxRateGetAllAgencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPatchParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "EmployeePostPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPaymentMethodRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "Bill": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/BillAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue"
        },
        "billAddr": {
          "$ref": "#/definitions/BillBillAddr"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/BillMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "salesTermRef": {
          "$ref": "#/definitions/BillSalesTermRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "x-alias": "status"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/BillTxnTaxDetail"
        },
        "vendorRef": {
          "$ref": "#/definitions/BillVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "bill",
      "type": "object"
    },
    "InvoiceGetAllResponseBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            "<",
            "!=",
            ">=",
            "<=",
            "LIKE"
          ]
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "attachments": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/attachmentsAttachableRef"
          },
          "type": "array"
        },
        "category": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contentType": {
          "type": "string",
          "x-samplevalue": "image/jpeg"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "fileAccessUri": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "fileName": {
          "type": "string",
          "x-name": true,
          "x-samplevalue": "receipt_nov15.jpg"
        },
        "id": {
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "100000000004190865"
        },
        "lat": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "long": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "metaData": {
          "$ref": "#/definitions/attachmentsMetaData"
        },
        "note": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "placeName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "size": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1594261
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "100000000015542161"
        },
        "tag": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tempDownloadUri": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "thumbnailFileAccessUri": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "thumbnailTempDownloadUri": {
          "type": "string"
        }
      },
      "title": "attachments",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "attachable"
    },
    "BillPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccoutRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "format": "bool",
          "type": "boolean"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "format": "bool",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectLineDepositLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "type": "object"
    },
    "ItemAccountRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "ReceiptPostCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EmployeeGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EmployeeGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-alias": "status",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/EmployeeGetAllAttachableRef"
          },
          "type": "array"
        },
        "billRate": {
          "description": "This attribute can only be set if billableTime is true",
          "format": "float",
          "type": "number"
        },
        "billableTime": {
          "type": "boolean"
        },
        "birthDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dob",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EmployeeGetAllCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "employeeNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "familyName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "lastName",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "gender": {
          "enum": [
            "MALE",
            "FEMALE"
          ],
          "type": "string",
          "x-alias": "gender"
        },
        "givenName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "firstName",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "hiredDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "hireDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/EmployeeGetAllMetaData"
        },
        "middleName": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "middleName",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!="
          ]
        },
        "mobile": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/EmployeeGetAllMobile"
        },
        "organization": {
          "type": "boolean"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/EmployeeGetAllOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/EmployeeGetAllOtherContactInfo"
          },
          "type": "array"
        },
        "primaryAddr": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "$ref": "#/definitions/EmployeeGetAllPrimaryAddr"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/EmployeeGetAllPrimaryEmailAddr"
        },
        "primaryPhone": {
          "x-alias": "phone",
          "$ref": "#/definitions/EmployeeGetAllPrimaryPhone"
        },
        "printOnCheckName": {
          "description": "Cannot be removed with a partial (sparse) update",
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "printStatus": {
          "type": "string"
        },
        "releasedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "releaseDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "ssn": {
          "type": "string",
          "x-alias": "ssn"
        },
        "suffix": {
          "description": "At least one of the name elements must be present to use suffix",
          "type": "string",
          "x-searchable": false
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "title": {
          "description": "At least one of the name elements (title, middleName, givenName, familyName) is required",
          "type": "string",
          "x-alias": "salutation"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "employee",
      "type": "object"
    },
    "ChangedDataObject": {
      "properties": {
        "entities": {
          "items": {
            "$ref": "#/definitions/InvoiceEntities"
          },
          "type": "array"
        },
        "maxResults": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        },
        "startPosition": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 304
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "depositCreateObjectLineDepositLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/depositCreateObjectLineDepositLineDetailAccountRef"
        },
        "checkNum": {
          "type": "string",
          "x-samplevalue": "8602"
        },
        "entity": {
          "$ref": "#/definitions/depositCreateObjectLineDepositLineDetailEntity"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/depositCreateObjectLineDepositLineDetailPaymentMethodRef"
        }
      },
      "type": "object"
    },
    "TaxCodeAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerpaths": {
      "x-has-customfields": false,
      "type": "object",
      "title": "paths",
      "properties": {
        "/contacts": {
          "$ref": "#/definitions/swagger-contacts-path"
        }
      }
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ClassAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/ClassAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ClassAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccoutRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "format": "bool",
          "type": "boolean"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "format": "bool",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPost": {
      "properties": {
        "active": {
          "description": "If true, the object is currently enabled for use by QuickBooks.",
          "format": "float",
          "type": "boolean",
          "x-alias": "active"
        },
        "assetAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductPostAssetAccountRef"
        },
        "description": {
          "description": "Description of the item.",
          "type": "string",
          "x-alias": "inventoryStockDescription"
        },
        "expenseAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPostExpenseAccountRef"
        },
        "incomeAccountRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/ProductPostIncomeAccountRef"
        },
        "invStartDate": {
          "description": "Date of opening balance for the inventory transaction. For read operations, the date returned in this field is always the originally provided inventory start date. For update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "name": {
          "description": "Name of the item",
          "type": "string",
          "x-alias": "name"
        },
        "parentRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPostParentRef"
        },
        "prefVendorRef": {
          "$ref": "#/definitions/ProductPostPrefVendorRef"
        },
        "purchaseCost": {
          "description": "Amount paid when buying or ordering the item, as expressed in the home currency",
          "format": "int32",
          "type": "integer",
          "x-alias": "cost"
        },
        "purchaseDesc": {
          "description": "Purchase description for the item.",
          "type": "string",
          "x-alias": "purchaseDescription"
        },
        "purchaseTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPostPurchaseTaxCodeRef"
        },
        "purchaseTaxInclusive": {
          "description": "Default is false. True if the purchase tax is included in the item amount.",
          "type": "boolean"
        },
        "qtyOnHand": {
          "description": "Current quantity of the Inventory items available for sale. Not used for Service or NonInventory type items.",
          "format": "float",
          "type": "number",
          "x-alias": "quantityOnHand"
        },
        "reorderPoint": {
          "format": "double",
          "type": "number",
          "x-alias": "reOrderPoint"
        },
        "salesTaxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/ProductPostSalesTaxCodeRef"
        },
        "salesTaxInclusive": {
          "description": "Default is false. True only if sales tax is included in the item amount.",
          "type": "boolean"
        },
        "subItem": {
          "description": "If true, this is a sub item. If false or null, this is a top-level item. Creating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.",
          "type": "boolean"
        },
        "taxable": {
          "description": "If true, transactions for this item are taxable. Applicable to US companies, only.",
          "type": "boolean",
          "x-alias": "taxable"
        },
        "trackQtyOnHand": {
          "description": "True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type Inventory. Not applicable for Service or NonInventory item types.",
          "type": "boolean"
        },
        "type": {
          "description": "Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types. For requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows:Inventory--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are specified. Used for goods the company sells and buys that are tracked as inventory.Service--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.",
          "enum": [
            "INVENTORY",
            "SERVICE",
            "CATEGORY"
          ],
          "type": "string",
          "x-alias": "type"
        },
        "uQCId": {
          "$ref": "#/definitions/ProductPostUQCId"
        },
        "unitPrice": {
          "description": "Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "int32",
          "type": "integer",
          "x-alias": "price"
        }
      },
      "required": [
        "incomeAccountRef",
        "name",
        "type"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "item",
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CreditMemoPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseReqLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "Email": {
      "properties": {
        "Address": {
          "type": "string",
          "x-samplevalue": "quickbooks@cloud-elements.com"
        }
      },
      "title": "Email",
      "type": "object",
      "x-has-customfields": false
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccoutRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponseCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListMetaData": {
      "properties": {
        "CreateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssXXX"
        },
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssXXX"
        }
      },
      "type": "object"
    },
    "TaxRateGetAll": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "="
          ]
        },
        "agencyRef": {
          "$ref": "#/definitions/TaxRateGetAllAgencyRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TaxRateGetAllAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxRateGetAllCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "displayType": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "effectiveTaxRate": {
          "items": {
            "$ref": "#/definitions/TaxRateGetAllEffectiveTaxRate"
          },
          "type": "array"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "metaData": {
          "$ref": "#/definitions/TaxRateGetAllMetaData"
        },
        "name": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "rateValue": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "sparse": {
          "type": "boolean"
        },
        "specialTaxType": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "syncToken": {
          "type": "string"
        },
        "taxReturnLineRef": {
          "$ref": "#/definitions/TaxRateGetAllTaxReturnLineRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "taxrate",
      "type": "object"
    },
    "VendorGetAllMobile": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityPatchAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/TimeActivityPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "attachmentsPost": {
      "properties": {
        "Id": {
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "100000000004190865"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/attachmentsAttachableRef"
          },
          "type": "array"
        },
        "category": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contentType": {
          "type": "string",
          "x-samplevalue": "image/jpeg"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "fileAccessUri": {
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "string"
        },
        "fileName": {
          "type": "string",
          "x-samplevalue": "receipt_nov15.jpg"
        },
        "lat": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "long": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "metaData": {
          "$ref": "#/definitions/attachmentsMetaData"
        },
        "note": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "placeName": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "size": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1594261
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "0"
        },
        "tag": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tempDownloadUri": {
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "string"
        },
        "thumbnailFileAccessUri": {
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "string"
        }
      },
      "title": "attachmentsPost",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "attachable"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptPatchSalesRepRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineItemBasedExpenseLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].product.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResVendorAndPurchasesPrefsPOCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "PurchasePrefs.PurchaseCustomName1"
        },
        "StringValue": {
          "type": "string",
          "x-samplevalue": "Due Date"
        },
        "Type": {
          "type": "string",
          "x-samplevalue": "StringType"
        }
      },
      "type": "object"
    },
    "InvoiceLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "InvoicePostBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPostAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePatchLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is payment"
            },
            {
              "alias": "parentDocumentNumber",
              "description": "parentDocumentNumber maps to txnId field under linkedTxn array when txnType is estimate"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineJournalEntryLineDetailDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPrefVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentCreditCardPaymentCcAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "ccBankAccount"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLineDepositLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cost of Goods Sold"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "79"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PurchaseGetAllLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "swaggerpost": {
      "x-has-customfields": false,
      "type": "object",
      "title": "post",
      "properties": {
        "summary": {
          "x-samplevalue": "Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.",
          "type": "string"
        },
        "operationId": {
          "x-samplevalue": "createContact",
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/swaggerresponses"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggerparameters"
          }
        },
        "tags": {
          "x-samplevalue": [
            "contacts"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "DepartmentReqParentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "BillPutMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "depositsObject": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/depositsObjectAttachableRef"
          },
          "type": "array"
        },
        "cashBack": {
          "$ref": "#/definitions/depositsObjectCashBack"
        },
        "currencyRef": {
          "$ref": "#/definitions/depositsObjectCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/depositsObjectCustomField"
          },
          "type": "array"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/depositsObjectDepositToAccountRef"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4700
        },
        "id": {
          "type": "string",
          "x-samplevalue": "237|0"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/depositsObjectLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/depositsObjectLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/depositsObjectMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-samplevalue": "Deposit"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "237"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4700
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-12-14T00:00:00-06:00"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/depositsObjectTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "deposit",
      "type": "object"
    },
    "CreditMemoLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchInvoiceStatusLogCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransaction"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/PurchaseOrderPatchTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "BillLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "purchase-order.id",
              "description": "purchase-order.id maps to txnId field under linkedTxn array when txnType is PurchaseOrder"
            },
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is BillPaymentCheck"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorMobile": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "budgetsGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListOtherPrefs": {
      "properties": {
        "NameValue": {
          "items": {
            "$ref": "#/definitions/preferencesListOtherPrefsNameValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllBillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "AttachableRefResponse": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EntityRefResponse"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "JournalEntryPostReqLineJournalEntryLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetailClassRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetailDepartmentRef"
        },
        "entity": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetailEntity"
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetailJournalCodeRef"
        },
        "postingType": {
          "type": "string"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxApplicableOn": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductincomeAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Sales of Product Income"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "181"
        }
      },
      "title": "ProductincomeAccountRef",
      "type": "object"
    },
    "JournalEntryGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountRate",
              "path": "line[*].discountLineDetail.discountPercent | [0]"
            }
          ]
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "VendorPatchApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCheckPayment": {
      "properties": {
        "CheckNum": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "acctNum": {
          "type": "boolean"
        },
        "bankName": {
          "type": "string"
        },
        "nameOnAcct": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/JournalEntryPatchLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "budgetsGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "InvoicebillEmail": {
      "properties": {
        "address": {
          "type": "string",
          "x-samplevalue": "keith@cloud-elements.com"
        }
      },
      "title": "InvoicebillEmail",
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPost": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillPaymentPostApaccountRef"
        },
        "attachableRef": {
          "$ref": "#/definitions/BillPaymentPostAttachableRef"
        },
        "checkPayment": {
          "$ref": "#/definitions/BillPaymentPostCheckPayment"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/BillPaymentPostCreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillPaymentPostCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentPostCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillPaymentPostDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillPaymentPostLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentPostLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/BillPaymentPostMetaData"
        },
        "payType": {
          "type": "string",
          "x-alias": "paymentMethod"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description"
        },
        "processBillPayment": {
          "type": "boolean"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/BillPaymentPostVendorRef"
        }
      },
      "required": [
        "checkPayment",
        "totalAmt",
        "vendorRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "billpayment",
      "type": "object"
    },
    "PurchaseOrderPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item. For Invoice objects in global locales: when updating Amount, remove the TxnTaxDetail element in the object before submitting it in the update request payload.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountAmount",
              "description": "discountAmount maps to amount field under line array when detailType is DISCOUNT_LINE_DETAIL"
            },
            {
              "alias": "subTotal",
              "description": "subTotal maps to amount field under line array when detailType is SUB_TOTAL_LINE_DETAIL"
            },
            {
              "alias": "lines[*].subTotal",
              "description": "lines[*].subTotal maps to amount field under line array when detailType is SALES_ITEM_LINE_DETAIL"
            }
          ]
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Set to SalesItemLineDetail this type of line.",
          "enum": [
            "SALES_ITEM_LINE_DETAIL",
            "SUB_TOTAL_LINE_DETAIL"
          ],
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation.",
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/InvoiceGetAllResponseLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineSubtotalLineDetail"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "transferGetObjectLineDepositLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/transferGetObjectLineDepositLineDetailAccountRef"
        },
        "checkNum": {
          "type": "string",
          "x-samplevalue": "8602"
        },
        "entity": {
          "$ref": "#/definitions/transferGetObjectLineDepositLineDetailEntity"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/transferGetObjectLineDepositLineDetailPaymentMethodRef"
        }
      },
      "type": "object"
    },
    "JournalEntry": {
      "properties": {
        "adjustment": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/JournalEntryAttachableRef"
          },
          "type": "array"
        },
        "currencyRef": {
          "$ref": "#/definitions/JournalEntryCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryCustomField"
          },
          "type": "array"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryEntityRef"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryJournalCodeRef"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/JournalEntryLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/JournalEntryMetaData"
        },
        "privateNote": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/JournalEntryTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "journalentry",
      "type": "object"
    },
    "settingsGetResSalesFormsPrefsCustomFieldCustomField": {
      "properties": {
        "BooleanValue": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "Name": {
          "type": "string",
          "x-samplevalue": "SalesFormsPrefs.PrintOrderSalesCustom2"
        },
        "StringValue": {
          "type": "string",
          "x-samplevalue": "2"
        },
        "Type": {
          "type": "string",
          "x-samplevalue": "StringType"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillDepartmentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "InvoicePatchDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetailClassRef"
        },
        "discountAmount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountAmount"
        },
        "discountRate": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].discountRate"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "int64",
          "type": "integer",
          "x-alias": "lines[*].quantity"
        },
        "serviceDate": {
          "description": "Date when the service is performed",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/InvoiceGetAllResponseLineSalesItemLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "description": "The total amount of the line item including tax. Constraints: Available when endpoint is evoked with the minorversion=1query parameter.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].totalAmount"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].product.price"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditChargeResponse": {
      "description": "Holds credit-card transaction response information from a merchant account service. ",
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "RefundReceiptClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorCreditAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/VendorCreditAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "budgetsGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeeGetAllOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateCustomerMemo": {
      "properties": {
        "value": {
          "description": "maximum 1000 chars, default is null User-entered message to the customer; this message is visible to the end user on their transactions.",
          "type": "string",
          "x-samplevalue": "Thank you for your business and have a great day!"
        }
      },
      "type": "object"
    },
    "MarkupInfoResponse": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/EntityRefResponse"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ItemAccountRefResponse",
          "x-readOnly": true
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/MarkkupAccountRefResponse",
          "x-readOnly": true
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/PriceLevelRefResponse"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllVendorRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "preferencesTaxPrefs": {
      "properties": {
        "TaxGroupCodeRef": {
          "$ref": "#/definitions/preferencesTaxPrefsTaxGroupCodeRef"
        },
        "UsingSalesTax": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CompanycompanyAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "lat": {
          "type": "string",
          "x-samplevalue": "29.3755352"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "1735 County Road"
        },
        "long": {
          "type": "string",
          "x-samplevalue": "-98.5052734"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "CompanycompanyAddr",
      "type": "object"
    },
    "settingsGetResOtherPrefsNameValue": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "SalesFormsPrefs.DefaultCustomerMessage"
        },
        "Value": {
          "type": "string",
          "x-samplevalue": "99"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListCurrencyPrefsHomeCurrency": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditTermAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditTermAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CreditTermAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillPostTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "13"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineItemBasedExpenseLineDetailPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DiscountLineDetailResponse": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/ClassRefResponse",
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively"
        },
        "discountAccountRef": {
          "$ref": "#/definitions/DiscountAccountRefResponse",
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/TaxCodeRefResponse",
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively."
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/RefundReceiptGetAllCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/RefundReceiptGetAllCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchSalesTermRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListVendorAndPurchasesPrefsDefaultTerms": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetailEntityEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerresponses": {
      "x-has-customfields": false,
      "type": "object",
      "title": "responses",
      "properties": {
        "200": {
          "$ref": "#/definitions/swagger200"
        },
        "400": {
          "$ref": "#/definitions/swagger400"
        },
        "401": {
          "$ref": "#/definitions/swagger401"
        },
        "403": {
          "$ref": "#/definitions/swagger403"
        },
        "404": {
          "$ref": "#/definitions/swagger404"
        },
        "405": {
          "$ref": "#/definitions/swagger405"
        },
        "406": {
          "$ref": "#/definitions/swagger406"
        },
        "409": {
          "$ref": "#/definitions/swagger409"
        },
        "415": {
          "$ref": "#/definitions/swagger415"
        },
        "500": {
          "$ref": "#/definitions/swagger500"
        },
        "502": {
          "$ref": "#/definitions/swagger502"
        }
      }
    },
    "VendorGetAllFax": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "CreditMemoAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/CreditMemoAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseReqPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "row": {
      "properties": {
        "group": {
          "type": "string"
        },
        "summary": {
          "$ref": "#/definitions/summary"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatch": {
      "properties": {
        "acctNum": {
          "type": "string",
          "x-alias": "account"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active"
        },
        "alternatePhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/VendorPatchAlternatePhone"
        },
        "apaccountRef": {
          "$ref": "#/definitions/VendorPatchApaccountRef"
        },
        "attachableRef": {
          "$ref": "#/definitions/VendorPatchAttachableRef"
        },
        "balance": {
          "format": "int32",
          "type": "integer",
          "x-alias": "totalOutstandingAmount"
        },
        "billAddr": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "$ref": "#/definitions/VendorPatchBillAddr"
        },
        "companyName": {
          "type": "string",
          "x-alias": "name"
        },
        "currencyRef": {
          "$ref": "#/definitions/VendorPatchCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorPatchCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "type": "string",
          "x-alias": "contact.lastName"
        },
        "fax": {
          "$ref": "#/definitions/VendorPatchFax"
        },
        "givenName": {
          "type": "string",
          "x-alias": "contact.firstName"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "metaData": {
          "description": "Time the entity was last updated in the source domain. ",
          "$ref": "#/definitions/VendorPatchMetaData"
        },
        "middleName": {
          "type": "string",
          "x-alias": "contact.middleName"
        },
        "mobile": {
          "$ref": "#/definitions/VendorPatchMobile"
        },
        "otherAddr": {
          "$ref": "#/definitions/VendorPatchOtherAddr"
        },
        "otherContactInfo": {
          "$ref": "#/definitions/VendorPatchOtherContactInfo"
        },
        "primaryEmailAddr": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "$ref": "#/definitions/VendorPatchPrimaryEmailAddr"
        },
        "primaryPhone": {
          "$ref": "#/definitions/VendorPatchPrimaryPhone"
        },
        "printOnCheckName": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "suffix": {
          "type": "string"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "taxReportingBasis": {
          "type": "string"
        },
        "termRef": {
          "$ref": "#/definitions/VendorPatchTermRef"
        },
        "title": {
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "vendor1099": {
          "type": "boolean"
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/VendorPatchWebAddr"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "vendor",
      "type": "object"
    },
    "EstimateDeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-12-17T11:50:52-08:00"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-samplevalue": "Email"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/BillPaymentGetAllCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostBillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "VendorGetAllApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPostLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "SalesTermRefResponse": {
      "description": "Reference to a SalesTerm associated with this Customer object. Query the Term name list resource to determine the appropriate Term object for this reference. Use Term.Id and Term.Name from that object for SalesTermRef.value and SalesTermRef.name, respectively.",
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-reference-objectname": "term"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-reference-objectname": "term"
        }
      },
      "type": "object"
    },
    "ReceiptLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptGetAllLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptGetAllLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatchOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "pingResponse": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "title": "pingResponse",
      "x-has-customfields": false,
      "x-vendor-objectname": "ping",
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "VendorCreditLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/VendorCreditLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/VendorCreditLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "int32",
          "type": "integer"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/VendorCreditLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/InvoicePostLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number",
          "x-alias": [
            {
              "alias": "discountRate",
              "path": "line[*].discountLineDetail.discountPercent | [0]"
            }
          ]
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/InvoicePostLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoiceDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ProductEntitiesChangeData": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "assetAccountRef": {
          "$ref": "#/definitions/ProductassetAccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "you are actually making me mad"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "expenseAccountRef": {
          "$ref": "#/definitions/ProductexpenseAccountRef"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-samplevalue": "Sass:growling"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "464"
        },
        "incomeAccountRef": {
          "$ref": "#/definitions/ProductincomeAccountRef"
        },
        "invStartDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1476988200000
        },
        "level": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "metaData": {
          "$ref": "#/definitions/ProductmetaData"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "growling"
        },
        "parentRef": {
          "$ref": "#/definitions/ProductparentRef"
        },
        "purchaseCost": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "qtyOnHand": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 99999
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "subItem": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "taxable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "trackQtyOnHand": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "type": {
          "type": "string",
          "x-samplevalue": "INVENTORY"
        },
        "unitPrice": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0.99
        }
      },
      "title": "ProductEntitiesChangeData",
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchDepositToAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoicePatchLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTBillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Half Moon Bay"
        },
        "country": {
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "103"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line2": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "line3": {
          "type": "string",
          "x-samplevalue": "65 Ocean Dr."
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94213"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "ReceiptCreditCardPaymentCreditChargeInfo": {
      "properties": {
        "amount": {
          "description": "The amount processed using the credit card.",
          "format": "double",
          "type": "number"
        },
        "billAddrStreet": {
          "description": "Credit card holder billing address of record: the street address to which credit card statements are sent.",
          "type": "string"
        },
        "ccExpiryMonth": {
          "description": "Expiration Month on card, expressed as a number:1=January,2=February, etc.",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12
          ],
          "format": "int32",
          "type": "integer"
        },
        "ccExpiryYear": {
          "description": "Default is current year.Expiration Year on card, expressed as a 4 digit number\n1999, 2003, etc.",
          "format": "int32",
          "type": "integer"
        },
        "nameOnAcct": {
          "description": "Account holder name, as printed on the card.",
          "type": "string"
        },
        "postalCode": {
          "description": "Credit card holder billing postal code. Five digits in the USA.",
          "type": "string"
        },
        "processPayment": {
          "description": "false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse.\n-true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.",
          "type": "boolean"
        },
        "type": {
          "description": "Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillPostTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "TaxRateMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CreditTermAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomershipAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "22"
        },
        "lat": {
          "type": "string",
          "x-samplevalue": "INVALID"
        },
        "line1": {
          "type": "string",
          "x-samplevalue": "Kristy Abercrombie"
        },
        "line2": {
          "type": "string",
          "x-samplevalue": "5647 Cypress Hill Rd"
        },
        "long": {
          "type": "string",
          "x-samplevalue": "INVALID"
        },
        "postalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "CustomershipAddr",
      "type": "object"
    },
    "EmployeePatchOtherContactInfoOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoLineDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "preferencesMetaData": {
      "properties": {
        "CreateTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssXXX"
        },
        "LastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssXXX"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseParentRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. ",
          "type": "string",
          "x-alias": "parent.name"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "parent.id"
        }
      },
      "type": "object"
    },
    "LegalAddr": {
      "properties": {
        "City": {
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "Country": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "CountrySubDivisionCode": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "Id": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "Lat": {
          "type": "string",
          "x-samplevalue": "29.3755352"
        },
        "Line1": {
          "type": "string",
          "x-samplevalue": "1735 County Road"
        },
        "Long": {
          "type": "string",
          "x-samplevalue": "-98.5052734"
        },
        "PostalCode": {
          "type": "string",
          "x-samplevalue": "94326"
        }
      },
      "title": "LegalAddr",
      "type": "object",
      "x-has-customfields": false
    },
    "JournalEntryPostReqLineJournalEntryLineDetailEntity": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/JournalEntryPostReqLineJournalEntryLineDetailEntityEntityRef"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPatchCreditCardPaymentCcAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "ccBankAccount"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "transferGetObjectLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "DepartmentGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            ">",
            "<",
            ">=",
            "<="
          ]
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAll": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllAttachableRef"
          },
          "type": "array"
        },
        "cashBack": {
          "$ref": "#/definitions/DepositsGetAllCashBack"
        },
        "currencyRef": {
          "$ref": "#/definitions/DepositsGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllCustomField"
          },
          "type": "array"
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/DepositsGetAllDepositToAccountRef"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4700
        },
        "id": {
          "type": "string",
          "x-samplevalue": "237|0",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "line": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "x-searchable": true,
          "$ref": "#/definitions/DepositsGetAllMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-samplevalue": "Deposit"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "237"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 4700
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-12-14T00:00:00-06:00",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "deposit",
      "type": "object"
    },
    "ReceiptTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "TimeActivityPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListSalesFormsPrefs": {
      "properties": {
        "AllowDeposit": {
          "type": "boolean"
        },
        "AllowDiscount": {
          "type": "boolean"
        },
        "AllowEstimates": {
          "type": "boolean"
        },
        "AllowServiceDate": {
          "type": "boolean"
        },
        "AllowShipping": {
          "type": "boolean"
        },
        "CustomField": {
          "items": {
            "$ref": "#/definitions/preferencesListSalesFormsPrefsCustomField"
          },
          "type": "array"
        },
        "CustomTxnNumbers": {
          "type": "boolean"
        },
        "DefaultCustomerMessage": {
          "type": "string"
        },
        "DefaultDiscountAccount": {
          "type": "string"
        },
        "DefaultShippingAccount": {
          "type": "string"
        },
        "DefaultTerms": {
          "$ref": "#/definitions/preferencesListSalesFormsPrefsDefaultTerms"
        },
        "ETransactionAttachPDF": {
          "type": "boolean"
        },
        "ETransactionEnabledStatus": {
          "type": "string"
        },
        "ETransactionPaymentEnabled": {
          "type": "boolean"
        },
        "EmailCopyToCompany": {
          "type": "boolean"
        },
        "IPNSupportEnabled": {
          "type": "boolean"
        },
        "SalesEmailBcc": {
          "type": "string"
        },
        "SalesEmailCc": {
          "type": "string"
        },
        "UsingPriceLevels": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/PurchaseOrderGetAllTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorGetAllTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerparameters": {
      "x-has-customfields": false,
      "title": "parameters",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerparametersschema"
        },
        "in": {
          "x-samplevalue": "header",
          "type": "string"
        },
        "name": {
          "x-samplevalue": "Authorization",
          "type": "string"
        },
        "description": {
          "x-samplevalue": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
          "type": "string"
        },
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        },
        "required": {
          "x-samplevalue": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "PurchaseTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivity": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TimeActivityAttachableRef"
          },
          "type": "array"
        },
        "billableStatus": {
          "enum": [
            "BILLABLE",
            "NOT_BILLABLE"
          ],
          "type": "string"
        },
        "breakHours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "breakMinutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "classRef": {
          "$ref": "#/definitions/TimeActivityClassRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TimeActivityCustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/TimeActivityCustomerRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/TimeActivityDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "employeeRef": {
          "$ref": "#/definitions/TimeActivityEmployeeRef"
        },
        "endTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "hourlyRate": {
          "format": "int32",
          "type": "integer"
        },
        "hours": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "id": {
          "type": "string"
        },
        "itemRef": {
          "$ref": "#/definitions/TimeActivityItemRef"
        },
        "metaData": {
          "$ref": "#/definitions/TimeActivityMetaData"
        },
        "minutes": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "int32",
          "type": "integer"
        },
        "nameOf": {
          "enum": [
            "EMPLOYEE",
            "VENDOR"
          ],
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "startTime": {
          "description": "Use a combination of hours and minutes OR startTime, endTime, breakHours and breakMinutes to record time information",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxable": {
          "type": "boolean"
        },
        "timeZone": {
          "description": "This value is not used and will not be returned",
          "type": "string"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "vendorRef": {
          "$ref": "#/definitions/TimeActivityVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "timeactivity",
      "type": "object"
    },
    "CreditMemoPatchLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/InvoicePostTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "double",
          "type": "number",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/InvoicePostTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostRemitToRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderPatchLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CustomerPostCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "Class": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/ClassAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ClassCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "$ref": "#/definitions/ClassMetaData"
        },
        "name": {
          "type": "string"
        },
        "parentRef": {
          "$ref": "#/definitions/ClassParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subClass": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "class",
      "type": "object"
    },
    "JournalEntryPostReqLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorWebAddr": {
      "properties": {
        "uri": {
          "description": "Uniform Resource Identifier for the web site.",
          "type": "string",
          "x-alias": "webSite"
        }
      },
      "type": "object"
    },
    "InvoiceTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "PaymentCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "description": "The amount processed using the credit card.",
          "$ref": "#/definitions/PaymentCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "$ref": "#/definitions/PaymentCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchasePurchaseEx": {
      "properties": {
        "any": {
          "items": {
            "$ref": "#/definitions/PurchasePurchaseExAny"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "PurchaseOrderVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": "bill[*].id"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchJournalCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "transferGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string",
          "x-alias": "id"
        },
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "stringValue": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllCashBack": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/DepositsGetAllCashBackAccountRef"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 12.5
        },
        "memo": {
          "type": "string",
          "x-samplevalue": "cash back Memo 1611"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/DepositsGetAllTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "AttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/EntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "x-has-customfields": false,
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesProductAndServicesPrefs": {
      "properties": {
        "ForPurchase": {
          "type": "boolean"
        },
        "ForSales": {
          "type": "boolean"
        },
        "QuantityOnHand": {
          "type": "boolean"
        },
        "QuantityWithPriceAndRate": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "DepartmentReq": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/DepartmentReqAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/DepartmentReqCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "fullyQualifiedName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "$ref": "#/definitions/DepartmentReqMetaData"
        },
        "name": {
          "type": "string"
        },
        "parentRef": {
          "$ref": "#/definitions/DepartmentReqParentRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "subDepartment": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "department",
      "type": "object"
    },
    "VendorPatchAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "phone2"
        }
      },
      "type": "object"
    },
    "EmployeePatchPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "email"
        }
      },
      "type": "object"
    },
    "VendorBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoicePostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/PurchaseOrderPostTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer",
          "x-alias": "taxAmount"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/PurchaseOrderPostTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ReceiptAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillPaymentPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillPaymentPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillGetAllLineItemBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "preferencesListCurrencyPrefs": {
      "properties": {
        "HomeCurrency": {
          "$ref": "#/definitions/preferencesListCurrencyPrefsHomeCurrency"
        },
        "MultiCurrencyEnabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorGetAllAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "phone2"
        }
      },
      "type": "object"
    },
    "BillPaymentPostLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].bill.id",
              "description": "lines[*].bill.id will be mapped to id field under linkedTxn array when txnType is Bill",
              "path": "linkedTxn[?txnType=='Bill'].id"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesOtherPrefs": {
      "properties": {
        "NameValue": {
          "items": {
            "$ref": "#/definitions/preferencesOtherPrefsNameValue"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "settingsGetResEmailMessagesPrefsInvoiceMessage": {
      "properties": {
        "Message": {
          "type": "string",
          "x-samplevalue": "this is my invoice"
        },
        "Subject": {
          "type": "string",
          "x-samplevalue": "invoice"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillPaymentAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillPaymentAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseOrderGetAllLineItemBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].taxCode"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponseAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentLineLineExAny": {
      "properties": {
        "declaredType": {
          "type": "string",
          "x-alias": "type",
          "x-samplevalue": "com.intuit.schema.finance.v3.NameValue"
        },
        "globalScope": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "{http://schema.intuit.com/finance/v3}NameValue"
        },
        "nil": {
          "type": "boolean",
          "x-alias": "contact.address.line1",
          "x-samplevalue": false
        },
        "scope": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "javax.xml.bind.JAXBElement$GlobalScope"
        },
        "typeSubstituted": {
          "type": "boolean",
          "x-alias": "type",
          "x-samplevalue": false
        },
        "value": {
          "$ref": "#/definitions/PaymentLineLineExAnyValue"
        }
      },
      "type": "object"
    },
    "BillGetAll": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "apaccountRef": {
          "$ref": "#/definitions/BillGetAllApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/BillGetAllAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-alias": "totalAmountDue",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "billAddr": {
          "$ref": "#/definitions/BillGetAllBillAddr"
        },
        "currencyRef": {
          "$ref": "#/definitions/BillGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillGetAllCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/BillGetAllDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-alias": "externalId",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "=",
            "!=",
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "domain": {
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-alias": "exchangeRate"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string",
          "x-alias": "id"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/BillGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/BillGetAllMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-alias": "description",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "salesTermRef": {
          "$ref": "#/definitions/BillGetAllSalesTermRef"
        },
        "sparse": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "x-alias": "status"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-alias": "amount",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/BillGetAllTxnTaxDetail"
        },
        "vendorRef": {
          "$ref": "#/definitions/BillGetAllVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "bill",
      "type": "object"
    },
    "JournalEntryPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/JournalEntryPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].account"
        }
      },
      "type": "object"
    },
    "ProductmetaData": {
      "properties": {
        "createTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1477093538000
        },
        "lastUpdatedTime": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1477331800000
        }
      },
      "title": "ProductmetaData",
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "MetaData": {
      "description": "Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. ",
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-readOnly": true,
          "x-sub-format": "Date Time-ISO 8601"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-readOnly": true,
          "x-sub-format": "Date Time-ISO 8601"
        }
      },
      "type": "object"
    },
    "ProductGetAllResponsePrefVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "EstimateBillEmailBcc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllLine": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPaymentGetAllLineCustomField"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/BillPaymentGetAllLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResCurrencyPrefsHomeCurrency": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLineDepositLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/DepositsGetAllLineDepositLineDetailAccountRef"
        },
        "checkNum": {
          "type": "string",
          "x-samplevalue": "8602"
        },
        "entity": {
          "$ref": "#/definitions/DepositsGetAllLineDepositLineDetailEntity"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/DepositsGetAllLineDepositLineDetailPaymentMethodRef"
        }
      },
      "type": "object"
    },
    "ProductPurchaseTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "purchaseTaxCode"
        }
      },
      "type": "object"
    },
    "ReceiptPostAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPostAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ReceiptPostAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "budgetObjectMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "PaymentMethod": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PaymentMethodAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentMethodCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metaData": {
          "$ref": "#/definitions/PaymentMethodMetaData"
        },
        "name": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CREDIT_CARD",
            "NON_CREDIT_CARD"
          ],
          "type": "string"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "paymentmethod",
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentMethodAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/PaymentMethodAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "swaggerproperties": {
      "x-has-customfields": false,
      "type": "object",
      "title": "properties",
      "properties": {
        "definition-property": {
          "$ref": "#/definitions/swaggerdefinition-property"
        }
      }
    },
    "preferencesPatchEmailMessagesPrefsInvoiceMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAll": {
      "properties": {
        "apaccountRef": {
          "$ref": "#/definitions/VendorCreditGetAllApaccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/VendorCreditGetAllAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "currencyRef": {
          "$ref": "#/definitions/VendorCreditGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/VendorCreditGetAllCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/VendorCreditGetAllDepartmentRef"
        },
        "docNumber": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "="
          ]
        },
        "line": {
          "items": {
            "$ref": "#/definitions/VendorCreditGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/VendorCreditGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/VendorCreditGetAllMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "LIKE",
            "="
          ]
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "transactionLocationType": {
          "type": "boolean"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "vendorRef": {
          "$ref": "#/definitions/VendorCreditGetAllVendorRef"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "vendorcredit",
      "type": "object"
    },
    "BillGetAllDepartmentRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SalesItemtaxCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "TAX"
        }
      },
      "title": "SalesItemtaxCodeRef",
      "type": "object"
    },
    "PaymentPostLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": [
            {
              "alias": "lines[*].invoice.id",
              "path": "linkedTxn[?txnType=='Invoice'].id"
            }
          ]
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "bulkDownloadRequestDocsHubDetails": {
      "properties": {
        "instanceId": {
          "type": "string",
          "x-samplevalue": "1234"
        },
        "path": {
          "type": "string",
          "x-samplevalue": "/myfolder/in/googledrive/myfilename.extention"
        }
      },
      "title": "docsHubDetails",
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectLineAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceBillEmailCc": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorGetAllPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    },
    "BillGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/JournalEntryLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "journalEntryLineDetail": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetail"
        },
        "lineNum": {
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CustomerEntities": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 6815816.93
        },
        "balanceWithJobs": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 7015315.41
        },
        "billAddr": {
          "$ref": "#/definitions/CustomerbillAddr"
        },
        "billWithParent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "currencyRef": {
          "$ref": "#/definitions/CustomercurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicecustomField"
          },
          "type": "array"
        },
        "defaultTaxCodeRef": {
          "$ref": "#/definitions/CustomerdefaultTaxCodeRef"
        },
        "displayName": {
          "type": "string",
          "x-samplevalue": "Abercrombie, Kristy"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "familyName": {
          "type": "string",
          "x-samplevalue": "wow"
        },
        "fax": {
          "$ref": "#/definitions/Customerfax"
        },
        "fullyQualifiedName": {
          "type": "string",
          "x-samplevalue": "Abercrombie, Kristy"
        },
        "givenName": {
          "type": "string",
          "x-samplevalue": "Kristy"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "20"
        },
        "job": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "metaData": {
          "$ref": "#/definitions/MetaData"
        },
        "mobile": {
          "$ref": "#/definitions/Customermobile"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "9/15/2003:  Send Kristy estimate for den remodel.\r\n\r\n9/20/2003:  Called Kristy to discuss job:  Kristy is not interested at this time.  Estimate was competitive, not using another firm.\r\n\r\n10/15/2003:  Further discussion of bathroom remodel.  I offered 10% discount on project if she would sign the contract now.\n\nde852958758a405c954f92d751eaf6e5"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/OtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/OtherContactInfo"
          },
          "type": "array"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/CustomerpaymentMethodRef"
        },
        "preferredDeliveryMethod": {
          "type": "string",
          "x-samplevalue": "Print"
        },
        "primaryEmailAddr": {
          "$ref": "#/definitions/CustomerprimaryEmailAddr"
        },
        "primaryPhone": {
          "$ref": "#/definitions/CustomerprimaryPhone"
        },
        "printOnCheckName": {
          "type": "string",
          "x-samplevalue": "Mrs. Kristy Abercrombie"
        },
        "salesTermRef": {
          "$ref": "#/definitions/CustomersalesTermRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/CustomershipAddr"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "8"
        },
        "taxable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "title": {
          "type": "string",
          "x-samplevalue": "Mrs."
        }
      },
      "title": "CustomerEntities",
      "type": "object"
    },
    "VendorPostOtherContactInfoOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectLineDepositLineDetailEntity": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "type": {
          "enum": [
            "CUSTOMER"
          ],
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "customerCommunicationAddr": {
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countrySubDivisionCode": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-readOnly": true
        },
        "lat": {
          "type": "string"
        },
        "line1": {
          "type": "string"
        },
        "line2": {
          "type": "string"
        },
        "line3": {
          "type": "string"
        },
        "line4": {
          "type": "string"
        },
        "line5": {
          "type": "string"
        },
        "long": {
          "type": "string",
          "x-readOnly": true
        },
        "postalCode": {
          "type": "string",
          "x-readOnly": true
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetailClassRef"
        },
        "departmentRef": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetailDepartmentRef"
        },
        "entity": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetailEntity"
        },
        "journalCodeRef": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetailJournalCodeRef"
        },
        "postingType": {
          "type": "string"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxApplicableOn": {
          "type": "string"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/JournalEntryPatchLineJournalEntryLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "CustomerAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPatchItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillGetAllVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostVendorAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "lat": {
          "type": "string"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "line4": {
          "type": "string"
        },
        "line5": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "line.priceLevel"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "RefundReceiptPostTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseOrderShipMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllPurchaseExAny": {
      "properties": {
        "declaredType": {
          "type": "string"
        },
        "globalScope": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "nil": {
          "type": "boolean"
        },
        "scope": {
          "type": "string"
        },
        "typeSubstituted": {
          "type": "boolean"
        },
        "value": {
          "$ref": "#/definitions/PurchaseGetAllPurchaseExAnyValue"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "column": {
      "properties": {
        "colTitle": {
          "type": "string"
        },
        "colType": {
          "type": "string"
        },
        "metaData": {
          "items": {
            "$ref": "#/definitions/MetaData"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "preferencesListReportPrefs": {
      "properties": {
        "CalcAgingReportFromTxnDate": {
          "type": "boolean"
        },
        "ReportBasis": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetAllToAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PurchaseOrderVendorAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "lat": {
          "type": "string"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "line4": {
          "type": "string"
        },
        "line5": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "$ref": "#/definitions/RefundReceiptPostCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "$ref": "#/definitions/RefundReceiptPostCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DeliveryInfo": {
      "properties": {
        "deliveryTime": {
          "format": "date-time",
          "type": "string",
          "x-displayName": "DateTime",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-readOnly": true,
          "x-samplevalue": "2014-12-17T11:50:52-08:00",
          "x-sub-format": "Date Time-ISO 8601"
        },
        "deliveryType": {
          "description": "Type of the delivery. Used to confirm that email has been sent via the send operation. Valid values currently include: Email.",
          "enum": [
            "EMAIL"
          ],
          "type": "string",
          "x-readOnly": true,
          "x-samplevalue": "Email",
          "x-sub-format": "enum"
        }
      },
      "type": "object"
    },
    "BillSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductAssetAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "assetAccount"
        }
      },
      "type": "object"
    },
    "PurchaseReqTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineItemBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "BillPutCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesListTaxPrefs": {
      "properties": {
        "TaxGroupCodeRef": {
          "$ref": "#/definitions/preferencesListTaxPrefsTaxGroupCodeRef"
        },
        "UsingSalesTax": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoGetAllLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePatchBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "TimeActivityPostClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPatchSalesTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "salesTaxCode"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "JournalEntryAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePostInvoiceStatusLog": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicePostInvoiceStatusLogCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoicePostInvoiceStatusLogEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLineAccountBasedExpenseLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponse": {
      "properties": {
        "active": {
          "description": "If true, this entity is currently enabled for use by QuickBooks.If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount",
          "type": "boolean",
          "x-alias": "active",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!="
          ]
        },
        "alternatePhone": {
          "description": "Alternate phone number.",
          "$ref": "#/definitions/CustomerGetAllResponseAlternatePhone"
        },
        "araccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "$ref": "#/definitions/CustomerGetAllResponseAraccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CustomerGetAllResponseAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "description": "Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer.",
          "format": "double",
          "type": "number",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 10112,
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">",
            ">=",
            "<",
            "<=",
            "!="
          ]
        },
        "balanceWithJobs": {
          "description": "Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.",
          "format": "double",
          "type": "number",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "LIKE",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "billAddr": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "$ref": "#/definitions/CustomerGetAllResponseBillAddr"
        },
        "billWithParent": {
          "description": "If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.",
          "type": "boolean"
        },
        "companyName": {
          "description": "The name of the company associated with the person or organization.",
          "type": "string",
          "x-alias": "name",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "currencyRef": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "$ref": "#/definitions/CustomerGetAllResponseCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomerGetAllResponseCustomField"
          },
          "type": "array"
        },
        "defaultTaxCodeRef": {
          "$ref": "#/definitions/CustomerGetAllResponseDefaultTaxCodeRef"
        },
        "displayName": {
          "description": "The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update.",
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "description": "Family name or the last name of the person.",
          "type": "string",
          "x-alias": "contact.lastName",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "fax": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerGetAllResponseFax"
        },
        "fullyQualifiedName": {
          "description": "Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels",
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "givenName": {
          "description": "Given name or first name of a person.",
          "type": "string",
          "x-alias": "contact.firstName",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "id": {
          "description": "Unique identifier for this object.",
          "type": "string",
          "x-alias": "id",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "job": {
          "description": "If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.",
          "type": "boolean",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "level": {
          "description": "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 101
        },
        "metaData": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "$ref": "#/definitions/CustomerGetAllResponseMetaData"
        },
        "middleName": {
          "description": "Middle name of the person. The person can have zero or more middle names.",
          "type": "string",
          "x-alias": "contact.middleName",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "mobile": {
          "description": "Mobile phone number. ",
          "$ref": "#/definitions/CustomerGetAllResponseMobile"
        },
        "notes": {
          "description": "Free form text describing the Customer.",
          "type": "string",
          "x-alias": "description"
        },
        "openBalanceDate": {
          "format": "date",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM",
          "$ref": "#/definitions/CustomerGetAllResponseOpenBalanceDate"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/CustomerGetAllResponseOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/CustomerGetAllResponseOtherContactInfo"
          },
          "type": "array"
        },
        "parentRef": {
          "description": "A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list. ",
          "$ref": "#/definitions/CustomerGetAllResponseParentRef"
        },
        "paymentMethodRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "$ref": "#/definitions/CustomerGetAllResponsePaymentMethodRef"
        },
        "preferredDeliveryMethod": {
          "description": "Preferred delivery method. Values are Print, Email, or None.",
          "enum": [
            "Print",
            "Email",
            "None"
          ],
          "type": "string"
        },
        "primaryEmailAddr": {
          "$ref": "#/definitions/CustomerGetAllResponsePrimaryEmailAddr"
        },
        "primaryPhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerGetAllResponsePrimaryPhone"
        },
        "primaryTaxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "printOnCheckName": {
          "description": "Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.",
          "type": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            "!=",
            "LIKE"
          ]
        },
        "resaleNum": {
          "description": "Resale number or some additional info about the customer",
          "type": "string"
        },
        "salesTermRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/CustomerGetAllResponseSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/CustomerGetAllResponseShipAddr"
        },
        "sparse": {
          "description": "Mark as true to do a partial update of a Customer object, otherwise the full Customer object is required",
          "type": "boolean"
        },
        "suffix": {
          "description": "Suffix of the name. For example, Jr",
          "type": "string"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxExemptionReasonId": {
          "description": "The tax exemption reason associated with this customer object.",
          "type": "string"
        },
        "taxable": {
          "description": "If true, transactions for this customer are taxable. Default behaviour with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.",
          "type": "boolean"
        },
        "title": {
          "description": "Title of the person. This tag supports i18n, all locales",
          "type": "string",
          "x-alias": "contact.salutation"
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/CustomerGetAllResponseWebAddr"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-searchable": true,
      "x-searchable-joins": [
        "and"
      ],
      "x-vendor-objectname": "customer",
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "EmployeeGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentCheckPayment": {
      "properties": {
        "bankAccountRef": {
          "$ref": "#/definitions/BillPaymentCheckPaymentBankAccountRef"
        },
        "printStatus": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCustomerMemo": {
      "properties": {
        "address": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchCustomerMemo": {
      "properties": {
        "value": {
          "description": "maximum 1000 chars, default is null User-entered message to the customer; this message is visible to the end user on their transactions.",
          "type": "string",
          "x-samplevalue": "Thank you for your business and have a great day!"
        }
      },
      "type": "object"
    },
    "PurchaseOrderLine": {
      "properties": {
        "accountBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderLineAccountBasedExpenseLineDetail"
        },
        "amount": {
          "format": "double",
          "type": "number",
          "x-alias": "lines[*].subTotal"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id"
        },
        "itemBasedExpenseLineDetail": {
          "$ref": "#/definitions/PurchaseOrderLineItemBasedExpenseLineDetail"
        },
        "lineNum": {
          "format": "double",
          "type": "number"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "JournalCodePostReq": {
      "properties": {
        "Name": {
          "type": "string",
          "x-samplevalue": "VT"
        },
        "Type": {
          "enum": [
            "Expenses",
            "Sales",
            "Bank",
            "Nouveaux",
            "Wages",
            "Cash",
            "Others"
          ],
          "type": "string",
          "x-samplevalue": "Sales"
        }
      },
      "required": [
        "Name"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "JournalCode",
      "type": "object"
    },
    "CustomerPostAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "Customermobile": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-samplevalue": "(214) 111-2222"
        }
      },
      "title": "Customermobile",
      "type": "object"
    },
    "PaymentPostLineLineExAnyValue": {
      "properties": {
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "txnId"
        },
        "Value": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "36"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "depositsObjectAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/depositsObjectAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/depositsObjectAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResSalesFormsPrefsDefaultTerms": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "8"
        }
      },
      "type": "object"
    },
    "TaxAgencyPost": {
      "properties": {
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/TaxAgencyPostAttachableRef"
          },
          "type": "array"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/TaxAgencyPostCustomField"
          },
          "type": "array"
        },
        "displayName": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastFileDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "metaData": {
          "$ref": "#/definitions/TaxAgencyPostMetaData"
        },
        "otherAddr": {
          "items": {
            "$ref": "#/definitions/TaxAgencyPostOtherAddr"
          },
          "type": "array"
        },
        "otherContactInfo": {
          "items": {
            "$ref": "#/definitions/TaxAgencyPostOtherContactInfo"
          },
          "type": "array"
        },
        "reportingPeriod": {
          "type": "string"
        },
        "salesTaxCodeRef": {
          "type": "string"
        },
        "salesTaxCountry": {
          "type": "string"
        },
        "salesTaxReturnRef": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxAgencyExt": {
          "type": "string"
        },
        "taxOnTax": {
          "type": "string"
        },
        "taxRegistrationNumber": {
          "type": "string"
        },
        "taxTrackedOnPurchases": {
          "type": "boolean"
        },
        "taxTrackedOnSales": {
          "type": "boolean"
        },
        "taxTrackedOnSalesAccountRef": {
          "type": "string"
        }
      },
      "required": [
        "displayName"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "taxagency",
      "type": "object"
    },
    "JournalEntryPatchLineJournalEntryLineDetailEntityEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "customer"
        }
      },
      "type": "object"
    },
    "LedgerAccountCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetail": {
      "properties": {
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailCustomerRef"
        },
        "itemRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailItemRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailMarkupInfo"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailPriceLevelRef"
        },
        "qty": {
          "format": "int32",
          "type": "integer"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/VendorCreditGetAllLineItemBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        },
        "unitPrice": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "JournalEntryCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "format": "double",
          "type": "number"
        },
        "txnTaxCodeRef": {
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillGetAllLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "ReceiptTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxCodePurchaseTaxRateListTaxRateDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentMethodRefResponse": {
      "description": "Reference to a PaymentMethod associated with this Customer object. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference.",
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "type": "string",
          "x-reference-objectname": "paymentmethod"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use PaymentMethod.Id from that object for PaymentMethodRef.value ",
          "type": "string",
          "x-reference-objectname": "paymentmethod"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "TimeActivityPostCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOST": {
      "properties": {
        "applyTaxAfterDiscount": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "billAddr": {
          "$ref": "#/definitions/EstimatePOSTBillAddr"
        },
        "billEmail": {
          "x-conditionally-required-description": "Required if EmailStatus is set to 'NeedToSend'",
          "$ref": "#/definitions/EstimatePOSTBillEmail"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/EstimatePOSTCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/EstimatePOSTCustomerRef"
        },
        "docNumber": {
          "type": "string",
          "x-samplevalue": "1001"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "emailStatus": {
          "type": "string",
          "x-samplevalue": "NotSet"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTLine"
          },
          "type": "array"
        },
        "printStatus": {
          "type": "string",
          "x-samplevalue": "NeedToPrint"
        },
        "shipAddr": {
          "$ref": "#/definitions/EstimatePOSTShipAddr"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "totalAmt": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 31.5
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-11-12T00:00:00+05:30"
        },
        "txnStatus": {
          "type": "string",
          "x-samplevalue": "Pending"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/EstimatePOSTTxnTaxDetail"
        }
      },
      "required": [
        "customerRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "Estimate",
      "type": "object"
    },
    "CreditTermMetaData": {
      "properties": {
        "createTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        },
        "lastUpdatedTime": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-10-30T11:06:19-07:00"
        }
      },
      "type": "object"
    },
    "ReceiptPatchCreditCardPaymentCreditChargeResponse": {
      "properties": {
        "authCode": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "type": "string"
        },
        "cctransId": {
          "description": "Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.",
          "type": "string"
        },
        "status": {
          "description": "Indicates the status of the payment transaction. Possible values include Completed, Unknown.",
          "enum": [
            "COMPLETED",
            "UNKNOWN"
          ],
          "type": "string"
        },
        "txnAuthorizationTime": {
          "description": "Timestamp indicating the time in which the card processor authorized the transaction. ",
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchVendorAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "lat": {
          "type": "string"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "line3": {
          "type": "string"
        },
        "line4": {
          "type": "string"
        },
        "line5": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "swaggertags": {
      "x-has-customfields": false,
      "title": "tags",
      "properties": {
        "name": {
          "x-samplevalue": "contacts",
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetObjectToAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryPatchTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/JournalEntryPatchTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/JournalEntryPatchTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "preferencesPatchCurrencyPrefsHomeCurrency": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryLineJournalEntryLineDetailEntity": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/JournalEntryLineJournalEntryLineDetailEntityEntityRef"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "EstimateTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LedgerAccountPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostSalesTermRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "paymentTerms.name"
        },
        "value": {
          "type": "string",
          "x-alias": "paymentTerms.id"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "Payment": {
      "properties": {
        "araccountRef": {
          "$ref": "#/definitions/ArAccountRefResponse",
          "description": "Specifies the accounts receivable account associated with this payment. Query the Account name list resource to determine the appropriate Account object for this reference. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively. The specified account must have Account.AccountType set to Accounts Receivable. "
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/AttachableRefResponse"
          },
          "type": "array"
        },
        "creditCardPayment": {
          "$ref": "#/definitions/CreditCardPayment"
        },
        "currencyRef": {
          "$ref": "#/definitions/currencyRef"
        },
        "customField": {
          "description": "Custom field or data extension.",
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "customerRef": {
          "$ref": "#/definitions/CustomerRefResponse",
          "description": "Reference to a customer or job. Query the Customer name list resource to determine the appropriate Customer object for this reference. Use Customer.Id and Customer.DisplayName from that object for CustomerRef.value and CustomerRef.name, respectively. "
        },
        "depositToAccountRef": {
          "$ref": "#/definitions/DepositToAccountRefResponse"
        },
        "domain": {
          "type": "string"
        },
        "exchangeRate": {
          "default": 1,
          "description": "The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. ",
          "format": "double",
          "type": "number"
        },
        "id": {
          "description": "Unique identifier for this object.\nSort order is ASC by default. ",
          "type": "string",
          "x-name": true
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PaymentLineResponse"
          },
          "type": "array"
        },
        "linkedTxn": {
          "description": "Zero or more related transactions to this Invoice object. The following linked relationships are supported:Links to Estimate and TimeActivity objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are available at the API level for these types of links.Links to expenses incurred on behalf of the customer are returned in the response with LinkedTxn.TxnType set to ReimburseCharge, ChargeCredit or StatementCharge corresponding to billable customer expenses of type Cash, Delayed Credit, and Delayed Charge, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.Links to payments applied to an Invoice object are returned in the response with LinkedTxn.TxnType set to Payment. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.Use LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.",
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransactionResponse"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/MetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/PaymentMethodRefResponse",
          "description": "Reference to a PaymentMethod associated with this transaction. Query the PaymentMethod name list resource to determine the appropriate PaymentMethod object for this reference. Use PaymentMethod.Id and PaymentMethod.Name from that object for PaymentMethodRef.value and PaymentMethodRef.name, respectively. "
        },
        "paymentRefNum": {
          "description": "The reference number for the payment received. For example,  Check # for a check, envelope # for a cash donation. ",
          "type": "string"
        },
        "privateNote": {
          "description": "User entered, organization-private note about the transaction. ",
          "type": "string"
        },
        "processPayment": {
          "type": "boolean"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "description": "Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.",
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "default": "WithinFrance",
          "description": "The account location.",
          "enum": [
            "WithinFrance",
            "FranceOverseas",
            "OutsideFranceWithEU",
            "OutsideEU"
          ],
          "type": "string",
          "x-sub-format": "Enum"
        },
        "txnDate": {
          "description": "The date entered by the user when this transaction occurred.\nFor posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.\nSort order is ASC by default. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-sub-format": "Date Time - ISO 8601 UTC"
        },
        "txnSource": {
          "description": "Used internally to specify originating source of a credit card transaction",
          "type": "string"
        },
        "txnStatus": {
          "description": "Default is PAID, The status of the transaction. For Payment objects, this status is always set to PAID.",
          "type": "string"
        },
        "unappliedAmt": {
          "description": "Indicates the amount that has not been applied to pay amounts owed for sales transactions.",
          "format": "double",
          "type": "number",
          "x-readOnly": true
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "payment",
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditVendorRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxAgencyOtherAddr": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimateLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Cool Cars"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "3"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ClassGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPatchLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string",
          "x-alias": "bill[*].id"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EstimatePOSTTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "ReceiptLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/ReceiptLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "colData": {
      "properties": {
        "id": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "BillPutLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "PaymentPostCreditCardPayment": {
      "properties": {
        "creditChargeInfo": {
          "description": "The amount processed using the credit card.",
          "$ref": "#/definitions/PaymentPostCreditCardPaymentCreditChargeInfo"
        },
        "creditChargeResponse": {
          "description": "Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.",
          "$ref": "#/definitions/PaymentPostCreditCardPaymentCreditChargeResponse"
        }
      },
      "type": "object"
    },
    "CreditMemoLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/BillTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "BillGetAllLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "ReceiptPostTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetail": {
      "properties": {
        "groupItemRef": {
          "description": "Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.",
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPostLineGroupLineDetailLinkedTxn"
          },
          "type": "array"
        },
        "quantity": {
          "description": "Quantity of the group item.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PaymentCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditGetAllLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentPostVendorRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "vendor.name"
        },
        "value": {
          "type": "string",
          "x-alias": "vendor.id"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineAccountBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchasePaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostCustomerRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "customer.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "customer.id"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositCreateObject": {
      "properties": {
        "depositToAccountRef": {
          "$ref": "#/definitions/depositCreateObjectDepositToAccountRef"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/depositCreateObjectLine"
          },
          "type": "array"
        }
      },
      "required": [
        "depositToAccountRef"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "deposit",
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "$ref": "#/definitions/PurchaseOrderPostLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BillLineAccountBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "preferencesPatchCurrencyPrefs": {
      "properties": {
        "HomeCurrency": {
          "$ref": "#/definitions/preferencesPatchCurrencyPrefsHomeCurrency"
        },
        "MultiCurrencyEnabled": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoPostLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "depositsObjectDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-samplevalue": "10100 Checking"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-samplevalue": "58"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PurchaseReqCurrencyRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorFax": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptPatchLineSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptTxnTaxDetailTaxLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoGetAllLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TimeActivityPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineAccountBasedExpenseLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TaxAgencyGetAllOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqVendorRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityPostVendorRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "CurrenciesGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostBillEmail": {
      "properties": {
        "address": {
          "description": "maximum of 100 chars An email address. The address format must follow the RFC 822 standard.",
          "type": "string",
          "x-samplevalue": "test@intuit.com"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/JournalEntryGetAllLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "journalEntryLineDetail": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetail"
        },
        "lineNum": {
          "type": "boolean"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/JournalEntryGetAllLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "TaxRateAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePatchMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "mobile"
        }
      },
      "type": "object"
    },
    "CustomerPostOpenBalanceDate": {
      "properties": {
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM"
        }
      },
      "type": "object"
    },
    "LedgerAccountGetAllAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/LedgerAccountGetAllAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/LedgerAccountGetAllAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "BulkJobList": {
      "title": "BulkJobList",
      "properties": {
        "record_count": {
          "x-samplevalue": 41,
          "format": "int32",
          "type": "integer"
        },
        "job_query": {
          "x-samplevalue": "SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'",
          "type": "string"
        },
        "job_reset_attempt": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "completion_time": {
          "x-samplevalue": 1542829827804,
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "x-samplevalue": "COMPLETED",
          "type": "string"
        },
        "notification_url": {
          "type": "string"
        },
        "job_direction": {
          "x-samplevalue": "DOWNLOAD",
          "type": "string"
        },
        "error_count": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "job_state": {
          "type": "string"
        },
        "createdDate": {
          "x-samplevalue": 1542829826619,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "x-samplevalue": 1722,
          "format": "int32",
          "type": "integer"
        },
        "instanceId": {
          "x-samplevalue": 123453,
          "format": "int32",
          "type": "integer"
        },
        "object_name": {
          "x-samplevalue": "systemuser",
          "type": "string"
        },
        "fileFormat": {
          "x-samplevalue": "csv",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CustomerdefaultTaxCodeRef": {
      "properties": {
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "title": "CustomerdefaultTaxCodeRef",
      "type": "object"
    },
    "PhoneNumber": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-length": 30,
          "x-sub-format": "Phone"
        }
      },
      "type": "object"
    },
    "BillPutAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/BillPutAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/BillPutAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "preferencesPatchOtherPrefsNameValue": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPatchMobile": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.mobile"
        }
      },
      "type": "object"
    },
    "InvoiceDepartmentRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "department.name"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "department.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptGetAllLineSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "RefundReceiptBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "InvoiceShipMethodRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string",
          "x-alias": "shippingMethod"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReq": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseReqAccountRef"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/PurchaseReqAttachableRef"
          },
          "type": "array"
        },
        "credit": {
          "type": "boolean"
        },
        "currencyRef": {
          "$ref": "#/definitions/PurchaseReqCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PurchaseReqCustomField"
          },
          "type": "array"
        },
        "departmentRef": {
          "$ref": "#/definitions/PurchaseReqDepartmentRef"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "entityRef": {
          "$ref": "#/definitions/PurchaseReqEntityRef"
        },
        "exchangeRate": {
          "format": "double",
          "type": "number"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/PurchaseReqLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PurchaseLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/PurchaseReqMetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/PurchaseReqPaymentMethodRef"
        },
        "paymentType": {
          "type": "string"
        },
        "printStatus": {
          "type": "string"
        },
        "purchaseEx": {
          "$ref": "#/definitions/PurchaseReqPurchaseEx"
        },
        "remitToAddr": {
          "$ref": "#/definitions/PurchaseReqRemitToAddr"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "transactionLocationType": {
          "type": "string"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnSource": {
          "type": "string"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/PurchaseReqTxnTaxDetail"
        }
      },
      "required": [
        "accountRef",
        "entityRef",
        "paymentType"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "purchase",
      "type": "object"
    },
    "CreditMemoLineDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoLineDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoLineDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "transferGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "transferGetAllCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "TaxRateRefResponse": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptPostLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptPostLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptPostLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "VendorPostApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditReqCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/InvoicePostLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PaymentAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "name"
        },
        "type": {
          "type": "string",
          "x-alias": "type"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostTxnTaxDetailTaxLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].taxAmount"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "detailType": {
          "type": "string"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentLinkedTransaction"
          },
          "type": "array"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/PurchaseOrderPostTxnTaxDetailTaxLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "exchangeRates": {
      "properties": {
        "AsOfDate": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-08-20"
        },
        "MetaData": {
          "$ref": "#/definitions/exchangeRateMetadata"
        },
        "Rate": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 2.5
        },
        "SourceCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "SyncToken": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "TargetCurrencyCode": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "exchangeRates",
      "type": "object",
      "x-has-customfields": true,
      "x-vendor-objectname": "exchangerate"
    },
    "ReceiptPostLineSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceSalesLineItemResponse": {
      "properties": {
        "classRef": {
          "$ref": "#/definitions/ClassRefResponse",
          "description": "Reference to the Class for the line item. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerLine is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively."
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ItemAccountRefResponse",
          "x-readOnly": true
        },
        "itemRef": {
          "$ref": "#/definitions/ItemRefResponse",
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account."
        },
        "markupInfo": {
          "$ref": "#/definitions/MarkupInfoResponse",
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "int64",
          "type": "integer"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-mask": "milliseconds",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "$ref": "#/definitions/TaxCodeRefResponse",
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively."
        },
        "taxInclusiveAmt": {
          "description": "The total amount of the line item including tax. Constraints: Available when endpoint is evoked with the minorversion=1query parameter.",
          "format": "float",
          "type": "number"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number",
          "x-sub-format": "Money"
        }
      },
      "type": "object"
    },
    "depositsObjectLineDepositLineDetailPaymentMethodRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "12000 Undeposited Funds"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "5"
        }
      },
      "type": "object"
    },
    "PaymentLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "SubtotalLineDetailResponse": {
      "properties": {
        "itemRef": {
          "$ref": "#/definitions/ItemRefResponse",
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account."
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptLine": {
      "properties": {
        "amount": {
          "format": "float",
          "type": "number"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/ReceiptLineCustomField"
          },
          "type": "array"
        },
        "description": {
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/ReceiptLineDescriptionLineDetail"
        },
        "detailType": {
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/ReceiptLineDiscountLineDetail"
        },
        "groupLineDetail": {
          "$ref": "#/definitions/ReceiptLineGroupLineDetail"
        },
        "id": {
          "type": "string"
        },
        "lineNum": {
          "format": "float",
          "type": "number"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/ReceiptLineLinkedTxn"
          },
          "type": "array"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/ReceiptLineSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/ReceiptLineSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/ReceiptLineTaxLineDetail"
        }
      },
      "type": "object"
    },
    "InvoiceitemAccountRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-samplevalue": "Services"
        },
        "value": {
          "type": "string",
          "x-samplevalue": "170"
        }
      },
      "title": "InvoiceitemAccountRef",
      "type": "object"
    },
    "CustomerPatchCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "BillPutLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-alias": [
            {
              "alias": "purchase-order.id",
              "description": "purchase-order.id maps to txnId field under linkedTxn array when txnType is PurchaseOrder"
            },
            {
              "alias": "payment[*].id",
              "description": "payment[*].id maps to txnId field under linkedTxn array when txnType is BillPaymentCheck"
            }
          ]
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided,          the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/InvoiceLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "type": "object"
    },
    "transferUpdateObject": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 500
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "fromAccountRef": {
          "$ref": "#/definitions/transferUpdateObjectFromAccountRef"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "239|0"
        },
        "metaData": {
          "$ref": "#/definitions/transferUpdateObjectMetaData"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "toAccountRef": {
          "$ref": "#/definitions/transferUpdateObjectToAccountRef"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-12-15T00:00:00-06:00"
        }
      },
      "required": [
        "metaData",
        "amount",
        "syncToken",
        "sparse",
        "domain",
        "toAccountRef",
        "id",
        "fromAccountRef",
        "txnDate"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "transfer",
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "settingsGetResTimeTrackingPrefs": {
      "properties": {
        "BillCustomers": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "MarkTimeEntriesBillable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ShowBillRateToAll": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "UseServices": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSubtotalLineDetail": {
      "properties": {
        "itemRef": {
          "description": "Reference to the Item. Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively. When a line lacks an ItemRef it is treated as documentation and the Line.Amount attribute is ignored. For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoPostTxnTaxDetailTaxLineSubtotalLineDetailItemRef"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/RefundReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "CustomerPost": {
      "properties": {
        "active": {
          "description": "If true, this entity is currently enabled for use by QuickBooks.If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount",
          "type": "boolean",
          "x-alias": "active"
        },
        "alternatePhone": {
          "description": "Alternate phone number.",
          "$ref": "#/definitions/CustomerPostAlternatePhone"
        },
        "araccountRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "$ref": "#/definitions/CustomerPostAraccountRef"
        },
        "balance": {
          "description": "Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer.",
          "format": "double",
          "type": "number",
          "x-alias": "totalOutstandingAmount",
          "x-samplevalue": 10112
        },
        "balanceWithJobs": {
          "description": "Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.",
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "$ref": "#/definitions/CustomerPostBillAddr"
        },
        "billWithParent": {
          "description": "If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.",
          "type": "boolean"
        },
        "companyName": {
          "description": "The name of the company associated with the person or organization.",
          "type": "string",
          "x-alias": "name"
        },
        "currencyRef": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "$ref": "#/definitions/CustomerPostCurrencyRef"
        },
        "defaultTaxCodeRef": {
          "$ref": "#/definitions/CustomerPostDefaultTaxCodeRef"
        },
        "displayName": {
          "description": "The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update.",
          "type": "string",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "domain": {
          "type": "string"
        },
        "familyName": {
          "description": "Family name or the last name of the person.",
          "type": "string",
          "x-alias": "contact.lastName",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "fax": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerPostFax"
        },
        "fullyQualifiedName": {
          "description": "Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels",
          "type": "string"
        },
        "givenName": {
          "description": "Given name or first name of a person.",
          "type": "string",
          "x-alias": "contact.firstName",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "job": {
          "description": "If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.",
          "type": "boolean"
        },
        "level": {
          "description": "Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent.",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 101
        },
        "middleName": {
          "description": "Middle name of the person. The person can have zero or more middle names.",
          "type": "string",
          "x-alias": "contact.middleName",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "mobile": {
          "description": "Mobile phone number. ",
          "$ref": "#/definitions/CustomerPostMobile"
        },
        "notes": {
          "description": "Free form text describing the Customer.",
          "type": "string",
          "x-alias": "description"
        },
        "openBalanceDate": {
          "format": "date",
          "x-mask": "YYYY-MM-DD , YYYY-MM-DDZ , YYYY-MM-DD+/-HH:MM",
          "$ref": "#/definitions/CustomerPostOpenBalanceDate"
        },
        "parentRef": {
          "description": "A reference to a Customer object that is the immediate parent of the Sub-Customer/Job in the hierarchical Customer:Job list. ",
          "x-conditionally-required-description": "Required for the create operation if this object is a sub-customer or Job. ",
          "$ref": "#/definitions/CustomerPostParentRef"
        },
        "paymentMethodRef": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use  PaymentMethod.Name from that object for PaymentMethodRef.name ",
          "$ref": "#/definitions/CustomerPostPaymentMethodRef"
        },
        "preferredDeliveryMethod": {
          "description": "Preferred delivery method. Values are Print, Email, or None.",
          "enum": [
            "Print",
            "Email",
            "None"
          ],
          "type": "string"
        },
        "primaryEmailAddr": {
          "$ref": "#/definitions/CustomerPostPrimaryEmailAddr"
        },
        "primaryPhone": {
          "description": "Specifies the telephone number in free form.",
          "$ref": "#/definitions/CustomerPostPrimaryPhone"
        },
        "primaryTaxIdentifier": {
          "type": "string",
          "x-alias": "taxId"
        },
        "printOnCheckName": {
          "description": "Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.",
          "type": "string"
        },
        "resaleNum": {
          "description": "Resale number or some additional info about the customer",
          "type": "string"
        },
        "salesTermRef": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "$ref": "#/definitions/CustomerPostSalesTermRef"
        },
        "shipAddr": {
          "description": "Country name.",
          "$ref": "#/definitions/CustomerPostShipAddr"
        },
        "sparse": {
          "description": "Mark as true to do a partial update of a Customer object, otherwise the full Customer object is required",
          "type": "boolean"
        },
        "suffix": {
          "description": "Suffix of the name. For example, Jr",
          "type": "string",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "syncToken": {
          "description": "Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.",
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "taxExemptionReasonId": {
          "description": "The tax exemption reason associated with this customer object.",
          "type": "string"
        },
        "taxable": {
          "description": "If true, transactions for this customer are taxable. Default behaviour with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.",
          "type": "boolean"
        },
        "title": {
          "description": "Title of the person. This tag supports i18n, all locales",
          "type": "string",
          "x-alias": "contact.salutation",
          "x-conditionally-required-description": "The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required."
        },
        "webAddr": {
          "description": "Uniform Resource Identifier for the web site.",
          "$ref": "#/definitions/CustomerPostWebAddr"
        }
      },
      "x-has-customfields": false,
      "x-vendor-objectname": "customer",
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferGetAll": {
      "properties": {
        "amount": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 500
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/transferGetAllAttachableRef"
          },
          "type": "array"
        },
        "currencyRef": {
          "$ref": "#/definitions/transferGetAllCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/transferGetAllCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string",
          "x-samplevalue": "QBO"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "fromAccountRef": {
          "$ref": "#/definitions/transferGetAllFromAccountRef"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "239|0"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/transferGetAllLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/transferGetAllLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/transferGetAllMetaData"
        },
        "privateNote": {
          "type": "string",
          "x-samplevalue": "Funds Transfer"
        },
        "sparse": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "syncToken": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "systemId": {
          "type": "string",
          "x-samplevalue": "239"
        },
        "toAccountRef": {
          "$ref": "#/definitions/transferGetAllToAccountRef"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2015-12-15T00:00:00-06:00",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "transfer",
      "type": "object"
    },
    "BillPaymentPostCreditCardPaymentCcAccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "ccBankAccount"
        }
      },
      "type": "object"
    },
    "ReceiptPatchTemplateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseOrderPostLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "lines[*].customer.name"
        },
        "value": {
          "type": "string",
          "x-alias": "lines[*].customer.id"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/RefundReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemo": {
      "properties": {
        "TransactionLocationType": {
          "type": "string"
        },
        "applyTaxAfterDiscount": {
          "type": "boolean"
        },
        "attachableRef": {
          "items": {
            "$ref": "#/definitions/CreditMemoAttachableRef"
          },
          "type": "array"
        },
        "balance": {
          "format": "double",
          "type": "number"
        },
        "billAddr": {
          "$ref": "#/definitions/CreditMemoBillAddr"
        },
        "billEmail": {
          "$ref": "#/definitions/CreditMemoBillEmail"
        },
        "billEmailBcc": {
          "description": "Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent.",
          "$ref": "#/definitions/CreditMemoBillEmailBcc"
        },
        "billEmailCc": {
          "description": "Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent.",
          "$ref": "#/definitions/CreditMemoBillEmailCc"
        },
        "classRef": {
          "$ref": "#/definitions/CreditMemoClassRef"
        },
        "currencyRef": {
          "$ref": "#/definitions/CreditMemoCurrencyRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/CreditMemoCustomField"
          },
          "type": "array"
        },
        "customerMemo": {
          "$ref": "#/definitions/CreditMemoCustomerMemo"
        },
        "customerRef": {
          "$ref": "#/definitions/CreditMemoCustomerRef"
        },
        "deliveryInfo": {
          "description": "Email delivery information. Returned when a request has been made to deliver email with the send operation.",
          "$ref": "#/definitions/CreditMemoDeliveryInfo"
        },
        "departmentRef": {
          "$ref": "#/definitions/CreditMemoDepartmentRef"
        },
        "description": {
          "type": "string"
        },
        "docNumber": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "emailStatus": {
          "type": "string"
        },
        "exchangeRate": {
          "format": "int32",
          "type": "integer"
        },
        "globalTaxCalculation": {
          "type": "string"
        },
        "homeBalance": {
          "format": "double",
          "type": "number"
        },
        "homeTotalAmt": {
          "format": "double",
          "type": "number"
        },
        "id": {
          "type": "string"
        },
        "line": {
          "items": {
            "$ref": "#/definitions/CreditMemoLine"
          },
          "type": "array"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/CreditMemoLinkedTxn"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "#/definitions/CreditMemoMetaData"
        },
        "paymentMethodRef": {
          "$ref": "#/definitions/CreditMemoPaymentMethodRef"
        },
        "printStatus": {
          "type": "string"
        },
        "privateNote": {
          "type": "string"
        },
        "remainingCredit": {
          "format": "double",
          "type": "number"
        },
        "salesTermRef": {
          "$ref": "#/definitions/CreditMemoSalesTermRef"
        },
        "shipAddr": {
          "$ref": "#/definitions/CreditMemoShipAddr"
        },
        "shipDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "systemId": {
          "type": "string"
        },
        "totalAmt": {
          "format": "double",
          "type": "number"
        },
        "txnDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "txnTaxDetail": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetail"
        }
      },
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "creditmemo",
      "type": "object"
    },
    "RefundReceiptPostLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPutLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/ReceiptGetAllLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "InvoicePatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/InvoicePatchAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/InvoicePatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPostDepartmentRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "preferencesListOtherPrefsNameValue": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseTxnTaxDetailTaxLineLinkedTxn": {
      "properties": {
        "txnId": {
          "description": "Transaction Id of the related transaction.",
          "type": "string"
        },
        "txnLineId": {
          "description": "The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated. ",
          "type": "string"
        },
        "txnType": {
          "description": "Transaction type of the linked object. ",
          "enum": [
            "Expense",
            "Check",
            "CreditCardCredit",
            "JournalEntry",
            "CreditMemo",
            "Invoice",
            "Payment",
            "Bill"
          ],
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllLineItemBasedExpenseLineDetailCustomerRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "depositsObjectTxnTaxDetailTaxLineSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "VendorPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/VendorPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/JournalEntryPostReqLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string"
        },
        "txnLineId": {
          "type": "string"
        },
        "txnType": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatchOtherContactInfoOtherContactInfo": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineDiscountLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "EmployeePrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "email"
        }
      },
      "type": "object"
    },
    "swaggerDocs": {
      "x-has-customfields": false,
      "title": "swaggerDocs",
      "properties": {
        "basePath": {
          "x-samplevalue": "/elements/api-v2/hubs/crm",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/swaggerpaths"
        },
        "host": {
          "x-samplevalue": "localhost:5050",
          "type": "string"
        },
        "schemes": {
          "x-samplevalue": [
            "http"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "definitions": {
          "$ref": "#/definitions/swaggerdefinitions"
        },
        "swagger": {
          "x-samplevalue": "2.0",
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/swaggerinfo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggertags"
          }
        }
      },
      "type": "object"
    },
    "preferencesPatchTimeTrackingPrefs": {
      "properties": {
        "BillCustomers": {
          "type": "boolean"
        },
        "MarkTimeEntriesBillable": {
          "type": "boolean"
        },
        "ShowBillRateToAll": {
          "type": "boolean"
        },
        "UseServices": {
          "type": "boolean"
        },
        "WorkWeekStartDate": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "TimeActivityGetAllEmployeeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferUpdateObjectMetaData": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineItemBasedExpenseLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/PurchaseReqTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/PurchaseReqTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "BillCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPostAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchTxnTaxDetailTaxLineDescriptionLineDetail": {
      "properties": {
        "ServiceDate": {
          "description": "Date when the service is performed.",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoPatchTxnTaxDetailTaxLineDescriptionLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseAraccountRef": {
      "properties": {
        "name": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string"
        },
        "value": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file. Use Account.Id and Account.Name from that object for ARAccountRef.value and ARAccountRef.name, respectively.",
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "JournalEntryPostReqLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseReqTxnTaxDetailTxnTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "DepositsGetAllLineLinkedTxn": {
      "properties": {
        "txnId": {
          "type": "string",
          "x-samplevalue": "234"
        },
        "txnLineId": {
          "type": "string",
          "x-samplevalue": "0"
        },
        "txnType": {
          "enum": [
            "Payment",
            "Invoice",
            "SalesReceipt"
          ],
          "type": "string",
          "x-samplevalue": "Payment"
        }
      },
      "type": "object"
    },
    "ProductPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/CustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/ProductPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineDiscountLineDetailClassRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineSalesItemLineDetailMarkupInfoMarkkupAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPostAlternatePhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptGetAllTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PurchaseGetAllTxnTaxDetail": {
      "properties": {
        "taxLine": {
          "items": {
            "$ref": "#/definitions/PurchaseGetAllTxnTaxDetailTaxLine"
          },
          "type": "array"
        },
        "totalTax": {
          "description": "Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.",
          "format": "int32",
          "type": "integer"
        },
        "txnTaxCodeRef": {
          "description": "Reference to the transaction tax code. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation",
          "$ref": "#/definitions/PurchaseGetAllTxnTaxDetailTxnTaxCodeRef"
        }
      },
      "type": "object"
    },
    "ClassGetAllMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-searchable": true,
          "x-searchable-operators": [
            "!=",
            "=",
            "<=",
            ">=",
            ">",
            "<"
          ]
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchAttachableRef": {
      "properties": {
        "customField": {
          "items": {
            "$ref": "#/definitions/RefundReceiptPatchAttachableRefCustomField"
          },
          "type": "array"
        },
        "entityRef": {
          "$ref": "#/definitions/RefundReceiptPatchAttachableRefEntityRef"
        },
        "inactive": {
          "type": "boolean"
        },
        "includeOnSend": {
          "type": "boolean"
        },
        "lineInfo": {
          "type": "string"
        },
        "noRefOnly": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "budgetsGetAllAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllTxnTaxDetailTaxLineTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerGetAllResponsePrimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.phone"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerprimaryPhone": {
      "properties": {
        "freeFormNumber": {
          "type": "string",
          "x-samplevalue": "415-555-6579"
        }
      },
      "title": "CustomerprimaryPhone",
      "type": "object"
    },
    "PaymentMethodPost": {
      "properties": {
        "active": {
          "type": "boolean"
        },
        "attachableRef": {
          "$ref": "#/definitions/PaymentMethodPostAttachableRef"
        },
        "customField": {
          "items": {
            "$ref": "#/definitions/PaymentMethodPostCustomField"
          },
          "type": "array"
        },
        "domain": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "sparse": {
          "type": "boolean"
        },
        "syncToken": {
          "type": "string"
        },
        "type": {
          "enum": [
            "CREDIT_CARD",
            "NON_CREDIT_CARD"
          ],
          "type": "string"
        }
      },
      "required": [
        "name"
      ],
      "x-has-customfields": false,
      "x-vendor-objectname": "paymentmethod",
      "type": "object"
    },
    "preferencesEmailMessagesPrefsInvoiceMessage": {
      "properties": {
        "Message": {
          "type": "string"
        },
        "Subject": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentGetAllResponseLineLineExAnyValue": {
      "properties": {
        "Name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "txnId"
        },
        "Value": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "36"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoEntityRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef"
        },
        "markkupAccountRef": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoMarkkupAccountRef"
        },
        "percent": {
          "type": "boolean"
        },
        "percentBased": {
          "type": "boolean"
        },
        "priceLevelRef": {
          "$ref": "#/definitions/ReceiptPostLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef"
        },
        "value": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "JournalEntryGetAllLineJournalEntryLineDetailEntity": {
      "properties": {
        "entityRef": {
          "$ref": "#/definitions/JournalEntryGetAllLineJournalEntryLineDetailEntityEntityRef"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPostTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "RefundReceiptTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoPriceLevelRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostLineSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "preferencesListEmailMessagesPrefs": {
      "properties": {
        "EstimateMessage": {
          "$ref": "#/definitions/preferencesListEmailMessagesPrefsEstimateMessage"
        },
        "InvoiceMessage": {
          "$ref": "#/definitions/preferencesListEmailMessagesPrefsInvoiceMessage"
        },
        "SalesReceiptMessage": {
          "$ref": "#/definitions/preferencesListEmailMessagesPrefsSalesReceiptMessage"
        },
        "StatementMessage": {
          "$ref": "#/definitions/preferencesListEmailMessagesPrefsStatementMessage"
        }
      },
      "type": "object"
    },
    "PurchaseReqRemitToAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "BillBillAddr": {
      "properties": {
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city"
        },
        "country": {
          "type": "string",
          "x-alias": "billingAddress.country"
        },
        "countrySubDivisionCode": {
          "type": "string",
          "x-alias": "billingAddress.province"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id"
        },
        "line1": {
          "type": "string",
          "x-alias": "billingAddress.line1"
        },
        "line2": {
          "type": "string",
          "x-alias": "billingAddress.line2"
        },
        "postalCode": {
          "type": "string",
          "x-alias": "billingAddress.postalCode"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxn": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number"
        },
        "description": {
          "description": "Free form text description of the line item that appears in the printed record.",
          "type": "string"
        },
        "descriptionLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnDescriptionLineDetail"
        },
        "detailType": {
          "description": "Must be set to SALES_ITEM_LINE_DETAIL' ",
          "type": "string"
        },
        "discountLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnDiscountLineDetail"
        },
        "id": {
          "description": "The Id of the line item. Its use in requests is as follows:If Id is greater than zero and exists for the company, the request is considered an update operation for a line item.If no Id is provided, the Id provided is less than or equal to zero, or the Id provided is greater than zero and does not exist for the company then the request is considered a create operation for a line item.Available in all objects that use lines and support the update operation. Not supported for BillPayment, Estimate, Invoice, or Payment objects.",
          "type": "string"
        },
        "lineNum": {
          "description": "Specifies the position of the line in the collection of transaction lines.",
          "format": "float",
          "type": "number"
        },
        "salesItemLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSalesItemLineDetail"
        },
        "subtotalLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnSubtotalLineDetail"
        },
        "taxLineDetail": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnTaxLineDetail"
        }
      },
      "required": [
        "id"
      ],
      "type": "object"
    },
    "BillPutApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "x-alias": "account"
        }
      },
      "type": "object"
    },
    "TaxCodeGetAllSalesTaxRateList": {
      "properties": {
        "taxRateDetail": {
          "items": {
            "$ref": "#/definitions/TaxCodeGetAllSalesTaxRateListTaxRateDetail"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "EstimateCustomField": {
      "properties": {
        "definitionId": {
          "type": "string",
          "x-samplevalue": "1"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Crew #"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "StringType"
        }
      },
      "type": "object"
    },
    "VendorTermRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "RefundReceiptLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "transferCreateObjectCurrencyRef": {
      "properties": {
        "name": {
          "description": "The full name of the currency.",
          "type": "string",
          "x-samplevalue": "United States Dollar"
        },
        "value": {
          "description": "A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.",
          "enum": [
            "USD",
            "AUD",
            "EUR"
          ],
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPostAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnDescriptionLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VendorCreditApaccountRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPostLineAccountBasedExpenseLineDetailTaxCodeRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllBillAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "PurchaseReqLineAccountBasedExpenseLineDetail": {
      "properties": {
        "accountRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailAccountRef"
        },
        "billableStatus": {
          "type": "string"
        },
        "classRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailClassRef"
        },
        "customerRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailCustomerRef"
        },
        "markupInfo": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailMarkupInfo"
        },
        "taxAmount": {
          "format": "double",
          "type": "number"
        },
        "taxCodeRef": {
          "$ref": "#/definitions/PurchaseReqLineAccountBasedExpenseLineDetailTaxCodeRef"
        },
        "taxInclusiveAmt": {
          "format": "double",
          "type": "number"
        }
      },
      "required": [
        "accountRef"
      ],
      "type": "object"
    },
    "RefundReceiptPostLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/RefundReceiptPostLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "DepositsGetAllCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BillPaymentAttachableRefCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "PaymentPatchLine": {
      "properties": {
        "amount": {
          "description": "The amount of the line item.",
          "format": "float",
          "type": "number",
          "x-alias": "lines[*].amount"
        },
        "lineEx": {
          "$ref": "#/definitions/PaymentPatchLineLineEx"
        },
        "linkedTxn": {
          "items": {
            "$ref": "#/definitions/PaymentPatchLineLinkedTxn"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with this discount. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetailClassRef"
        },
        "discountAccountRef": {
          "description": "Income account used to track discounts. Query the Account name list resource to determine the appropriate Account object for this reference, where Account.AccountType=Income and Account.AccountSubType=DiscountsRefundsGiven. Use Account.Id and Account.Name from that object for DiscountAccountRef.value and DiscountAccountRef.name, respectively",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetailDiscountAccountRef"
        },
        "discountPercent": {
          "description": "Percentage by which the amount due is reduced, from 0% to 100%. To enter a discount of 8.5% use 8.5, not 0.085.",
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "description": "True if the discount is a percentage; null or false if discount based on amount",
          "type": "boolean"
        },
        "quantity": {
          "type": "string"
        },
        "taxCodeRef": {
          "description": "The TaxCodeassociated with the sales tax for the expense. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoLineGroupLineDetailLinkedTxnDiscountLineDetailTaxCodeRef"
        }
      },
      "type": "object"
    },
    "currencyObjectMetaData": {
      "properties": {
        "createTime": {
          "description": "Time the entity was created in the source domain. Local time zone: YYYY-MM-DDTHH:MM:SS,UTC: YYYY-MM-DDT HH :MM: SSZ, Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        },
        "lastUpdatedTime": {
          "description": "Time the entity was last updated in the source domain. ",
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ"
        }
      },
      "type": "object"
    },
    "ReceiptGetAllLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfoItemAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnSubtotalLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "transferGetAllAttachableRefEntityRef": {
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoPatchLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/CreditMemoPatchLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "ReceiptPatchLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-reference-objectname": "item"
        }
      },
      "type": "object"
    },
    "CreditMemoGetAllShipAddr": {
      "properties": {
        "city": {
          "description": "City name.",
          "type": "string",
          "x-samplevalue": "Bayshore"
        },
        "country": {
          "description": "Country name.",
          "type": "string",
          "x-samplevalue": "USA"
        },
        "countrySubDivisionCode": {
          "description": "Region within a country. For example, state name for USA, province name for Canada",
          "type": "string",
          "x-samplevalue": "CA"
        },
        "id": {
          "description": "Unique identifier of the QuickBooks object for the address, used for modifying the address.",
          "type": "string",
          "x-samplevalue": 35
        },
        "lat": {
          "description": "Latitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": 37.2374847
        },
        "line1": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Google"
        },
        "line2": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Building 1"
        },
        "line3": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "123 street"
        },
        "line4": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Dept 12"
        },
        "line5": {
          "description": "individual maximum of 500 chars, up to combined max of 2000 chars First five lines of the address.",
          "type": "string",
          "x-samplevalue": "Cube 999"
        },
        "long": {
          "description": "Longitude coordinate of Geocode (Geospacial Entity Object Code). INVALIDis returned for invalid addresses.",
          "type": "string",
          "x-samplevalue": -121.8277925
        },
        "postalCode": {
          "description": "Postal code. For example, zip code for USA and Canada",
          "type": "string",
          "x-samplevalue": 95123
        }
      },
      "type": "object"
    },
    "ReceiptPatchTxnTaxDetailTaxLineTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "float",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "float",
          "type": "number"
        },
        "percentBased": {
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "float",
          "type": "number"
        },
        "taxPercent": {
          "format": "float",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/ReceiptPatchTxnTaxDetailTaxLineTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "InvoiceLineDiscountLineDetailDiscountAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "InvoicePostLineGroupLineDetailLinkedTxnTaxLineDetail": {
      "properties": {
        "netAmountTaxable": {
          "format": "double",
          "type": "number"
        },
        "overrideDeltaAmount": {
          "format": "double",
          "type": "number"
        },
        "percentBased": {
          "format": "bool",
          "type": "boolean"
        },
        "taxInclusiveAmount": {
          "format": "double",
          "type": "number"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "taxRateRef": {
          "$ref": "#/definitions/InvoicePostLineGroupLineDetailLinkedTxnTaxLineDetailTaxRateRef"
        }
      },
      "type": "object"
    },
    "preferencesOtherPrefsNameValue": {
      "properties": {
        "Name": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerFax": {
      "properties": {
        "freeFormNumber": {
          "description": "Specifies the telephone number in free form.",
          "type": "string",
          "x-alias": "contact.fax"
        }
      },
      "type": "object"
    },
    "VendorGetAllCurrencyRef": {
      "properties": {
        "name": {
          "type": "string",
          "x-alias": "currency"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetail": {
      "properties": {
        "classRef": {
          "description": "Reference to the Class associated with the transaction. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerTxn is set to true. Query the Class name list resource to determine the appropriate Class object for this reference. Use Class.Id and Class.Name from that object for ClassRef.value and ClassRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailClassRef"
        },
        "itemAccountRef": {
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemAccountRef"
        },
        "itemRef": {
          "description": "Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.When a line lacks an ItemRef it is treated as documentation and the Line. Amount attribute is ignored.Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.For France locales: The account associated with the referenced Item object is looked up in the account category list.If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same VAT as in the line item TaxCodeRef attribute, then the item account is used.If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailItemRef"
        },
        "markupInfo": {
          "description": "Used to define markup when this line represents a billable expense on the invoice. Markup information for the billable expense line",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailMarkupInfo"
        },
        "qty": {
          "description": "Number of items for the line.",
          "format": "float",
          "type": "number"
        },
        "ratePercent": {
          "format": "float",
          "type": "number"
        },
        "serviceDate": {
          "format": "int64",
          "type": "integer",
          "x-samplevalue": 1480530600000
        },
        "taxCodeRef": {
          "description": "Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.",
          "$ref": "#/definitions/CreditMemoTxnTaxDetailTaxLineGroupLineDetailLinkedTxnSalesItemLineDetailTaxCodeRef"
        },
        "unitPrice": {
          "description": "Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.",
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "PaymentPatchDepositToAccountRef": {
      "properties": {
        "name": {
          "description": "The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.",
          "type": "string"
        },
        "value": {
          "description": "An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.",
          "type": "string",
          "x-alias": "bankAccount"
        }
      },
      "type": "object"
    },
    "InvoiceGetAllResponseTxnTaxDetailTaxLineCustomField": {
      "properties": {
        "definitionId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "CustomerPrimaryEmailAddr": {
      "properties": {
        "address": {
          "description": "An email address. The address format must follow the RFC 822 standard. ",
          "type": "string",
          "x-alias": "contact.email"
        }
      },
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "x-element-name": "QuickBooks Online",
    "x-element-hub": "finance",
    "x-element-key": "quickbooks",
    "title": "quickbooks",
    "x-element-id": 40,
    "version": "api-v2",
    "description": "Add a QuickBooks Online Instance to connect your existing QuickBooks Online account to the Finance Hub, allowing you to manage your customers, employees, invoices, purchase orders etc. across multiple Finance Elements. You will need your QuickBooks Online account information to add an instance."
  },
  "tags": [
    {
      "name": "Attachments"
    },
    {
      "name": "Bill Payments"
    },
    {
      "name": "Bills"
    },
    {
      "name": "Budgets"
    },
    {
      "name": "Bulk"
    },
    {
      "name": "Changes"
    },
    {
      "name": "Classes"
    },
    {
      "name": "Companies"
    },
    {
      "name": "Company Info"
    },
    {
      "name": "Credit Memos"
    },
    {
      "name": "Credit Terms"
    },
    {
      "name": "Currencies"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Departments"
    },
    {
      "name": "Deposits"
    },
    {
      "name": "Employees"
    },
    {
      "name": "Entitlements"
    },
    {
      "name": "Estimates"
    },
    {
      "name": "Exchange Rates"
    },
    {
      "name": "Invoices"
    },
    {
      "name": "Journal Codes"
    },
    {
      "name": "Journal Entries"
    },
    {
      "name": "Ledger Accounts"
    },
    {
      "name": "Object Name"
    },
    {
      "name": "Objects"
    },
    {
      "name": "Payment Methods"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Ping"
    },
    {
      "name": "Preferences"
    },
    {
      "name": "Products"
    },
    {
      "name": "Purchase Orders"
    },
    {
      "name": "Purchases"
    },
    {
      "name": "Refund Receipts"
    },
    {
      "name": "Reports"
    },
    {
      "name": "Sales Receipts"
    },
    {
      "name": "Settings"
    },
    {
      "name": "Tax Agencies"
    },
    {
      "name": "Tax Codes"
    },
    {
      "name": "Tax Rates"
    },
    {
      "name": "Tax Service"
    },
    {
      "name": "Time Activities"
    },
    {
      "name": "Transfers"
    },
    {
      "name": "Vendor Credits"
    },
    {
      "name": "Vendors"
    }
  ],
  "x-sap-api-type": "REST",
  "x-sap-shortText": "Cloud-based financial management software with payments, pay bills, and payroll functions",
  "externalDocs": {
    "description": "SAP Open Connectors Documentation",
    "url": "https://help.openconnectors.ext.hana.ondemand.com/home/quickbooks"
  }
}