{
  "basePath": "/elements/api-v2",
  "paths": {
    "/address-regions": {
      "get": {
        "summary": "Search for address regions",
        "operationId": "getAddressRegions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/addressRegionsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, countryID='{countryID}'.  Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Address Regions"
        ]
      }
    },
    "/address-regions/{id}": {
      "get": {
        "summary": "Retrieve an address region",
        "operationId": "getAddressRegionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/addressRegionsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Address Region ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the State",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the State (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Address Regions"
        ]
      }
    },
    "/address-types": {
      "get": {
        "summary": "Search for address types",
        "operationId": "getAddressTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/addressTypesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Address Types"
        ]
      }
    },
    "/address-types/{id}": {
      "get": {
        "summary": "Retrieve an address type",
        "operationId": "getAddressTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/addressTypesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Address Type ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Address Type",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Address Type (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Address Types"
        ]
      }
    },
    "/addresses": {
      "get": {
        "summary": "Search for addresses ",
        "operationId": "getAddresses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/addressGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}',show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Addresses"
        ]
      }
    },
    "/addresses/{id}": {
      "get": {
        "summary": "Retrieve an address",
        "operationId": "getAddresseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/addressesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Address ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Address",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Address (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Address (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Addresses"
        ]
      }
    },
    "/artefact-statuses": {
      "get": {
        "summary": "Search forartefact statuses",
        "operationId": "getArtefactStatuses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/artefactStatusesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Artefact Statuses"
        ]
      }
    },
    "/artefact-statuses/{id}": {
      "get": {
        "summary": "Retrieve an artefact status",
        "operationId": "getArtefactStatuseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/artefactStatusesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Artefact Status ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Artefact Status",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Artefact Status (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Artefact Statuses"
        ]
      }
    },
    "/attachments": {
      "post": {
        "summary": "Create an attachment",
        "operationId": "createAttachment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachmentsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "mimeType",
            "description": "The mime type of the attachment. For example text/plain.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fileName",
            "description": "The filename of the attachment. For example myFile.txt.",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "transactionId",
            "description": "The ID of the Transaction",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "file",
            "description": "File",
            "type": "file",
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the attachment",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fileExtension",
            "description": "The file extension of the attachment. For example txt.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fileSize",
            "description": "The file size of the attachment in Bytes",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "contextTypeId",
            "description": "The ID of the Attachment Context Type",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "contextId",
            "description": "The ID of the Attachment Context",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "multipart/form-data"
        ]
      },
      "get": {
        "summary": "Search for attachments",
        "operationId": "getAttachments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachmentsGetAllRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression. For example id='abcd-123-efg'",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Attachments"
        ]
      }
    },
    "/attachments/{id}": {
      "get": {
        "summary": "Retrieve an attachment",
        "operationId": "getAttachmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachmentsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Attachment Id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Attachments"
        ]
      },
      "delete": {
        "summary": "Delete an attachment",
        "operationId": "deleteAttachmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Attachment Id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Attachments"
        ]
      },
      "put": {
        "summary": "Create an attachment",
        "operationId": "replaceAttachmentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/attachmentsPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "TheAttachment Id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "mimeType",
            "description": "The mime type of the attachment",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "fileName",
            "description": "The file name of the attachment",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "file",
            "description": "File",
            "type": "file",
            "required": true
          },
          {
            "in": "query",
            "name": "description",
            "description": "The description of the attachment",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fileExtension",
            "description": "The file extension of the attachment",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "transactionId",
            "description": "The ID of the Transaction",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "fileSize",
            "description": "The file size of the attachment in Bytes",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "contextTypeId",
            "description": "The ID of the Attachment Context Type",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "contextId",
            "description": "The ID of the Attachment Context",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Attachments"
        ],
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/bank-account-types": {
      "get": {
        "summary": "Search forbank account types",
        "operationId": "getBankAccountTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bankAccountTypesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bank Account Types"
        ]
      }
    },
    "/bank-account-types/{id}": {
      "get": {
        "summary": "Retrieve a bank account type",
        "operationId": "getBankAccountTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/bankAccountTypesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Bank Account Type ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Account Type",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Account Type (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bank Account Types"
        ]
      }
    },
    "/bank-accounts": {
      "post": {
        "summary": "Create a bank account",
        "operationId": "createBankAccount",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/bankAccountsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/bankAccountPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The Bank account object",
            "required": true
          }
        ],
        "tags": [
          "Bank Accounts"
        ]
      },
      "get": {
        "summary": "Search for bank accounts",
        "operationId": "getBankAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/bankAccountsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Bank Accounts"
        ]
      }
    },
    "/bank-accounts/{id}": {
      "get": {
        "summary": "Retrieve a Bank account",
        "operationId": "getBankAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/bankAccountsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Bank Account ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Bank Account (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Bank Account",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Bank Account (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Bank Accounts"
        ]
      },
      "delete": {
        "summary": "Delete a bank account",
        "operationId": "deleteBankAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Bank Account ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Bank Accounts"
        ]
      },
      "put": {
        "summary": "Update a bank account",
        "operationId": "replaceBankAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/bankAccountsPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Bank Account ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/putBankAccount"
            },
            "in": "body",
            "name": "BankAccount",
            "description": "The Bank Account object",
            "required": false
          }
        ],
        "tags": [
          "Bank Accounts"
        ]
      }
    },
    "/bulk/download": {
      "post": {
        "summary": "Create a new bulk download job (asynchronous)",
        "operationId": "createBulkDownload",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/bulkDownloadRequest"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/jobs": {
      "get": {
        "operationId": "getBulkJobs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression, or the where clause, without the WHERE keyword, in a typical SQL query. For example to get all upload jobs the expression would be where=job_direction='UPLOAD'. The following fields are valid search fields 'object_name', 'job_status', 'job_direction', 'record_count'",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkJobList"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Fetch all the bulk jobs for an instance",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/query": {
      "post": {
        "operationId": "createBulkQuery",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The Url to send the notification to when the Job is completed",
            "in": "header",
            "name": "Elements-Async-Callback-Url",
            "required": false,
            "type": "string"
          },
          {
            "description": "The CEQL query. When this parameter is omitted, all objects of the given type are returned via the bulk job. Endpoint limiters may still apply.",
            "in": "query",
            "name": "q",
            "required": false,
            "type": "string"
          },
          {
            "description": "The last time this query was run. This is optional. You can also have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "lastRunDate",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "from",
            "required": false,
            "type": "string"
          },
          {
            "description": "The created/updated date of the object to filter on - optional eg. '2014-10-06T13:22:17-08:00'",
            "in": "query",
            "name": "to",
            "required": false,
            "type": "string"
          },
          {
            "description": "Optional JSON MetaData that contains callback-payload and fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date format}_Name of the file\"}. If the fileName is MyFile then pass metadata as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\", \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed back in bulk job notification ",
            "in": "formData",
            "name": "metaData",
            "required": false,
            "type": "string"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkQuery"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/cancel": {
      "put": {
        "operationId": "replaceBulkCancel",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to cancel.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Cancel an asynchronous bulk query job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/errors": {
      "get": {
        "operationId": "getBulkErrors",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its errors.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The page size for pagination, which defaults to 200 if not supplied",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the errors of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/status": {
      "get": {
        "operationId": "getBulkStatus",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job to retrieve its status.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/BulkStatus"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the status of a bulk job.",
        "tags": [
          "Bulk"
        ]
      }
    },
    "/bulk/{id}/{objectName}": {
      "get": {
        "operationId": "getBulkByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The ID of the bulk job",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "file"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve the results of an asynchronous bulk query.",
        "tags": [
          "Bulk"
        ],
        "produces": [
          "text/csv",
          "application/json",
          "application/jsonl"
        ]
      }
    },
    "/business": {
      "get": {
        "summary": "Retrieve business information for the authenticated user",
        "operationId": "getBusiness",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/business"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Business"
        ]
      }
    },
    "/businesses": {
      "get": {
        "summary": "Search for businesses",
        "operationId": "getBusinesses",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/businessesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Businesses"
        ]
      }
    },
    "/businesses/{id}": {
      "get": {
        "summary": "Retrieve a(n) businesses",
        "operationId": "getBusinesseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/businessesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Businesses"
        ]
      },
      "put": {
        "summary": "Update a(n) businesses",
        "operationId": "replaceBusinesseById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/businessesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/businessesPutReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Businesses"
        ]
      }
    },
    "/companies": {
      "get": {
        "summary": "List all companies",
        "operationId": "getCompanies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/companies"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Companies"
        ]
      }
    },
    "/contact-allocations": {
      "get": {
        "summary": "Search for contact allocations",
        "operationId": "getContactAllocations",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contactAllocationsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, contact_id='{contact_id}',transaction_type_id='{transaction_type_id}',deleted_since='{format: YYYY-MM-DDT(+|-)hh:mm) or date-time (format: YYYY-MM-DDThh:mm:ss(+|-)hh:mm}',   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Contact Allocations"
        ]
      }
    },
    "/contact-allocations/{id}": {
      "get": {
        "summary": "Retrieve a contact allocation",
        "operationId": "getContactAllocationById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactAllocationsGeetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Contact Allocation ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Allocation (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Allocation",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Contact Allocations"
        ]
      }
    },
    "/contact-person-types": {
      "get": {
        "summary": "Search forcontact person types",
        "operationId": "getContactPersonTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contactPersonTypesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries:show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Contact Person Types"
        ]
      }
    },
    "/contact-person-types/{id}": {
      "get": {
        "summary": "Retrieve a contact person type",
        "operationId": "getContactPersonTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactPersonTypesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Contact Person Type ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Contact Type.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Contact Type (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contact Person Types"
        ]
      }
    },
    "/contact-persons": {
      "get": {
        "summary": "Search for contact people",
        "operationId": "getContactPersons",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contactPersonsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, address_id='{address_id}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Contact Persons"
        ]
      }
    },
    "/contact-persons/{id}": {
      "get": {
        "summary": "Retrieve a contact person",
        "operationId": "getContactPersonById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactPersonsGetById"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Contact Person ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Address Contact",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Address Contact (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Address Contact (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contact Persons"
        ]
      }
    },
    "/contact-types": {
      "get": {
        "summary": "Search forcontact types",
        "operationId": "getContactTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contactTypesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Contact Types"
        ]
      }
    },
    "/contact-types/{id}": {
      "get": {
        "summary": "Retrieve a Contact Type",
        "operationId": "getContactTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactTypesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Contact Type ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Contact Type",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Contact Type (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contact Types"
        ]
      }
    },
    "/contacts": {
      "get": {
        "summary": "Search for contacts ",
        "operationId": "getContacts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/contactsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: search='{value of name or reference}', email='{email}', contact_type_id='{CUSTOMER,VENDOR}',lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)},  Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/contacts/{id}": {
      "get": {
        "summary": "Retrieve a contact",
        "operationId": "getContactById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/contactsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Contact ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Customer",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Contact (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Contact (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Contacts"
        ]
      }
    },
    "/countries": {
      "get": {
        "summary": "Search for countries",
        "operationId": "getCountries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/countriesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Countries"
        ]
      }
    },
    "/countries/{id}": {
      "get": {
        "summary": "Retrieve a country",
        "operationId": "getCountryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/countriesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Country ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Country",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Country (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Countries"
        ]
      }
    },
    "/country-groups": {
      "get": {
        "summary": "Search for country groups",
        "operationId": "getCountryGroups",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/countryGroupsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Country Groups"
        ]
      }
    },
    "/country-groups/{id}": {
      "get": {
        "summary": "Retrieve a country group",
        "operationId": "getCountryGroupById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/countryGroupsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Country Group ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Country Group",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Country Group (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Country Groups"
        ]
      }
    },
    "/currencies": {
      "get": {
        "summary": "Search for currencies",
        "operationId": "getCurrencies",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/currenciesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Currencies"
        ]
      }
    },
    "/currencies/{id}": {
      "get": {
        "summary": "Retrieve a currency",
        "operationId": "getCurrencyById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/currenciesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Currency ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Currency (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Currency",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Currencies"
        ]
      }
    },
    "/customers": {
      "post": {
        "summary": "Create a customer",
        "operationId": "createCustomer",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customersPostReq"
            },
            "in": "body",
            "name": "Customer",
            "description": "The Customer Object",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "get": {
        "summary": "Search for customers",
        "operationId": "getCustomers",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/customersGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: search='{value of name or reference}', email='{email}', lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/customers/{id}": {
      "get": {
        "summary": "Retrieve a customer",
        "operationId": "getCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Customer ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Contact (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Contact (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Customer",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Customers"
        ]
      },
      "put": {
        "summary": "Update a customer",
        "operationId": "replaceCustomerById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/customersPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Customer ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/customersPutReq"
            },
            "in": "body",
            "name": "Customer",
            "description": "The Customer object",
            "required": true
          }
        ],
        "tags": [
          "Customers"
        ]
      }
    },
    "/financial-settings": {
      "get": {
        "summary": "Retrieve the financial settings",
        "operationId": "getFinancialSettings",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/financialSettings"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Financial Settings"
        ]
      },
      "put": {
        "summary": "Update the financial settings",
        "operationId": "replaceFinancialSettings",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/financialSettingsResponse"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/financialSettingsUpdate"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Financial Settings"
        ]
      }
    },
    "/invoice-settings": {
      "get": {
        "summary": "Retrieve the invoice settings",
        "operationId": "getInvoiceSettings",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/invoiceSettings"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "The display the legacy_id for the Invoice Settings",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Invoice Settings"
        ]
      },
      "put": {
        "summary": "Update the invoice settings",
        "operationId": "replaceInvoiceSettings",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/invoiceSettings"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/invoiceSettings"
            },
            "in": "body",
            "name": "body",
            "description": "The invoice settings JSON object",
            "required": true
          }
        ],
        "tags": [
          "Invoice Settings"
        ]
      }
    },
    "/invoices": {
      "post": {
        "summary": "Create a sales invoice",
        "operationId": "createInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/invoicesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/invoicesPostReq"
            },
            "in": "body",
            "name": "SalesInvoice",
            "description": "The Sales Invoice object",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "get": {
        "summary": "Search for sales invoices",
        "operationId": "getInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/invoicesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, show_payment_allocations='{true or false}', search='{value of contact name or salesInvoice reference}', contact_id='{contact_id}', status_id='{status_id}', from_date='{date}', to_date='{date}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/invoices/{id}": {
      "get": {
        "summary": "Retrieve a sales invoice",
        "operationId": "getInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/invoicesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_payments_allocations",
            "description": "Use this to show the artefact's payments and allocations",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Sales Invoice",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Sales Invoice (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "delete": {
        "summary": "Delete a sales invoice",
        "operationId": "deleteInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "void_reason",
            "description": "The reason the Sales Invoice is being voided.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      },
      "put": {
        "summary": "Update a sales invoice",
        "operationId": "replaceInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/invoicesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/invoicesPutReq"
            },
            "in": "body",
            "name": "SalesInvoices",
            "description": "The Sales Invoice object",
            "required": true
          }
        ],
        "tags": [
          "Invoices"
        ]
      }
    },
    "/journal-entries": {
      "post": {
        "summary": "Create a journal entry",
        "operationId": "createJournalEntry",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalEntriesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/journalEntriesPostReq"
            },
            "in": "body",
            "name": "Journals",
            "description": "The Journal object",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "get": {
        "summary": "Search for journal entries",
        "operationId": "getJournalEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/journalEntriesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      }
    },
    "/journal-entries/{id}": {
      "get": {
        "summary": "Retrieve a journal entry",
        "operationId": "getJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/journalEntriesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Journal Entry ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Journal entry",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Journal (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Journal (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      },
      "delete": {
        "summary": "Delete a journal entry",
        "operationId": "deleteJournalEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Journal Entry ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Journal Entries"
        ]
      }
    },
    "/ledger-accounts": {
      "post": {
        "summary": "Create a ledger account",
        "operationId": "createLedgerAccount",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The ledger account object",
            "required": true
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "get": {
        "summary": "Search for ledger accounts",
        "operationId": "getLedgerAccounts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ledgerAccountsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, visible_in='{valid values are: banking, sales, expenses, other_payments, other_receipts, journals and reporting}', show_balance_details ='{true or false,Use this to display the balance details for ledger accounts between a date range (requires from_date and to_date).}', from_date='{date}', to_date='{to_date}', ledger_account_type_id='{ledger_account_type_id' .   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/ledger-accounts/{id}": {
      "get": {
        "summary": "Retrieve a ledger account",
        "operationId": "getLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Ledger Account ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "to_date",
            "description": "Calculate balances to this date",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Ledger Account (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Ledger Account (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "from_date",
            "description": "Calculate balances from this date",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_balance_details",
            "description": "Use this to display the balance details for ledger accounts between a date range (requires from_date and to_date)",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Ledger Account",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      },
      "put": {
        "summary": "Update a ledger account",
        "operationId": "replaceLedgerAccountById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Ledger Account ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/ledgerAccountsPutReq"
            },
            "in": "body",
            "name": "LedgerAccount",
            "description": "The Ledger Account object",
            "required": false
          }
        ],
        "tags": [
          "Ledger Accounts"
        ]
      }
    },
    "/ledger-entries": {
      "get": {
        "summary": "Search for ledgerEntries",
        "operationId": "getLedgerEntries",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ledgerEntriesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression,The search able filed are from_date, to_date, transaction_id, journal_code_id etc",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Ledger Entries"
        ]
      }
    },
    "/ledger-entries/{id}": {
      "get": {
        "summary": "Retrieve an ledgerEntries",
        "operationId": "getLedgerEntryById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/ledgerEntriesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Ledger Entries"
        ]
      }
    },
    "/live-exchange-rates": {
      "get": {
        "summary": "Search for live exchange rates",
        "operationId": "getLiveExchangeRates",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/liveExchangeRatesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: search='{value of name or reference}', email='{email}', lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Live Exchange Rates"
        ]
      }
    },
    "/live-exchange-rates/{id}": {
      "get": {
        "summary": "Retrieve a live exchange rate",
        "operationId": "getLiveExchangeRateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/liveExchangeRatesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The LIve Exchange Rate ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Customer",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Contact (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Contact (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Live Exchange Rates"
        ]
      }
    },
    "/me": {
      "get": {
        "summary": "List me",
        "operationId": "getMe",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/me"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Me"
        ]
      }
    },
    "/objects": {
      "get": {
        "operationId": "getObjects",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the available objects.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/docs": {
      "get": {
        "operationId": "getObjectsObjectNameDocs",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Include discovery metadata in definitions",
            "in": "query",
            "name": "discovery",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Optionally resolve swagger references for an inline object definition",
            "in": "query",
            "name": "resolveReferences",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "Include only OpenAPI / Swagger properties in definitions",
            "in": "query",
            "name": "basic",
            "required": false,
            "type": "boolean"
          },
          {
            "description": "The element swagger version to get the corresponding element swagger, Passing in \"-1\" gives latest element swagger",
            "in": "query",
            "name": "version",
            "required": false,
            "default": "-1",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/swaggerDocs"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get swagger docs for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/objects/{objectName}/metadata": {
      "get": {
        "operationId": "getObjectsObjectNameMetadata",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "Elements Version to be used for getting metadata, possible options are Hydrogen, Helium. Default value is Hydrogen",
            "in": "header",
            "name": "Elements-Version",
            "required": false,
            "type": "string",
            "enum": [
              "Hydrogen",
              "Helium"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/objectsMetadata"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Get a list of all the field for an object.",
        "tags": [
          "Objects"
        ]
      }
    },
    "/other-payments": {
      "post": {
        "summary": "Create an other payment",
        "operationId": "createOtherPayment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/otherPaymentsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/otherPaymentsPostReq"
            },
            "in": "body",
            "name": "OtherPayment",
            "description": "The Other Payment object",
            "required": true
          }
        ],
        "tags": [
          "Other Payments"
        ]
      },
      "get": {
        "summary": "Search for other-payments",
        "operationId": "getOtherPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/otherPaymentsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, contact_id='{contact_id}',bank_account_id='{bank_account_id}',transaction_type_id='{transaction_type_id}',deleted_since='{format: YYYY-MM-DDT(+|-)hh:mm) or date-time (format: YYYY-MM-DDThh:mm:ss(+|-)hh:mm}',   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Other Payments"
        ]
      }
    },
    "/other-payments/{id}": {
      "get": {
        "summary": "Retrieve an other payment",
        "operationId": "getOtherPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/otherPaymentsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The other payment id",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Payment",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Payment (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Payment (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Other Payments"
        ]
      },
      "delete": {
        "summary": "Delete an other payment",
        "operationId": "deleteOtherPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "Delete the other payment",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Other Payments"
        ]
      },
      "put": {
        "summary": "Update other payment",
        "operationId": "replaceOtherPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/otherPaymentsPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The other payment Id. ",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/otherPaymentsPutReq"
            },
            "in": "body",
            "name": "OtherPayment",
            "description": "The other payment object",
            "required": false
          }
        ],
        "tags": [
          "Other Payments"
        ]
      }
    },
    "/payment-methods": {
      "get": {
        "summary": "Search forpayment methods",
        "operationId": "getPaymentMethods",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/paymentMethodsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payment Methods"
        ]
      }
    },
    "/payment-methods/{id}": {
      "get": {
        "summary": "Retrieve a payment method",
        "operationId": "getPaymentMethodById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentMethodsGetByRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Payment Method ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Payment Method",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Transaction Type (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Payment Methods"
        ]
      }
    },
    "/payments": {
      "post": {
        "summary": "Create a payment",
        "operationId": "createPayment",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsPostReq"
            },
            "in": "body",
            "name": "Payments",
            "description": "The Payments Object",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "get": {
        "summary": "Search for payments",
        "operationId": "getPayments",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/paymentsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, contact_id='{contact_id}',bank_account_id='{bank_account_id}',transaction_type_id='{transaction_type_id}',deleted_since='{format: YYYY-MM-DDT(+|-)hh:mm) or date-time (format: YYYY-MM-DDThh:mm:ss(+|-)hh:mm}',   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/payments/{id}": {
      "get": {
        "summary": "Retrieve a payment",
        "operationId": "getPaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Payment ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Payment",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Payment (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Payment (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "delete": {
        "summary": "Delete payments by id",
        "operationId": "deletePaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "id of resource to be deleted",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      },
      "put": {
        "summary": "Update a payment",
        "operationId": "replacePaymentById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/paymentsPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Payment ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/paymentsPutReq"
            },
            "in": "body",
            "name": "Payment",
            "description": "The Payment object",
            "required": true
          }
        ],
        "tags": [
          "Payments"
        ]
      }
    },
    "/ping": {
      "get": {
        "operationId": "getPing",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Pong"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Ping the Element to confirm that the Hub Element has a heartbeat.  If the Element does not have a heartbeat, an error message will be returned.",
        "tags": [
          "Ping"
        ]
      }
    },
    "/product-sales-price-types": {
      "post": {
        "summary": "Create a(n) productSalesPriceTypes",
        "operationId": "createProductSalesPriceType",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productSalesPriceTypesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/productSalesPriceTypesPostReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Product Sales Price Types"
        ]
      },
      "get": {
        "summary": "Returns all product sales price types.",
        "operationId": "getProductSalesPriceTypes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/productSalesPriceTypesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true of false value}', attributes={'all' (default), '' for fewest,  named attributes)}, active='{true or false}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Product Sales Price Types"
        ]
      }
    },
    "/product-sales-price-types/{id}": {
      "get": {
        "summary": "Retrieve a product sales price type",
        "operationId": "getProductSalesPriceTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productSalesPriceTypesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Product Sales Price Type ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Product Price (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Product Price",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Product Sales Price Types"
        ]
      },
      "delete": {
        "summary": "Delete a(n) productSalesPriceTypes",
        "operationId": "deleteProductSalesPriceTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id ID",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Product Sales Price Types"
        ]
      },
      "put": {
        "summary": "Update a(n) productSalesPriceTypes",
        "operationId": "replaceProductSalesPriceTypeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productSalesPriceTypesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The id ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/productSalesPriceTypesPutReq"
            },
            "in": "body",
            "name": "body",
            "description": "The object body",
            "required": true
          }
        ],
        "tags": [
          "Product Sales Price Types"
        ]
      }
    },
    "/products": {
      "post": {
        "summary": "Create a product",
        "operationId": "createProduct",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/productsPostReq"
            },
            "in": "body",
            "name": "Products",
            "description": "The Product object",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "get": {
        "summary": "Search for products",
        "operationId": "getProducts",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/productsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, search='{value for item_code or description}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Retrieve a product",
        "operationId": "getProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Product ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Product (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Product",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "delete": {
        "summary": "delete product",
        "operationId": "deleteProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "id",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      },
      "put": {
        "summary": "Update a product",
        "operationId": "replaceProductById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/productsPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The product Id",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/productsPutReq"
            },
            "in": "body",
            "name": "Products",
            "description": "The Product object",
            "required": true
          }
        ],
        "tags": [
          "Products"
        ]
      }
    },
    "/purchase-credit-notes": {
      "post": {
        "summary": "Create a purchase credit note",
        "operationId": "createPurchaseCreditNote",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseCreditNotesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseCreditNotesPostReq"
            },
            "in": "body",
            "name": "PurchaseCreditNote",
            "description": "The Purchase Credit Note object",
            "required": true
          }
        ],
        "tags": [
          "Purchase Credit Notes"
        ]
      },
      "get": {
        "summary": "Search for purchase credit notes",
        "operationId": "getPurchaseCreditNotes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseCreditNotesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, show_payment_allocations='{true or false}', search='{value of contact name or purchase credit note reference}', contact_id='{contact_id}', status_id='{status_id}', from_date='{date}', to_date='{date}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Credit Notes"
        ]
      }
    },
    "/purchase-credit-notes/{id}": {
      "get": {
        "summary": "Retrieve an sales credit note",
        "operationId": "getPurchaseCreditNoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseCreditNotesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Credit Note ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Sales Invoice",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "show_payments_allocations",
            "description": "Use this to show the artefact's payments and allocations",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Sales Invoice (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Purchase Credit Notes"
        ]
      },
      "delete": {
        "summary": "Delete a purchase credit note",
        "operationId": "deletePurchaseCreditNoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Credit Note ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "void_reason",
            "description": "The reason the Purchase Credit Note being voided.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Credit Notes"
        ]
      },
      "put": {
        "summary": "Update a purchase credit note",
        "operationId": "replacePurchaseCreditNoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseCreditNotesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Credit Note ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseCreditNotesPutReq"
            },
            "in": "body",
            "name": "PurchaseCreditNote",
            "description": "The Purchase Credit Note object",
            "required": true
          }
        ],
        "tags": [
          "Purchase Credit Notes"
        ]
      }
    },
    "/purchase-invoices": {
      "post": {
        "summary": "Create a purchase invoice",
        "operationId": "createPurchaseInvoice",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesPostReq"
            },
            "in": "body",
            "name": "PurchaseInvoices",
            "description": "The Purchase Invoice object",
            "required": true
          }
        ],
        "tags": [
          "Purchase Invoices"
        ]
      },
      "get": {
        "summary": "Search for purchase invoices",
        "operationId": "getPurchaseInvoices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/purchaseInvoicesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, show_payment_allocations='{true or false}', search='{value of contact name or purchase Invoice reference}', contact_id='{contact_id}', status_id='{status_id}', from_date='{date}', to_date='{date}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Purchase Invoices"
        ]
      }
    },
    "/purchase-invoices/{id}": {
      "get": {
        "summary": "Retrieve a purchase invoice",
        "operationId": "getPurchaseInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Purchase Invoice",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Purchase Invoice (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_payments_allocations",
            "description": "Use this to show the artefact's payments and allocations",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Purchase Invoices"
        ]
      },
      "delete": {
        "summary": "Delete a purchase invoice",
        "operationId": "deletePurchaseInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "void_reason",
            "description": "The reason the Purchase Invoice is being voided.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Purchase Invoices"
        ]
      },
      "put": {
        "summary": "Update a purchase invoice",
        "operationId": "replacePurchaseInvoiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Purchase Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/purchaseInvoicesPutReq"
            },
            "in": "body",
            "name": "PurchaseInvoice",
            "description": "The Purchase Invoice object",
            "required": true
          }
        ],
        "tags": [
          "Purchase Invoices"
        ]
      }
    },
    "/sales-credit-notes": {
      "post": {
        "summary": "Create a sales credit note",
        "operationId": "createSalesCreditNote",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesCreditNotesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesCreditNotesPostReq"
            },
            "in": "body",
            "name": "SalesCreditNote",
            "description": "The Sales Credit Note object",
            "required": true
          }
        ],
        "tags": [
          "Sales Credit Notes"
        ]
      },
      "get": {
        "summary": "Search for sales credit notes",
        "operationId": "getSalesCreditNotes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesCreditNotesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, show_payment_allocations='{true or false}', search='{value of contact name or sales credit note reference}', contact_id='{contact_id}', status_id='{status_id}', from_date='{date}', to_date='{date}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Credit Notes"
        ]
      }
    },
    "/sales-credit-notes/{id}": {
      "get": {
        "summary": "Retrieve an sales credit note",
        "operationId": "getSalesCreditNoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesCreditNotesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Sales Invoice",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "show_payments_allocations",
            "description": "Use this to show the artefact's payments and allocations",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Sales Invoice (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Credit Notes"
        ]
      },
      "delete": {
        "summary": "Delete a purchase credit note",
        "operationId": "deleteSalesCreditNoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Credit Note ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "void_reason",
            "description": "The reason the Sales Credit Note being voided.",
            "type": "string",
            "required": true
          }
        ],
        "tags": [
          "Sales Credit Notes"
        ]
      },
      "put": {
        "summary": "Update a sales credit note",
        "operationId": "replaceSalesCreditNoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesCreditNotesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Invoice ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesCreditNotesPutReq"
            },
            "in": "body",
            "name": "SalesCreditNote",
            "description": "The Sales Credit Note object",
            "required": true
          }
        ],
        "tags": [
          "Sales Credit Notes"
        ]
      }
    },
    "/sales-quotes": {
      "post": {
        "summary": "Create a sales quote",
        "operationId": "createSalesQuote",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesQuotesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesQuotesPostReq"
            },
            "in": "body",
            "name": "SalesQuotes",
            "description": "The Sales Quote object",
            "required": true
          }
        ],
        "tags": [
          "Sales Quotes"
        ]
      },
      "get": {
        "summary": "Search for sales quotes",
        "operationId": "getSalesQuotes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/salesQuotesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, show_payment_allocations='{true or false}', search='{value of contact name or sales quote reference}', contact_id='{contact_id}', status_id='{status_id}', from_date='{date}', to_date='{date}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Sales Quotes"
        ]
      }
    },
    "/sales-quotes/{id}": {
      "get": {
        "summary": "Retrieve a sales quote",
        "operationId": "getSalesQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesQuoteGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Quote ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Sales Quote",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Sales Quote (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Sales Quotes"
        ]
      },
      "put": {
        "summary": "Update a sales quote",
        "operationId": "replaceSalesQuoteById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/salesQuotesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Sales Quote ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/salesQuotesPutReq"
            },
            "in": "body",
            "name": "SalesQuote",
            "description": "The Sales Quote object",
            "required": true
          }
        ],
        "tags": [
          "Sales Quotes"
        ]
      }
    },
    "/services": {
      "get": {
        "summary": "Search for services",
        "operationId": "getServices",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/servicesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, search='{value of item code or description}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/services/{id}": {
      "get": {
        "summary": "Retrieve a service",
        "operationId": "getServiceById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/servicesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Service ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Service",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Service (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Services"
        ]
      }
    },
    "/tax-codes": {
      "get": {
        "summary": "Search fortax codes",
        "operationId": "getTaxCodes",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxCodesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Codes"
        ]
      }
    },
    "/tax-codes/{id}": {
      "get": {
        "summary": "Retrieve a tax code",
        "operationId": "getTaxCodeById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxCodesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Tax Code ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Tax Code",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Tax Type (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Tax Codes"
        ]
      }
    },
    "/tax-profiles": {
      "get": {
        "summary": "Search for tax profiles",
        "operationId": "getTaxProfiles",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxProfilesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Profiles"
        ]
      }
    },
    "/tax-profiles/{id}": {
      "get": {
        "summary": "Retrieve a tax profile",
        "operationId": "getTaxProfileById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxProfilesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Tax Profile ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Tax Profile (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Tax Profile",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Tax Profiles"
        ]
      }
    },
    "/tax-rates": {
      "post": {
        "summary": "Create a tax rate (US country only)",
        "operationId": "createTaxRate",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxRatesPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/taxRatesPostReq"
            },
            "in": "body",
            "name": "TaxRates",
            "description": "The Tax Rate object",
            "required": true
          }
        ],
        "tags": [
          "Tax Rates"
        ]
      },
      "get": {
        "summary": "Search for tax rates",
        "operationId": "getTaxRates",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/taxRatesGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the comma separated field names to return in the response payload, expose all attributes with 'all'. Defaults to 'all'.",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, address_region_id='{address_region_id}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Tax Rates"
        ]
      }
    },
    "/tax-rates/{id}": {
      "get": {
        "summary": "Retrieve a tax rate",
        "operationId": "getTaxRateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxRatesGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Tax Rate ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Tax Rate (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Tax Rate",
            "type": "boolean",
            "required": false
          }
        ],
        "tags": [
          "Tax Rates"
        ]
      },
      "put": {
        "summary": "Update a tax rate",
        "operationId": "replaceTaxRateById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/taxRatesPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Tax Rate ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/taxRatesPutReq"
            },
            "in": "body",
            "name": "TaxRates",
            "description": "The Tax Rate object",
            "required": true
          }
        ],
        "tags": [
          "Tax Rates"
        ]
      }
    },
    "/transactions": {
      "get": {
        "summary": "Search for transactions",
        "operationId": "getTransactions",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/transactionsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "The CEQL search expression,The search able filed are from_date, to_date, updated_from_date, updated_to_date etc",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The number of resources to return in a given page",
            "type": "string",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/transactions/{id}": {
      "get": {
        "summary": "Retrieve a transaction",
        "operationId": "getTransactionById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/transactionsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Transaction ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Transaction",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Tax Rate (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Transactions"
        ]
      }
    },
    "/vendors": {
      "post": {
        "summary": "Create a vendor",
        "operationId": "createVendor",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsPostRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorsPostReq"
            },
            "in": "body",
            "name": "Vendor",
            "description": "The Vendor object",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "get": {
        "summary": "Search for vendors",
        "operationId": "getVendors",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/vendorsGetAllResObject"
              }
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "where",
            "description": "Valid entries: search='{value of name or reference}', email='{email}', lastModifiedDate >= '{date}', show_legacy_id='{true or false value}', attributes={'all' (default), '' for fewest,  named attributes)}, contact_type_id='{contact_type_id}'.   Valid conjunction: and",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "format": "int64",
            "description": "The page size. Defaults to 200 if not provided. Maximum of 2000",
            "type": "integer",
            "required": false
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/vendors/{id}": {
      "get": {
        "summary": "Retrieve a vendor",
        "operationId": "getVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsGetByIdRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Vendor ID",
            "type": "string",
            "required": true
          },
          {
            "in": "query",
            "name": "nested_attributes",
            "description": "Specify the attributes that you want to expose for nested entities of the Contact (expose all nested attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          },
          {
            "in": "query",
            "name": "show_legacy_id",
            "description": "Display the legacy_id for the Vendor",
            "type": "boolean",
            "required": false
          },
          {
            "in": "query",
            "name": "attributes",
            "description": "Specify the attributes that you want to expose for the Contact (expose all attributes with 'all'). These are in addition to the base attributes (name, path)",
            "type": "string",
            "required": false
          }
        ],
        "tags": [
          "Vendors"
        ]
      },
      "put": {
        "summary": "Update a vendor",
        "operationId": "replaceVendorById",
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/vendorsPutRes"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          }
        },
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "id",
            "description": "The Vendor ID",
            "type": "string",
            "required": true
          },
          {
            "schema": {
              "$ref": "#/definitions/vendorsPutReq"
            },
            "in": "body",
            "name": "Vendor",
            "description": "The Vendor object",
            "required": true
          }
        ],
        "tags": [
          "Vendors"
        ]
      }
    },
    "/{objectName}": {
      "get": {
        "operationId": "getByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createByObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}": {
      "delete": {
        "operationId": "deleteObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "application/json",
          "application/pdf"
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {objectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the 'Accept' header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}": {
      "get": {
        "operationId": "getObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The CEQL search expression.",
            "in": "query",
            "name": "where",
            "required": false,
            "type": "string"
          },
          {
            "description": "The page size. Defaults to 200 if not provided. Maximum of 5000.",
            "format": "int64",
            "in": "query",
            "name": "pageSize",
            "required": false,
            "type": "integer"
          },
          {
            "description": "The next page cursor, taken from the response header: `elements-next-page-token`",
            "in": "query",
            "name": "nextPage",
            "required": false,
            "type": "string"
          },
          {
            "description": "The fields to return on the response. Can be a single field or a comma-separated list of fields",
            "in": "query",
            "name": "fields",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "items": {
                "$ref": "#/definitions/Object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Search for {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "post": {
        "operationId": "createObjectNameByChildObjectName",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Create an {objectName}",
        "tags": [
          "Object Name"
        ]
      }
    },
    "/{objectName}/{objectId}/{childObjectName}/{childObjectId}": {
      "delete": {
        "operationId": "deleteObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected"
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Delete an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "get": {
        "operationId": "getObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Retrieve an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "patch": {
        "operationId": "updateObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      },
      "put": {
        "operationId": "replaceObjectNameByChildObjectId",
        "parameters": [
          {
            "description": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the object",
            "in": "path",
            "name": "objectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The name of the childObjectName",
            "in": "path",
            "name": "childObjectName",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName} ID",
            "in": "path",
            "name": "objectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {childObjectName} ID",
            "in": "path",
            "name": "childObjectId",
            "required": true,
            "type": "string"
          },
          {
            "description": "The {objectName}",
            "in": "body",
            "name": "Body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Everything worked as expected",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          },
          "400": {
            "description": "Bad Request - Often due to a missing request parameter"
          },
          "401": {
            "description": "Unauthorized - An invalid element token, user secret and/or org secret provided"
          },
          "403": {
            "description": "Forbidden - Access to the resource by the provider is forbidden"
          },
          "404": {
            "description": "Not found - The requested resource is not found"
          },
          "405": {
            "description": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected"
          },
          "406": {
            "description": "Not acceptable - The response content type does not match the &quot;Accept&quot; header value"
          },
          "409": {
            "description": "Conflict - If a resource being created already exists"
          },
          "415": {
            "description": "Unsupported media type - The server cannot handle the requested Content-Type"
          },
          "500": {
            "description": "Server error - Something went wrong on the Cloud Elements server"
          },
          "502": {
            "description": "Provider server error - Something went wrong on the Provider or Endpoint's server"
          }
        },
        "summary": "Update an {childObjectName}",
        "tags": [
          "Object Name"
        ]
      }
    }
  },
  "host": "hostname",
  "schemes": [
    "https"
  ],
  "definitions": {
    "invoicesGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "taxRatesPostReqComponent_tax_rate": {
      "properties": {
        "agency": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "component_tax_rate",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "purchaseInvoicesPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "taxCodesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_regions": {
          "items": {
            "$ref": "#/definitions/taxCodesGetByIdResAddress_regions"
          },
          "type": "array"
        },
        "country": {
          "$ref": "#/definitions/taxCodesGetByIdResCountry"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "federal_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_rates": {
          "items": {
            "$ref": "#/definitions/taxCodesGetByIdResTax_rates"
          },
          "type": "array"
        }
      },
      "title": "taxCodesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPostResContactDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/invoicesPostResContactDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/invoicesPostResContactDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/invoicesPostResContactDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "type": "object"
    },
    "salesQuotesPostReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "bankAccountsGetAllResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/da7370e54d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da7370e54d1611e695ab0ed51759bcc7"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "purchaseInvoicesGetAllResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "contactsGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "paymentsPutResPayment_on_accountContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/IN"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "India (IN)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "IN"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesQuoteGetByIdResStatus": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expired"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPIRED"
        }
      },
      "title": "status",
      "type": "object"
    },
    "vendorsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/6dd371275d82432d856134360da45645"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/vendorsGetByIdResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/vendorsGetByIdResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "currency": {
          "$ref": "#/definitions/vendorsGetByIdResCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/vendorsGetByIdResDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "qwer"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "6dd371275d82432d856134360da45645"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        },
        "links": {
          "items": {
            "$ref": "#/definitions/vendorsGetByIdResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/vendorsGetByIdResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/vendorsGetByIdResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "qwer"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalid",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/vendorsGetByIdResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:58Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "paymentsPutResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/83985fbd09ca40de84454c858316f9b2"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "83985fbd09ca40de84454c858316f9b2"
        }
      },
      "type": "object"
    },
    "contactsGetByIdResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/3041826d4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3041826d4d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633118
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "contactAllocationsGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "salesQuotesPutResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesPutResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesQuotesPutResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesPutResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesPutResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "swagger400": {
      "x-has-customfields": false,
      "type": "object",
      "title": "400",
      "properties": {
        "description": {
          "x-samplevalue": "Bad Request - Often due to a missing request parameter",
          "type": "string"
        }
      }
    },
    "salesCreditNotesGetAllResCredit_note_linesProduct": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/015aaaf5f8ae11e7a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "This is a sample product"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "015aaaf5f8ae11e7a8f11281a7acf536"
        }
      },
      "title": "product",
      "type": "object"
    },
    "swagger401": {
      "x-has-customfields": false,
      "type": "object",
      "title": "401",
      "properties": {
        "description": {
          "x-samplevalue": "Unauthorized - An invalid element token, user secret and/or org secret provided",
          "type": "string"
        }
      }
    },
    "swagger403": {
      "x-has-customfields": false,
      "type": "object",
      "title": "403",
      "properties": {
        "description": {
          "x-samplevalue": "Forbidden - Access to the resource by the provider is forbidden",
          "type": "string"
        }
      }
    },
    "swagger404": {
      "x-has-customfields": false,
      "type": "object",
      "title": "404",
      "properties": {
        "description": {
          "x-samplevalue": "Not found - The requested resource is not found",
          "type": "string"
        }
      }
    },
    "swagger405": {
      "x-has-customfields": false,
      "type": "object",
      "title": "405",
      "properties": {
        "description": {
          "x-samplevalue": "Method not allowed - Incorrect HTTP verb used, e.g., GET used when POST expected",
          "type": "string"
        }
      }
    },
    "customersPostResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "paymentsGetByIdResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "CHECK"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "salesQuotesPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "bankAccountsGetByIdResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "checking updated"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "131241"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "swaggercontact": {
      "x-has-customfields": false,
      "type": "object",
      "title": "contact",
      "properties": {
        "email": {
          "x-samplevalue": "support@cloud-elements.com",
          "type": "string"
        }
      }
    },
    "salesQuotesPutResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "purchaseCreditNotesPutResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "swagger406": {
      "x-has-customfields": false,
      "type": "object",
      "title": "406",
      "properties": {
        "description": {
          "x-samplevalue": "Not acceptable - The response content type does not match the 'Accept' header value",
          "type": "string"
        }
      }
    },
    "journalEntriesPostResJournal_lines": {
      "properties": {
        "bank_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cleared": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "credit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "debit": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "details": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3848335b79604ae890af41738d1c50a6"
        },
        "include_on_tax_return": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/journalEntriesPostResJournal_linesLedger_account"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "journal_lines",
      "type": "object"
    },
    "swaggerdefinition-property": {
      "x-has-customfields": false,
      "type": "object",
      "title": "#/definitions/definition-property",
      "properties": {
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        }
      }
    },
    "salesQuotesGetAllResQuote_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "swagger409": {
      "x-has-customfields": false,
      "type": "object",
      "title": "409",
      "properties": {
        "description": {
          "x-samplevalue": "Conflict - If a resource being created already exists",
          "type": "string"
        }
      }
    },
    "paymentMethodsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/BANK_OPENING_BALANCE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Bank Opening Balance"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "BANK_OPENING_BALANCE",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "paymentMethodsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "ledgerAccountsPostResBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "0.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-alias": "tranType",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetByIdResPayment_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534867
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "ledgerEntriesGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/d0e408de4d1f11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0e408de4d1f11e695ab0ed51759bcc7"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "salesQuotesGetAllResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "A building"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "Amar Arma Office"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesGetAllResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Pune"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesGetAllResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesGetAllResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "A building\nAmar Arma Office\nPune MD 4\nIndia"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "616e78b9d74743f59e570b07704157a2"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "4"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "MD"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "purchaseInvoicesPostResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_credit_notes/50309708313411e8a8f11281a7acf536"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesGetAllResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "cej6k566",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:28:58Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesGetAllResCredit_note_lines"
          },
          "type": "array"
        },
        "credit_note_number": {
          "type": "string",
          "x-samplevalue": "SCN-1"
        },
        "credit_note_number_prefix": {
          "type": "string",
          "x-samplevalue": "SCN-"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesGetAllResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "deleted_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-27T09:38:03Z"
        },
        "delivery_address": {
          "$ref": "#/definitions/salesCreditNotesGetAllResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SCN-1"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "50309708313411e8a8f11281a7acf536",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesGetAllResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/salesCreditNotesGetAllResMain_address"
        },
        "main_address_free_form": {
          "type": "string"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "Some notes about the invoice"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "CN000111"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "$ref": "#/definitions/salesCreditNotesGetAllResShipping_tax_rate"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/salesCreditNotesGetAllResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesGetAllResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string"
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/salesCreditNotesGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/salesCreditNotesGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-27T09:38:03Z"
        },
        "void_reason": {
          "type": "string",
          "x-samplevalue": "Temporary Reason"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesCreditNotesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesCreditNotesPutResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        }
      },
      "title": "address",
      "type": "object"
    },
    "financialSettingsTax_scheme": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_schemes/STANDARD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "STANDARD"
        }
      },
      "title": "tax_scheme",
      "type": "object"
    },
    "salesQuotesGetAllResProfit_analysisTotal": {
      "properties": {
        "description": {
          "type": "string"
        },
        "profit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_cost": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_sale": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "total",
      "type": "object"
    },
    "salesQuotesPutResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "percentages",
      "type": "object"
    },
    "salesQuotesGetAllResQuote_linesProduct": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/d351218b9dc74851b97ca81da1f53e36"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "asb second product"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d351218b9dc74851b97ca81da1f53e36"
        }
      },
      "title": "product",
      "type": "object"
    },
    "purchaseCreditNotesGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "swaggerpaths": {
      "x-has-customfields": false,
      "type": "object",
      "title": "paths",
      "properties": {
        "/contacts": {
          "$ref": "#/definitions/swagger-contacts-path"
        }
      }
    },
    "otherPaymentsPostResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "invoicesGetAllResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "paymentsPutResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "ledgerAccountsGetByIdResLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-alias": "accCategory",
          "x-samplevalue": "EXPENSE"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3086675
        }
      },
      "title": "contact",
      "type": "object"
    },
    "invoicesGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_INVOICE"
        }
      },
      "type": "object"
    },
    "transactionsGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "productsPutResCatalog_item_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/catalog_item_types/PRODUCT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Non-stock"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRODUCT"
        }
      },
      "type": "object"
    },
    "addressGetAllResCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "purchaseInvoicesPostResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        },
        "credit_limit": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string"
        },
        "main_address": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "notes": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "type": "object"
    },
    "liveExchangeRatesGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/AUD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Australian Dollar (AUD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUD"
        }
      },
      "title": "currency",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesCreditNotesPostResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_credit_notes/0ea96070b0784d6895a5b9c57e13b9ee"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesPostResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SCN-158"
        },
        "due_date": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0ea96070b0784d6895a5b9c57e13b9ee"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "status": {
          "$ref": "#/definitions/salesCreditNotesPostResTransactionOriginStatus"
        }
      },
      "title": "origin",
      "type": "object"
    },
    "ledgerEntriesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_entries/d0e4a38c4d1f11e695ab0ed51759bcc7"
        },
        "contact": {
          "$ref": "#/definitions/ledgerEntriesGetAllResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:42:52Z"
        },
        "credit": {
          "type": "string",
          "x-samplevalue": "12.0"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-07-18"
        },
        "debit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Burp Castle            New York"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0e4a38c4d1f11e695ab0ed51759bcc7",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "journal_code": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "ledger_account": {
          "$ref": "#/definitions/ledgerEntriesGetAllResLedger_account"
        },
        "tax_rate": {
          "type": "string"
        },
        "transaction": {
          "$ref": "#/definitions/ledgerEntriesGetAllResTransaction"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:42:52Z"
        }
      },
      "title": "ledgerEntriesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesQuotesPutResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "customersPostResDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResShipping_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "shipping_tax_rate",
      "type": "object"
    },
    "invoicesPostResDetailed_tax_analysisTax_rates_breakdown": {
      "properties": {
        "base_currency_goods_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_services_amount": {
          "type": "string"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "goods_amount": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "retail_tax_amount": {
          "type": "string"
        },
        "services_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesPostResDetailed_tax_analysisTax_rates_breakdownTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "otherPaymentsPutResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        }
      },
      "title": "payment_method",
      "type": "object"
    },
    "salesQuotesPostResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "purchaseInvoicesPutResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "main_addressR": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "A building"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "A street"
        },
        "address_type_is": {
          "type": "string"
        },
        "bank_account_is": {
          "type": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "A city"
        },
        "country_group_is": {
          "type": "string"
        },
        "country_is": {
          "type": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Head Office"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "90210"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "CA"
        }
      },
      "title": "main_addressR",
      "type": "object",
      "x-has-customfields": false
    },
    "customersPostResDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/customersPostResDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/customersPostResDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/customersPostResDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "type": "object"
    },
    "otherPaymentsPutResPayment_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "paymentsPutReq": {
      "properties": {
        "allocated_artefacts": {
          "items": {
            "$ref": "#/definitions/paymentsPutReqAllocated_artefacts"
          },
          "type": "array"
        },
        "bank_account_id": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "string"
        },
        "base_currency_currency_charge": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact_id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payment_method_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "payment_on_account": {
          "$ref": "#/definitions/paymentsPutReqPayment_on_account"
        },
        "reference": {
          "type": "string",
          "x-alias": "reference",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "240.0"
        },
        "transaction_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "bankAccountsGetByIdResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/da7370e54d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da7370e54d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 405546
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "servicesGetAllResPurchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae006484d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Service Charge Expense (6850)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae006484d1611e695ab0ed51759bcc7"
        }
      },
      "title": "purchase_ledger_account",
      "type": "object"
    },
    "paymentsPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "bank_account": {
          "$ref": "#/definitions/paymentsPutResBank_account"
        },
        "base_currency_currency_charge": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsPutResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsPutResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "re392"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "4823d330f9bc4fab987af85f53bdc960"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/paymentsPutResLinks"
          },
          "type": "array"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payment_method": {
          "$ref": "#/definitions/paymentsPutResPayment_method"
        },
        "payment_on_account": {
          "$ref": "#/definitions/paymentsPutResPayment_on_account"
        },
        "reference": {
          "type": "string",
          "x-alias": "reference",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "240.0"
        },
        "transaction": {
          "$ref": "#/definitions/paymentsPutResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/paymentsPutResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPutResContactDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "type": "object"
    },
    "bankAccountsPostResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "Checking"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "131241"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "swagger200": {
      "x-has-customfields": false,
      "type": "object",
      "title": "200",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerschema"
        },
        "description": {
          "x-samplevalue": "OK - Everything worked as expected",
          "type": "string"
        }
      }
    },
    "customersPutResProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "ledgerAccountsPutResLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-alias": "accSubCategory",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "type": "object"
    },
    "tax_scheme": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_schemes/STANDARD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Standard"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "STANDARD"
        }
      },
      "title": "tax_scheme",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "tax_schemes"
    },
    "invoicesPutResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "contactsGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "title": "currency",
      "type": "object"
    },
    "invoicesGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3086675
        }
      },
      "type": "object"
    },
    "bulkDownloadRequestQuery": {
      "properties": {
        "anyKey": {
          "type": "string",
          "x-samplevalue": "anyValue"
        }
      },
      "title": "query",
      "type": "object"
    },
    "invoicesPutResInvoice_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].taxName",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "attachmentsGetAllRes": {
      "properties": {
        "$file_path": {
          "type": "string",
          "x-samplevalue": "/attachments/afbd0ea0-3013-4bcd-a760-df098fced96c/file"
        },
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachments/afbd0ea0-3013-4bcd-a760-df098fced96c"
        },
        "attachment_context": {
          "$ref": "#/definitions/attachmentsGetAllResAttachment_context"
        },
        "attachment_context_type": {
          "$ref": "#/definitions/attachmentsGetAllResAttachment_context_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-20T04:28:33Z"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Bill 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Bill 1"
        },
        "file_extension": {
          "type": "string",
          "x-samplevalue": "txt"
        },
        "file_name": {
          "type": "string",
          "x-samplevalue": "bill.txt"
        },
        "file_size": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "id": {
          "type": "string",
          "x-samplevalue": "afbd0ea0-3013-4bcd-a760-df098fced96c",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-20T04:28:33Z"
        },
        "mime_type": {
          "type": "string",
          "x-samplevalue": "text/plain"
        },
        "transaction": {
          "$ref": "#/definitions/attachmentsGetAllResTransaction"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-05-20T04:28:33Z"
        }
      },
      "title": "attachmentsGetAllRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "paymentsPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/83985fbd09ca40de84454c858316f9b2"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "83985fbd09ca40de84454c858316f9b2"
        }
      },
      "type": "object"
    },
    "vendorsGetAllResDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/other_payments/97a6960dcccc11e8a2b70e070fead9d0"
        },
        "bank_account": {
          "$ref": "#/definitions/otherPaymentsGetAllResBank_account"
        },
        "base_currency_total_itc_amount": {
          "type": "string"
        },
        "base_currency_total_itr_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/otherPaymentsGetAllResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-10T20:39:32Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-19",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "43420E71795"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "97a6960dcccc11e8a2b70e070fead9d0",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "part_recoverable": {
          "type": "string"
        },
        "payment_lines": {
          "items": {
            "$ref": "#/definitions/otherPaymentsGetAllResPayment_lines"
          },
          "type": "array"
        },
        "payment_method": {
          "$ref": "#/definitions/otherPaymentsGetAllResPayment_method"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "43420E71795"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "total_itc_amount": {
          "type": "string"
        },
        "total_itr_amount": {
          "type": "string"
        },
        "transaction": {
          "$ref": "#/definitions/otherPaymentsGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/otherPaymentsGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-10T20:39:32Z"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "otherPaymentsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesQuotesPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "salesCreditNotesGetAllResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "journalEntriesPostReqJournal_lines": {
      "properties": {
        "credit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "debit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "details": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "include_on_tax_return": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        }
      },
      "title": "journal_lines",
      "type": "object",
      "required": [
        "credit",
        "debit",
        "ledger_account_id"
      ]
    },
    "transactionsGetByIdResOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/d0d97ff54d1f11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0d97ff54d1f11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 194776
        },
        "links": {
          "items": {
            "$ref": "#/definitions/transactionsGetByIdResOriginLinks"
          },
          "type": "array"
        }
      },
      "title": "origin",
      "type": "object"
    },
    "productsGetByIdResSales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResContactDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "balance_details",
      "type": "object"
    },
    "invoicesPostReqRecurring_invoice": {
      "properties": {
        "frequency": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "on_day_number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "on_week_day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "recurrence_status_identifier": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "recurrence_type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesPutResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "salesCreditNotesPutReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "invoicesPostResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "journalEntriesGetAllResJournal_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "otherPaymentsPostResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "swagger415": {
      "x-has-customfields": false,
      "type": "object",
      "title": "415",
      "properties": {
        "description": {
          "x-samplevalue": "Unsupported media type - The server cannot handle the requested Content-Type",
          "type": "string"
        }
      }
    },
    "vendorsPutReqTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetAllResCredit_note_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "purchaseCreditNotesPostResContactDefault_purchase_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPENSE"
        }
      },
      "title": "ledger_account_group",
      "type": "object"
    },
    "salesCreditNotesPostResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "salesQuotesPostResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "60440"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "otherPaymentsGetAllResPayment_lines": {
      "properties": {
        "details": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "gst_amount": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "df96cd9d8817482dade75c23d4cb9dc7"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/otherPaymentsGetAllResPayment_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "pst_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "payment_lines",
      "type": "object"
    },
    "invoicesPostResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "currency": {
          "$ref": "#/definitions/invoicesPostResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7538ce11fbed432bbe78398d2455ae95"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesPostResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "status": {
          "$ref": "#/definitions/invoicesPostResTransactionOriginStatus"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesQuotesPutResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "vendorsPutResDefault_purchase_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "351.36"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "837.47"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "1188.83"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorsPostResMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/72a60666942a4908bb1c339e0476729c"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "72a60666942a4908bb1c339e0476729c"
        }
      },
      "type": "object"
    },
    "journalEntriesPostResJournal_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "balance_details": {
          "$ref": "#/definitions/journalEntriesPostResJournal_linesLedger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-04-24T07:41:46Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4692 - cevungk5"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "cevungk5"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/journalEntriesPostResJournal_linesLedger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/journalEntriesPostResJournal_linesLedger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4692
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-04-26T08:01:55Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "purchasing",
            "reporting"
          ]
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "invoicesPostResContactProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "salesCreditNotesPostResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "salesQuotesPostResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "purchaseInvoicesPutResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "otherPaymentsPostResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        }
      },
      "title": "payment_method",
      "type": "object"
    },
    "contactPersonsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/da749bab4d1611e695ab0ed51759bcc7"
        },
        "address": {
          "$ref": "#/definitions/contactPersonsGetAllResAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/contactPersonsGetAllResContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "fax": {
          "type": "string",
          "x-samplevalue": "A fax number"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da749bab4d1611e695ab0ed51759bcc7",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_preferred_contact": {
          "type": "string"
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "A job title"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "mobile": {
          "type": "string",
          "x-samplevalue": "A mobile number"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "2145553434"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "title": "contactPersonsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "vendorsPutResMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetByIdResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        }
      },
      "title": "payment_method",
      "type": "object"
    },
    "purchaseCreditNotesPostResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "salesCreditNotesGetAllResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesGetAllResMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesGetAllResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesGetAllResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "749f8c63479111e8a8f11281a7acf536"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "paymentsPostResPayment_on_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsPostResPayment_on_accountContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsPostResPayment_on_accountCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "79415576cb56475f873e3cce3e45e42f"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status": {
          "$ref": "#/definitions/paymentsPostResPayment_on_accountStatus"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "type": "object"
    },
    "servicesGetByIdResSales_ratesService_rate_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/service_rate_types/daf6ae494d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Rate"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf6ae494d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 964767
        }
      },
      "title": "service_rate_type",
      "type": "object"
    },
    "swaggerpost": {
      "x-has-customfields": false,
      "type": "object",
      "title": "post",
      "properties": {
        "summary": {
          "x-samplevalue": "Create a new contact in the CRM service. Contact creation will flow through Cloud Elements to your CRM service. With the exception of the 'id' field, the required fields indicated in the 'Contact' model are those required to create a new contact.",
          "type": "string"
        },
        "operationId": {
          "x-samplevalue": "createContact",
          "type": "string"
        },
        "responses": {
          "$ref": "#/definitions/swaggerresponses"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggerparameters"
          }
        },
        "tags": {
          "x-samplevalue": [
            "contacts"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "customersPutResMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "sravan updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "bbeebb6d30434fc699cd4a033af1ecfa"
        }
      },
      "type": "object"
    },
    "attachmentsPutResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/08bb5f40d81d4a8d81328226f06edac3"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "08bb5f40d81d4a8d81328226f06edac3"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "contactAllocationsGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "salesCreditNotesGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "salesCreditNotesPutResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "salesQuotesPutResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        }
      },
      "title": "address",
      "type": "object"
    },
    "swaggerdefinitions": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definitions",
      "properties": {
        "definition-name": {
          "$ref": "#/definitions/swaggerdefinition-name"
        }
      }
    },
    "salesQuoteGetByIdResShipping_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "title": "shipping_tax_rate",
      "type": "object"
    },
    "contactAllocationsGeetByIdResAllocated_artefactsArtefactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoicesPostResInvoice_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].taxName",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "servicesGetByIdResPurchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae006484d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Service Charge Expense (6850)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae006484d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534886
        }
      },
      "title": "purchase_ledger_account",
      "type": "object"
    },
    "salesQuotesPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_quotes/cb1767c26a20409aa0fc55bc504c4f3b"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesQuotesPutResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:39:35Z"
        },
        "currency": {
          "$ref": "#/definitions/salesQuotesPutResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/salesQuotesPutResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string"
        },
        "detailed_tax_analysis": {
          "$ref": "#/definitions/salesQuotesPutResDetailed_tax_analysis"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SQ-1100"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "expiry_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "cb1767c26a20409aa0fc55bc504c4f3b"
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/salesQuotesPutResMain_address"
        },
        "main_address_free_form": {
          "type": "string"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "notes": {
          "type": "string"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_analysis": {
          "$ref": "#/definitions/salesQuotesPutResProfit_analysis"
        },
        "quote_lines": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResQuote_lines"
          },
          "type": "array"
        },
        "quote_number": {
          "type": "string",
          "x-samplevalue": "SQ-1100"
        },
        "quote_number_prefix": {
          "type": "string",
          "x-samplevalue": "SQ-"
        },
        "reference": {
          "type": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/salesQuotesPutResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions to include on quotes"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:43:09Z"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesQuotesPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPutResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "purchaseInvoicesPutResContactDefault_purchase_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "351.36"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "837.47"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "1188.83"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "contactsGetByIdResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "vendorsPostResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "salesQuotesPutReq": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15"
        },
        "delivery_address": {
          "$ref": "#/definitions/salesQuotesPutReqDelivery_address"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "expiry_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "main_address": {
          "$ref": "#/definitions/salesQuotesPutReqMain_address"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quote_lines": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutReqQuote_lines"
          },
          "type": "array"
        },
        "quote_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quote_number_prefix": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutReqTax_analysis"
          },
          "type": "array"
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesQuotesPutReq",
      "type": "object"
    },
    "productsGetByIdResSales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534861
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResDetailed_tax_analysisTax_rates_breakdownTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "vendorsPutReqMain_contact_person": {
      "properties": {
        "address_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_person_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_preferred_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-alias": "contact.phone",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "swagger-contacts-path": {
      "x-has-customfields": false,
      "type": "object",
      "title": "/contacts",
      "properties": {
        "post": {
          "$ref": "#/definitions/swaggerpost"
        }
      }
    },
    "invoicesPutResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "contactPersonsGetById": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/3041826d4d1b11e695ab0ed51759bcc7"
        },
        "address": {
          "$ref": "#/definitions/contactPersonsGetByIdAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/contactPersonsGetByIdContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "fax": {
          "type": "string",
          "x-samplevalue": "A fax number"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3041826d4d1b11e695ab0ed51759bcc7"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_preferred_contact": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "A job title"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633118
        },
        "mobile": {
          "type": "string",
          "x-samplevalue": "667868678"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "2145553434"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "title": "contactPersonsGetById",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuoteGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3086675
        }
      },
      "title": "contact",
      "type": "object"
    },
    "invoicesPutResContactDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/invoicesPutResContactDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/invoicesPutResContactDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/invoicesPutResContactDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "type": "object"
    },
    "ledgerAccountsPostResLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-alias": "accSubCategory",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "transactionsGetAllResOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_credit_notes/b76b5454537911e8909e0ef868cab1fc"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "salesCreditNotesPostReqCredit_note_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discount_percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "credit_note_lines",
      "type": "object",
      "required": [
        "description",
        "ledger_account_id",
        "unit_price"
      ]
    },
    "customersGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/customers/9415758"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "attachmentsGetAllResAttachment_context": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/bfbe0e05503811e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "bfbe0e05503811e695ab0ed51759bcc7"
        }
      },
      "title": "attachment_context",
      "type": "object"
    },
    "paymentsGetByIdResPayment_on_accountCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "type": "object"
    },
    "invoicesPostResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "paymentsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "allocated_artefacts": {
          "items": {
            "$ref": "#/definitions/paymentsGetAllResAllocated_artefacts"
          },
          "type": "array"
        },
        "bank_account": {
          "$ref": "#/definitions/paymentsGetAllResBank_account"
        },
        "base_currency_currency_charge": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsGetAllResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsGetAllResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "re392"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "4823d330f9bc4fab987af85f53bdc960"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/paymentsGetAllResLinks"
          },
          "type": "array"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payment_method": {
          "$ref": "#/definitions/paymentsGetAllResPayment_method"
        },
        "payment_on_account": {
          "$ref": "#/definitions/paymentsGetAllResPayment_on_account"
        },
        "reference": {
          "type": "string",
          "x-alias": "reference",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "240.0"
        },
        "transaction": {
          "$ref": "#/definitions/paymentsGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/paymentsGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "paymentsGetAllResAllocated_artefactsArtefact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_invoices/f8a37085d2ed11e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SI-100"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f8a37085d2ed11e8a2b70e070fead9d0"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/paymentsGetAllResAllocated_artefactsArtefactLinks"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/97b0ea3ccccc11e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "43420E71795"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "97b0ea3ccccc11e8a2b70e070fead9d0"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10350310
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "salesCreditNotesPutResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/c2a874990b5b11e8a8f11281a7acf536"
        },
        "address": {
          "$ref": "#/definitions/salesCreditNotesPutResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a874990b5b11e8a8f11281a7acf536"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "salesQuotesPutResContactDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/salesQuotesPutResContactDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/salesQuotesPutResContactDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/salesQuotesPutResContactDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "title": "default_sales_ledger_account",
      "type": "object"
    },
    "purchaseInvoicesPutReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutReqInvoice_lines"
          },
          "type": "array"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Some notes about the invoice"
        },
        "part_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutReqTax_analysis"
          },
          "type": "array"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesQuotesPostResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "salesCreditNotesPutResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "purchaseInvoicesPutResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "type": "object"
    },
    "invoiceSettingsDocument_headings": {
      "properties": {
        "delivery_note": {
          "type": "string",
          "x-samplevalue": "Delivery Note"
        },
        "pro_forma": {
          "type": "string",
          "x-samplevalue": "Pro Forma Invoice"
        },
        "remittance_advice": {
          "type": "string",
          "x-samplevalue": "Remittance Advice"
        },
        "sales_corrective_invoice": {
          "type": "string"
        },
        "sales_credit_note": {
          "type": "string",
          "x-samplevalue": "Sales Credit Note"
        },
        "sales_estimate": {
          "type": "string",
          "x-samplevalue": "Sales Estimate"
        },
        "sales_invoice": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "sales_quote": {
          "type": "string",
          "x-samplevalue": "Sales Quote"
        },
        "statement": {
          "type": "string",
          "x-samplevalue": "Statement"
        }
      },
      "title": "document_headings",
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/c2a874990b5b11e8a8f11281a7acf536"
        },
        "address": {
          "$ref": "#/definitions/salesCreditNotesPostResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a874990b5b11e8a8f11281a7acf536"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "purchaseInvoicesPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesPutResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesPutResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "detailed_tax_analysis": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "c701fd96fef94e118305a253f7eb8f1c"
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutResInvoice_lines"
          },
          "type": "array"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Some notes about the invoice"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "part_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "status": {
          "$ref": "#/definitions/purchaseInvoicesPutResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseInvoicesPutResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseInvoicesPutResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:23:01Z"
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPostReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "salesQuotesGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_quotes/e567ff931c664c87a17c5ee4a5c8c1ae"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoicesPostResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "ledgerAccountsGetAllResLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-alias": "accCategory",
          "x-samplevalue": "EXPENSE"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "vendorsPostResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/0d9d5d9183114e31ab1215d6857a02ba"
        },
        "address": {
          "$ref": "#/definitions/vendorsPostResMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/vendorsPostResMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0d9d5d9183114e31ab1215d6857a02ba"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-alias": "contact.phone",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        }
      },
      "type": "object"
    },
    "vendorsPostReqMain_contact_person": {
      "properties": {
        "address_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_person_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_preferred_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-alias": "contact.phone",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "customersPutResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e66cd2a7270e48979a6756039a98aad8"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/customersPutResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact": {
          "$ref": "#/definitions/customersPutResMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/customersPutResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/customersPutResMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "e66cd2a7270e48979a6756039a98aad8"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        }
      },
      "type": "object"
    },
    "invoiceSettingsPrint_statements": {
      "properties": {
        "days_overdue": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "table_of_balances": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "print_statements",
      "type": "object"
    },
    "vendorsPostResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        }
      },
      "type": "object"
    },
    "taxCodesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_regions": {
          "items": {
            "$ref": "#/definitions/taxCodesGetAllResAddress_regions"
          },
          "type": "array"
        },
        "country": {
          "$ref": "#/definitions/taxCodesGetAllResCountry"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "federal_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_rates": {
          "items": {
            "$ref": "#/definitions/taxCodesGetAllResTax_rates"
          },
          "type": "array"
        }
      },
      "title": "taxCodesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseInvoicesPutResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Addison"
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "75254"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        }
      },
      "type": "object"
    },
    "invoicesPutResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "vendorsPostResDefault_purchase_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "type": "object"
    },
    "invoicesPutResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "currency": {
          "$ref": "#/definitions/invoicesPutResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7538ce11fbed432bbe78398d2455ae95"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesPutResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "status": {
          "$ref": "#/definitions/invoicesPutResTransactionOriginStatus"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "product_sales_price_type",
      "type": "object"
    },
    "salesCreditNotesPostResDetailed_tax_analysisTax_rates_breakdownTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "productsGetAllResSales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "customersGetAllResDefault_sales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/5c431741365711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sonali 1.90%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5c431741365711e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "customersPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/customers/9415758"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "taxRatesPostResPercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "percentages",
      "type": "object"
    },
    "attachmentsGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/08bb5f40d81d4a8d81328226f06edac3"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "08bb5f40d81d4a8d81328226f06edac3"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "bankAccountsPutResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e5cc142daf9242628ae87a111964d53c"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/bankAccountsPutResMain_addressAddress_type"
        },
        "bank_account": {
          "$ref": "#/definitions/bankAccountsPutResMain_addressBank_account"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/bankAccountsPutResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/bankAccountsPutResMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:02:50Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e5cc142daf9242628ae87a111964d53c"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:02:50Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/8dee02e8d49143d79823477daa4c9a81"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "8dee02e8d49143d79823477daa4c9a81"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 23504247
        }
      },
      "type": "object"
    },
    "contactsGetByIdResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 405562
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "customersPutResDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "taxProfilesGetAllResAddress_region": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "address_region",
      "type": "object"
    },
    "paymentsGetByIdResPayment_on_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsGetByIdResPayment_on_accountContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsGetByIdResPayment_on_accountCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "79415576cb56475f873e3cce3e45e42f"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1318320
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status": {
          "$ref": "#/definitions/paymentsGetByIdResPayment_on_accountStatus"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResContactDefault_purchase_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "type": "object"
    },
    "paymentsPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/advanced_uk/supplier_expense_payments/13136249"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResDetailed_tax_analysis": {
      "properties": {
        "base_currency_total": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_total_goods_amount": {
          "type": "string"
        },
        "base_currency_total_net": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_total_services_amount": {
          "type": "string"
        },
        "base_currency_total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rates_breakdown": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResDetailed_tax_analysisTax_rates_breakdown"
          },
          "type": "array"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "total_goods_amount": {
          "type": "string"
        },
        "total_net": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "total_retailer_tax": {
          "type": "string"
        },
        "total_services_amount": {
          "type": "string"
        },
        "total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "detailed_tax_analysis",
      "type": "object"
    },
    "paymentsGetAllResPayment_on_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsGetAllResPayment_on_accountContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsGetAllResPayment_on_accountCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "79415576cb56475f873e3cce3e45e42f",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T19:15:21Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status": {
          "$ref": "#/definitions/paymentsGetAllResPayment_on_accountStatus"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "type": "object"
    },
    "servicesGetAllResSales_ratesService_rate_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/service_rate_types/daf6ae494d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Rate"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf6ae494d1611e695ab0ed51759bcc7"
        }
      },
      "title": "service_rate_type",
      "type": "object"
    },
    "salesQuotesPutResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesPutResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "invoicesPutResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesPutResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "string"
        },
        "country": {
          "$ref": "#/definitions/invoicesPutResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesPutResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": "8e86a6a51abd479b9b5f04eb260de22e"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetAllResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "purchaseInvoicesPostResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "transactionsGetByIdResOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_invoices/d0d97ff54d1f11e695ab0ed51759bcc7"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "liveExchangeRatesGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/AUD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Australian Dollar (AUD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "currency",
      "type": "object"
    },
    "ledgerAccountsPostResTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/61cb43572c2e11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "My Tax Rate 20.00%"
        },
        "id": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "61cb43572c2e11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetAllResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/5c431741365711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sonali 1.90%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5c431741365711e8a8f11281a7acf536"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "salesCreditNotesPostResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "purchaseCreditNotesPutResCredit_note_lines": {
      "properties": {
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "35b4149f6819480397f8734ca337c1dd"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseCreditNotesPutResCredit_note_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string"
        },
        "pst_amount": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "purchaseInvoicesPostResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "vendorsGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        }
      },
      "title": "contact",
      "type": "object"
    },
    "contactPersonTypesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "contactPersonTypesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesCreditNotesPostResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "vendorsPostResDefault_purchase_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPENSE"
        }
      },
      "type": "object"
    },
    "customersPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/other_payments/97a6960dcccc11e8a2b70e070fead9d0"
        },
        "bank_account": {
          "$ref": "#/definitions/otherPaymentsGetByIdResBank_account"
        },
        "base_currency_total_itc_amount": {
          "type": "string"
        },
        "base_currency_total_itr_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/otherPaymentsGetByIdResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-10T20:39:32Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-19"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "43420E71795"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "97a6960dcccc11e8a2b70e070fead9d0"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7487328
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "part_recoverable": {
          "type": "string"
        },
        "payment_lines": {
          "items": {
            "$ref": "#/definitions/otherPaymentsGetByIdResPayment_lines"
          },
          "type": "array"
        },
        "payment_method": {
          "$ref": "#/definitions/otherPaymentsGetByIdResPayment_method"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "43420E71795"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "total_itc_amount": {
          "type": "string"
        },
        "total_itr_amount": {
          "type": "string"
        },
        "transaction": {
          "$ref": "#/definitions/otherPaymentsGetByIdResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/otherPaymentsGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-10T20:39:32Z"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "otherPaymentsGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPostResContactDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "ledger_account_type",
      "type": "object"
    },
    "paymentsGetAllResAllocated_artefactsArtefactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_invoices/a97067199f3a11e8863412a7e3287944"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "ledgerAccountsPutResBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "0.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-alias": "tranType",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "objectsMetadata": {
      "properties": {
        "fields": {
          "items": {
            "$ref": "#/definitions/objectsMetadataFields"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "productsPutResSales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "vendorsPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "customersPostResProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "paymentsPostReqPayment_on_account": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "invoicesPutReqRecurring_invoice": {
      "properties": {
        "frequency": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "on_day_number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "on_week_day": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "recurrence_status_identifier": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "recurrence_type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "paymentsGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "paymentsGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/83985fbd09ca40de84454c858316f9b2"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "83985fbd09ca40de84454c858316f9b2"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 18726708
        }
      },
      "type": "object"
    },
    "swaggerresponses": {
      "x-has-customfields": false,
      "type": "object",
      "title": "responses",
      "properties": {
        "200": {
          "$ref": "#/definitions/swagger200"
        },
        "400": {
          "$ref": "#/definitions/swagger400"
        },
        "401": {
          "$ref": "#/definitions/swagger401"
        },
        "403": {
          "$ref": "#/definitions/swagger403"
        },
        "404": {
          "$ref": "#/definitions/swagger404"
        },
        "405": {
          "$ref": "#/definitions/swagger405"
        },
        "406": {
          "$ref": "#/definitions/swagger406"
        },
        "409": {
          "$ref": "#/definitions/swagger409"
        },
        "415": {
          "$ref": "#/definitions/swagger415"
        },
        "500": {
          "$ref": "#/definitions/swagger500"
        },
        "502": {
          "$ref": "#/definitions/swagger502"
        }
      }
    },
    "salesQuotesPostResDetailed_tax_analysisTax_rates_breakdown": {
      "properties": {
        "base_currency_goods_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_services_amount": {
          "type": "string"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "goods_amount": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "retail_tax_amount": {
          "type": "string"
        },
        "services_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesPostResDetailed_tax_analysisTax_rates_breakdownTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        }
      },
      "title": "tax_rates_breakdown",
      "type": "object"
    },
    "salesCreditNotesPutResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "60440"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "salesQuotesPostResContactProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "product_sales_price_type",
      "type": "object"
    },
    "purchaseInvoicesPutResContactDefault_purchase_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPENSE"
        }
      },
      "type": "object"
    },
    "journalEntriesPostReqJournal_code": {
      "properties": {
        "code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "control_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "journal_code_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reserved": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "journal_code",
      "type": "object"
    },
    "paymentsPostResPayment_on_accountContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/d79ea80895ef43bd85d2074fb5d95086"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3490
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesPutResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:17:17Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d79ea80895ef43bd85d2074fb5d95086"
        },
        "origin": {
          "$ref": "#/definitions/purchaseCreditNotesPutResTransactionOrigin"
        },
        "reference": {
          "type": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseCreditNotesPutResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:17:17Z"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "purchaseCreditNotesPutResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "salesQuotesPostResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/salesQuotesPostResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 78
        },
        "credit_limit": {
          "type": "string",
          "x-samplevalue": "482.0"
        },
        "credit_terms_and_conditions": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/salesQuotesPostResContactCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/salesQuotesPostResContactDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_address": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "email": {
          "type": "string"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/salesQuotesPostResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/salesQuotesPostResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "goodada"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/salesQuotesPostResContactProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/salesQuotesPostResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:49:41Z"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "purchaseInvoicesPostResContactDefault_purchase_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "type": "object"
    },
    "bankAccountsPutResMain_contact_person": {
      "properties": {
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "businessesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/businesses/7146dd53a6e6d1d2b0d8c3a1241a3c56"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Cloud Elements"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7146dd53a6e6d1d2b0d8c3a1241a3c56"
        }
      },
      "title": "businessesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesCreditNotesGetAllResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "customersGetByIdResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/a199ec921f844fbea769a0a42cd0e00f"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "A building\nA street\nPune\nMH\n411011\nIndia"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "a199ec921f844fbea769a0a42cd0e00f"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetAllResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "productsPostResSales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesQuotesPutReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "salesCreditNotesGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/fd9b9685488711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re587"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "fd9b9685488711e8a8f11281a7acf536"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "attachmentsGetAllResAttachment_context_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachment_context_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Purchase Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "title": "attachment_context_type",
      "type": "object"
    },
    "customersPostReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "invoicesPostResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResContactProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "product_sales_price_type",
      "type": "object"
    },
    "ledgerAccountsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/de23848576d445b09ca7759bb6867012"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:05:51Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "43454 - cetest"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "cetest"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "cetest (43454)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "gifi_code": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 1000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "de23848576d445b09ca7759bb6867012",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/ledgerAccountsGetAllResLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/ledgerAccountsGetAllResLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "cetest",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 43454
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "$ref": "#/definitions/ledgerAccountsGetAllResTax_rate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:06:11Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "vendorsPutResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResQuote_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "99698337e0384a8db6c66db34d223675"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesQuotesGetAllResQuote_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "product": {
          "$ref": "#/definitions/salesQuotesGetAllResQuote_linesProduct"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesGetAllResQuote_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "quote_lines",
      "type": "object"
    },
    "paymentsGetByIdResPayment_on_accountContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        }
      },
      "type": "object"
    },
    "bankAccountsPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/925edbb6e29d4930a9211808ec04dad3"
        },
        "balance": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "bank_account_details": {
          "$ref": "#/definitions/bankAccountsPutResBank_account_details"
        },
        "bank_account_type": {
          "$ref": "#/definitions/bankAccountsPutResBank_account_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:02:50Z"
        },
        "default_payment_method": {
          "$ref": "#/definitions/bankAccountsPutResDefault_payment_method"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking update (15650)"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "925edbb6e29d4930a9211808ec04dad3"
        },
        "journal_code": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-07-15T04:45:00.241Z"
        },
        "ledger_account": {
          "$ref": "#/definitions/bankAccountsPutResLedger_account"
        },
        "main_address": {
          "$ref": "#/definitions/bankAccountsPutResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/bankAccountsPutResMain_contact_person"
        },
        "nominal_code": {
          "type": "string",
          "x-samplevalue": "15650"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:04:26Z"
        }
      },
      "title": "bankAccountsPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuoteGetByIdResProfit_analysisTotal": {
      "properties": {
        "description": {
          "type": "string"
        },
        "profit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_cost": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_sale": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "total",
      "type": "object"
    },
    "salesQuotesPutResDetailed_tax_analysisTax_rates_breakdownTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "taxCodesGetByIdResAddress_regions": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "address_regions",
      "type": "object"
    },
    "purchaseInvoicesPostResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetByIdResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesGetByIdResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "putBankAccount": {
      "properties": {
        "balance": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "bank_account_details": {
          "$ref": "#/definitions/bank_account_details"
        },
        "bank_account_type_id": {
          "type": "string"
        },
        "default_payment_method_id": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e177c047311c11e8a8f11281a7acf536"
        },
        "journal_code": {
          "$ref": "#/definitions/journal_codeR"
        },
        "ledger_account_id": {
          "type": "string"
        },
        "main_address": {
          "$ref": "#/definitions/main_addressR"
        },
        "main_contact_person": {
          "$ref": "#/definitions/main_contact_personR"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1160
        },
        "transaction_id": {
          "type": "string"
        },
        "transaction_type_id": {
          "type": "string"
        }
      },
      "title": "putBankAccount",
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "customersPostResMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "sravan updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "bbeebb6d30434fc699cd4a033af1ecfa"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesPostResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesQuotesPostResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesPostResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesPostResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesCreditNotesGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_credit_notes/5ad78bb757aa435d8b91e4c5caafbd22"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "purchaseInvoicesPutResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/8dee02e8d49143d79823477daa4c9a81"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3492
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesPutResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "8dee02e8d49143d79823477daa4c9a81"
        },
        "origin": {
          "$ref": "#/definitions/purchaseInvoicesPutResTransactionOrigin"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseInvoicesPutResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "paymentsGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/VENDOR_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR_PAYMENT"
        }
      },
      "type": "object"
    },
    "contactTypesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "contactTypesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseCreditNotesPostReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostReqCredit_note_lines"
          },
          "type": "array",
          "x-required": true
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15",
          "x-required": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "part_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostReqTax_analysis"
          },
          "type": "array"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "purchaseCreditNotesPostReq",
      "type": "object",
      "required": [
        "contact_id",
        "credit_note_lines",
        "date"
      ]
    },
    "companies": {
      "description": "Updates business information",
      "properties": {
        "address_line_1": {
          "description": "The first line of the business address",
          "type": "string"
        },
        "address_line_2": {
          "description": "The first line of the business address",
          "type": "string"
        },
        "city": {
          "description": "The business address town/city",
          "type": "string"
        },
        "country": {
          "description": "The business address country",
          "$ref": "#/definitions/country"
        },
        "created_at": {
          "description": "The datetime when the item was created",
          "format": "date-time",
          "type": "string"
        },
        "displayed_as": {
          "description": "Display text for the item",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the business",
          "type": "string"
        },
        "is_demo": {
          "description": "Indicates whether the business is for demo purposes",
          "type": "boolean"
        },
        "mobile": {
          "description": "The mobile of the business",
          "type": "string"
        },
        "name": {
          "description": "The name of the business",
          "type": "string"
        },
        "postal_code": {
          "description": "The business address postal code/zipcode",
          "type": "string"
        },
        "region": {
          "description": "The business address state/province/region",
          "type": "string"
        },
        "subscriptions": {
          "description": "The business subscriptions",
          "$ref": "#/definitions/subscriptions"
        },
        "telephone": {
          "description": "The telephone of the business",
          "type": "string"
        },
        "updated_at": {
          "description": "The datetime when the item was last updated",
          "format": "date-time",
          "type": "string"
        },
        "website": {
          "description": "The website of the business",
          "type": "string"
        }
      },
      "type": "object"
    },
    "invoicesPostResDetailed_tax_analysisTax_rates_breakdownTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/invoicesPostResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "type": "object"
    },
    "customersPutReq": {
      "properties": {
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "auxiliary_account": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/customersPutReqBank_account_details"
        },
        "contact_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_purchase_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "delivery_address": {
          "$ref": "#/definitions/customersPutReqDelivery_address"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/customersPutReqMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/customersPutReqMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "sravan updated"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/customersPutReqTax_treatment"
        }
      },
      "type": "object"
    },
    "customersPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/customersPutResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/customersPutResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency": {
          "$ref": "#/definitions/customersPutResCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/customersPutResDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "$ref": "#/definitions/customersPutResDefault_sales_tax_rate"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "delivery_address": {
          "$ref": "#/definitions/customersPutResDelivery_address"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "sravan updated"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "ss@slab.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/customersPutResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/customersPutResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/customersPutResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "sravan updated"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/customersPutResProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/customersPutResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:29:27Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPostResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "contactsGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/suppliers/633117"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "purchaseCreditNotesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_credit_notes/f0cfd0506fb740928ca6241f3593151f"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "type": "string"
        },
        "base_currency_total_itr_amount": {
          "type": "string"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:15:21Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostResCredit_note_lines"
          },
          "type": "array"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesPostResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "detailed_tax_analysis": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "01/01/2016 - 100.00"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0cfd0506fb740928ca6241f3593151f"
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "part_recoverable": {
          "type": "string"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/purchaseCreditNotesPostResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "type": "string"
        },
        "total_itr_amount": {
          "type": "string"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseCreditNotesPostResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseCreditNotesPostResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:15:21Z"
        },
        "vendor_reference": {
          "type": "string"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "purchaseCreditNotesPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "paymentsPostReqAllocated_artefacts": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "artefact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesQuotesPostResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "paymentMethodsGetByRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/BANK_OPENING_BALANCE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Bank Opening Balance"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "BANK_OPENING_BALANCE"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "paymentMethodsGetByRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPutResContactDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "ledger_account_type",
      "type": "object"
    },
    "salesCreditNotesPutResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesPutResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesPutResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesPutResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesPutResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "bankAccountsGetByIdResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_contacts/da749bab4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da749bab4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633091
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "taxProfilesGetByIdResTax_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "tax_type",
      "type": "object"
    },
    "contactsGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/3898033"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "transactionsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/d0e408de4d1f11e695ab0ed51759bcc7"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "contact": {
          "$ref": "#/definitions/transactionsGetByIdResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:42:52Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-07-18"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0e408de4d1f11e695ab0ed51759bcc7"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2076537
        },
        "number_of_attachments": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "origin": {
          "$ref": "#/definitions/transactionsGetByIdResOrigin"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "12.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "12.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/transactionsGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-03-19T09:51:22Z"
        }
      },
      "title": "transactionsGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPostResContactDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "percentages",
      "type": "object"
    },
    "invoicesGetAllResTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesGetAllResTax_analysisTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "customersPostResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/a849fad445e74b7d8c8bc29142d3d5a0"
        },
        "address": {
          "$ref": "#/definitions/customersPostResMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/customersPostResMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a849fad445e74b7d8c8bc29142d3d5a0"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "salesQuoteGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_quotes/75fffbff313411e8a8f11281a7acf536"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesQuoteGetByIdResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:30:02Z"
        },
        "currency": {
          "$ref": "#/definitions/salesQuoteGetByIdResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "type": "string"
        },
        "delivery_address_free_form": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SQ-1"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "expiry_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "75fffbff313411e8a8f11281a7acf536"
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1217485
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesQuoteGetByIdResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "type": "string"
        },
        "main_address_free_form": {
          "type": "string"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "Some notes about the quote"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_analysis": {
          "$ref": "#/definitions/salesQuoteGetByIdResProfit_analysis"
        },
        "quote_lines": {
          "items": {
            "$ref": "#/definitions/salesQuoteGetByIdResQuote_lines"
          },
          "type": "array"
        },
        "quote_number": {
          "type": "string",
          "x-samplevalue": "SQ-1"
        },
        "quote_number_prefix": {
          "type": "string",
          "x-samplevalue": "SQ-"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "SQ0001"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "$ref": "#/definitions/salesQuoteGetByIdResShipping_tax_rate"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "status": {
          "$ref": "#/definitions/salesQuoteGetByIdResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesQuoteGetByIdResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions to include on quotes"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T19:47:40Z"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesQuoteGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPutResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactDefault_purchase_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "7200 - General Expenses"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactDefault_purchase_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactDefault_purchase_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7200
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "title": "default_purchase_ledger_account",
      "type": "object"
    },
    "vendorsPostResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "paymentsGetAllResPayment_on_accountCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "invoicesGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/fd7599d2d0344e7aa84daa93f2933a01"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "fd7599d2d0344e7aa84daa93f2933a01"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8947818
        }
      },
      "type": "object"
    },
    "bank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "test1121tt"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "123145678"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "MIDLGB22123"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "GB15 MIDL 4005 1512 3456 78"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "112233"
        }
      },
      "title": "bank_account_details",
      "type": "object",
      "x-has-customfields": false
    },
    "purchaseCreditNotesGetAllResCredit_note_linesProduct": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/afac00786dae11e8863412a7e3287944"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Product 1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "afac00786dae11e8863412a7e3287944"
        }
      },
      "title": "product",
      "type": "object"
    },
    "customersPostResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/a199ec921f844fbea769a0a42cd0e00f"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "A building\nA street\nPune\nMH\n411011\nIndia"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "a199ec921f844fbea769a0a42cd0e00f"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "bank_account_detailsreq": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "test1121tt"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "123145678"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "MIDLGB22123"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "GB15 MIDL 4005 1512 3456 78"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "112233"
        }
      },
      "required": [
        "account_name"
      ],
      "title": "bank_account_detailsreq",
      "type": "object",
      "x-has-customfields": false
    },
    "purchaseCreditNotesPostResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "salesCreditNotesPostResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "60440"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "vendorsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/6dd371275d82432d856134360da45645"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/vendorsGetAllResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/vendorsGetAllResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "currency": {
          "$ref": "#/definitions/vendorsGetAllResCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/vendorsGetAllResDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "qwer"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "6dd371275d82432d856134360da45645",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "links": {
          "items": {
            "$ref": "#/definitions/vendorsGetAllResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/vendorsGetAllResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/vendorsGetAllResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "qwer",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalid",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/vendorsGetAllResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:58Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_quotes/75fffbff313411e8a8f11281a7acf536"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesQuotesGetAllResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:30:02Z"
        },
        "currency": {
          "$ref": "#/definitions/salesQuotesGetAllResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "delivery_address": {
          "$ref": "#/definitions/salesQuotesGetAllResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string",
          "x-samplevalue": "A building\nAmar Arma Office\nPune MD 4\nIndia"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SQ-1"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "expiry_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "75fffbff313411e8a8f11281a7acf536",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesQuotesGetAllResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/salesQuotesGetAllResMain_address"
        },
        "main_address_free_form": {
          "type": "string",
          "x-samplevalue": "A building\nAmar Arma\nPune MD 411022\nIndia"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "Some notes about the quote"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_analysis": {
          "$ref": "#/definitions/salesQuotesGetAllResProfit_analysis"
        },
        "quote_lines": {
          "items": {
            "$ref": "#/definitions/salesQuotesGetAllResQuote_lines"
          },
          "type": "array"
        },
        "quote_number": {
          "type": "string",
          "x-samplevalue": "SQ-1"
        },
        "quote_number_prefix": {
          "type": "string",
          "x-samplevalue": "SQ-"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "SQ0001",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "$ref": "#/definitions/salesQuotesGetAllResShipping_tax_rate"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "status": {
          "$ref": "#/definitions/salesQuotesGetAllResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesQuotesGetAllResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions to include on quotes"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T19:47:40Z"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesQuotesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesQuotesPutResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "invoicesPutResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "addressesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/da7370e54d1611e695ab0ed51759bcc7"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/addressesGetByIdResAddress_type"
        },
        "bank_account": {
          "$ref": "#/definitions/addressesGetByIdResBank_account"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/addressesGetByIdResCountry"
        },
        "country_group": {
          "$ref": "#/definitions/addressesGetByIdResCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da7370e54d1611e695ab0ed51759bcc7"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 405546
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-04-20T21:48:15Z"
        }
      },
      "title": "addressesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "customersPostReq": {
      "properties": {
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "auxiliary_account": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/customersPostReqBank_account_details"
        },
        "contact_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_purchase_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "delivery_address": {
          "$ref": "#/definitions/customersPostReqDelivery_address"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/customersPostReqMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/customersPostReqMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "sravan updated"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/customersPostReqTax_treatment"
        }
      },
      "required": [
        "name",
        "contact_type_ids"
      ],
      "type": "object"
    },
    "customersPutReqTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "customersPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/customersPostResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/customersPostResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency": {
          "$ref": "#/definitions/customersPostResCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/customersPostResDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "$ref": "#/definitions/customersPostResDefault_sales_tax_rate"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "delivery_address": {
          "$ref": "#/definitions/customersPostResDelivery_address"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "sravan updated"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "ss@slab.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/customersPostResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/customersPostResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/customersPostResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "sravan updated"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/customersPostResProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/customersPostResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:29:27Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "customersPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResContactProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "product_sales_price_type",
      "type": "object"
    },
    "salesCreditNotesPutResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_credit_notes/e8bf27f9efb14dbd99afce4251b79e99"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "salesQuotesPostReqQuote_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discount_percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "quote_lines",
      "type": "object",
      "required": [
        "description",
        "ledger_account_id",
        "quantity",
        "unit_price"
      ]
    },
    "salesCreditNotesPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_credit_notes/e8bf27f9efb14dbd99afce4251b79e99"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "paymentsGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "vendorsGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/suppliers/9416189"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "customersPutResDefault_sales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/5c431741365711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sonali 1.90%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5c431741365711e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesPostResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "BulkStatus": {
      "description": "Status of the bulk upload.",
      "type": "object",
      "properties": {
        "batchId": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "message": {
          "type": "string"
        },
        "numOfLeadsProcessed": {
          "description": "Contact/Leads loaded",
          "type": "number"
        },
        "numOfRowsFailed": {
          "description": "Failed count",
          "type": "number"
        },
        "numOfRowsWithWarning": {
          "description": "Contact/Leads that had warnings",
          "type": "number"
        },
        "status": {
          "description": "Status of the bulk job",
          "type": "string"
        }
      }
    },
    "invoicesGetByIdResInvoice_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].taxName",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "type": "object"
    },
    "journalEntriesPostResJournal_linesLedger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPENSE"
        }
      },
      "title": "ledger_account_group",
      "type": "object"
    },
    "invoicesPostResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "paymentsGetAllResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "vendorsGetAllResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        }
      },
      "type": "object"
    },
    "taxCodesGetAllResAddress_regions": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "address_regions",
      "type": "object"
    },
    "purchaseInvoicesPutResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        },
        "credit_limit": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string"
        },
        "main_address": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "notes": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "type": "object"
    },
    "invoicesPostResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_INVOICE"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/21a2be15ffc648dd88e8e5f192fffc97"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3489
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesPostResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:15:21Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "21a2be15ffc648dd88e8e5f192fffc97"
        },
        "origin": {
          "$ref": "#/definitions/purchaseCreditNotesPostResTransactionOrigin"
        },
        "reference": {
          "type": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseCreditNotesPostResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:15:21Z"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "salesQuoteGetByIdResQuote_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7620561c313411e8a8f11281a7acf536"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesQuoteGetByIdResQuote_linesLedger_account"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2062242
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuoteGetByIdResQuote_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "quote_lines",
      "type": "object"
    },
    "invoicesPostReqInvoice_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountAmount",
          "x-samplevalue": "10.0"
        },
        "discount_percentage": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountRate",
          "x-samplevalue": "9.09"
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product_id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_rate_id": {
          "type": "string",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "required": [
        "description",
        "ledger_account_id",
        "unit_price"
      ],
      "type": "object"
    },
    "salesQuotesPostResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "invoicesPostResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_INVOICE"
        }
      },
      "type": "object"
    },
    "salesQuotesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_quotes/fd737296763147749d4a8050f96d83d6"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesQuotesPostResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:38:32Z"
        },
        "currency": {
          "$ref": "#/definitions/salesQuotesPostResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/salesQuotesPostResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string"
        },
        "detailed_tax_analysis": {
          "$ref": "#/definitions/salesQuotesPostResDetailed_tax_analysis"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SQ-1099"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "expiry_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "fd737296763147749d4a8050f96d83d6"
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/salesQuotesPostResMain_address"
        },
        "main_address_free_form": {
          "type": "string"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "notes": {
          "type": "string"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_analysis": {
          "$ref": "#/definitions/salesQuotesPostResProfit_analysis"
        },
        "quote_lines": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResQuote_lines"
          },
          "type": "array"
        },
        "quote_number": {
          "type": "string",
          "x-samplevalue": "SQ-1099"
        },
        "quote_number_prefix": {
          "type": "string",
          "x-samplevalue": "SQ-"
        },
        "reference": {
          "type": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/salesQuotesPostResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions to include on quotes"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:38:32Z"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesQuotesPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPostReq": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15",
          "x-required": true
        },
        "delivery_address": {
          "$ref": "#/definitions/salesQuotesPostReqDelivery_address"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "expiry_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15",
          "x-required": true
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "main_address": {
          "$ref": "#/definitions/salesQuotesPostReqMain_address"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quote_lines": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostReqQuote_lines"
          },
          "type": "array",
          "x-required": true
        },
        "quote_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quote_number_prefix": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostReqTax_analysis"
          },
          "type": "array"
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesQuotesPostReq",
      "type": "object",
      "required": [
        "contact_id",
        "date",
        "expiry_date",
        "quote_lines"
      ]
    },
    "purchaseCreditNotesPutResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        },
        "credit_limit": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string"
        },
        "main_address": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "notes": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "artefactStatusesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "artefactStatusesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "paymentsGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/83985fbd09ca40de84454c858316f9b2"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "83985fbd09ca40de84454c858316f9b2"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "bankAccountTypesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_types/CHECKING"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECKING",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "bankAccountTypesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "journalEntriesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/journals/bb7b5cbd4097401bbc112a1002cdf22e"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:02:07Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "A journal description"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "bb7b5cbd4097401bbc112a1002cdf22e"
        },
        "journal_code": {
          "type": "string"
        },
        "journal_lines": {
          "items": {
            "$ref": "#/definitions/journalEntriesPostResJournal_lines"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "transaction": {
          "$ref": "#/definitions/journalEntriesPostResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/journalEntriesPostResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:02:07Z"
        }
      },
      "title": "journalEntriesPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "journalEntriesPostReq": {
      "properties": {
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15",
          "x-required": true
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "journal_code": {
          "$ref": "#/definitions/journalEntriesPostReqJournal_code"
        },
        "journal_lines": {
          "items": {
            "$ref": "#/definitions/journalEntriesPostReqJournal_lines"
          },
          "type": "array",
          "x-required": true
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "total": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "journalEntriesPostReq",
      "type": "object",
      "required": [
        "date",
        "journal_lines",
        "reference"
      ]
    },
    "purchaseInvoicesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "c701fd96fef94e118305a253f7eb8f1c"
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesGetByIdResInvoice_lines"
          },
          "type": "array"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 197348
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesGetByIdResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Some notes about the invoice"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "part_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "status": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:23:01Z"
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16
        }
      },
      "type": "object"
    },
    "invoicesGetAllResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "swaggerparameters": {
      "x-has-customfields": false,
      "title": "parameters",
      "properties": {
        "schema": {
          "$ref": "#/definitions/swaggerparametersschema"
        },
        "in": {
          "x-samplevalue": "header",
          "type": "string"
        },
        "name": {
          "x-samplevalue": "Authorization",
          "type": "string"
        },
        "description": {
          "x-samplevalue": "The authorization tokens. The format for the header value is 'Element &lt;token&gt;, User &lt;user secret&gt;'",
          "type": "string"
        },
        "type": {
          "x-samplevalue": "string",
          "type": "string"
        },
        "required": {
          "x-samplevalue": true,
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "contactPersonsGetByIdAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 405562
        }
      },
      "title": "address",
      "type": "object"
    },
    "main_contact_personR": {
      "properties": {
        "email": {
          "type": "string",
          "x-samplevalue": "An@emailaddress.com",
          "x-sub-format": "email"
        },
        "fax": {
          "type": "string",
          "x-samplevalue": "A fax number"
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "A job title"
        },
        "mobile": {
          "type": "string",
          "x-samplevalue": "A mobile number"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "A person"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "A telephone number"
        }
      },
      "title": "main_contact_personR",
      "type": "object",
      "x-has-customfields": false
    },
    "customersPutResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResProfit_analysisTotal": {
      "properties": {
        "description": {
          "type": "string"
        },
        "profit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_cost": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_sale": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "total",
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        }
      },
      "title": "address",
      "type": "object"
    },
    "paymentsGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "bankAccountTypesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_types/CHECKING"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECKING"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "bankAccountTypesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "vendorsGetAllResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/0d9d5d9183114e31ab1215d6857a02ba"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0d9d5d9183114e31ab1215d6857a02ba"
        }
      },
      "type": "object"
    },
    "invoicesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/invoicesGetByIdResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:38:09Z"
        },
        "currency": {
          "$ref": "#/definitions/invoicesGetByIdResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/invoicesGetByIdResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Line 1"
        },
        "delivery_performance_date": {
          "type": "string",
          "x-alias": "shipDate",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "7538ce11fbed432bbe78398d2455ae95"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/invoicesGetByIdResInvoice_lines"
          },
          "type": "array"
        },
        "invoice_number": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "invoice_number_prefix": {
          "type": "string",
          "x-samplevalue": "SI-"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1372447
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesGetByIdResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesGetByIdResMain_address"
        },
        "main_address_free_form": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "original_quote_estimate": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingTaxAmount",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string",
          "x-alias": "shippingTaxRate"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingCost",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/invoicesGetByIdResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/invoicesGetByIdResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions for invoices"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "discountAmount",
          "x-samplevalue": "10.0"
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/invoicesGetByIdResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/invoicesGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        },
        "void_reason": {
          "type": "string",
          "x-samplevalue": "Temporary Reason"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "liveExchangeRatesGetByIdResBase_currency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "title": "base_currency",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "invoicesPostResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/3086675"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "attachmentsGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/08bb5f40d81d4a8d81328226f06edac3"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "08bb5f40d81d4a8d81328226f06edac3"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "purchaseCreditNotesPostResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "invoicesPutResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "contactAllocationsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "allocated_artefacts": {
          "items": {
            "$ref": "#/definitions/contactAllocationsGetAllResAllocated_artefacts"
          },
          "type": "array"
        },
        "contact": {
          "$ref": "#/definitions/contactAllocationsGetAllResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:12:43Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15"
        },
        "deleted_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:12:43Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/contactAllocationsGetAllResLinks"
          },
          "type": "array"
        },
        "transaction": {
          "$ref": "#/definitions/contactAllocationsGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/contactAllocationsGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:12:43Z"
        }
      },
      "title": "contactAllocationsGetAllRes",
      "type": "object"
    },
    "customersPutReqMain_contact_person": {
      "properties": {
        "address_id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "string"
        },
        "contact_person_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_preferred_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "invoicesPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "customersGetByIdResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "vendorsPutResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/72a60666942a4908bb1c339e0476729c"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/vendorsPutResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact": {
          "$ref": "#/definitions/vendorsPutResMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/vendorsPutResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/vendorsPutResMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "72a60666942a4908bb1c339e0476729c"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        }
      },
      "type": "object"
    },
    "taxProfilesGetAllResTax_return_frequency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "tax_return_frequency",
      "type": "object"
    },
    "attachmentsPutRes": {
      "properties": {
        "$file_path": {
          "type": "string",
          "x-samplevalue": "/attachments/e88939fa-a1a8-4104-98c8-16c7454c7860/file"
        },
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachments/e88939fa-a1a8-4104-98c8-16c7454c7860"
        },
        "attachment_context": {
          "$ref": "#/definitions/attachmentsPutResAttachment_context"
        },
        "attachment_context_type": {
          "$ref": "#/definitions/attachmentsPutResAttachment_context_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T13:00:31Z"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "CE Plan Desc"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "CE Plan Desc"
        },
        "file_extension": {
          "type": "string",
          "x-samplevalue": "txt"
        },
        "file_name": {
          "type": "string",
          "x-samplevalue": "pdfToText"
        },
        "file_size": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 492184
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e88939fa-a1a8-4104-98c8-16c7454c7860"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T13:10:46Z"
        },
        "mime_type": {
          "type": "string",
          "x-samplevalue": "text/plain"
        },
        "transaction": {
          "$ref": "#/definitions/attachmentsPutResTransaction"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T13:10:46Z"
        }
      },
      "title": "attachmentsPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "contactAllocationsGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "links",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "address",
      "type": "object"
    },
    "salesQuotesPostResProfit_analysis": {
      "properties": {
        "total": {
          "$ref": "#/definitions/salesQuotesPostResProfit_analysisTotal"
        }
      },
      "title": "profit_analysis",
      "type": "object"
    },
    "invoicesPostResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "invoicesPostReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesPostResMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesPostResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesPostResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e57ccaafee4c4d1580826d567e74f51f"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "bankAccountsGetByIdResLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/da71afba4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da71afba4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534837
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "paymentsGetAllResPayment_on_accountStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "vendorsGetByIdResDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534891
        }
      },
      "type": "object"
    },
    "ledgerAccountsPutReq": {
      "properties": {
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "cetest"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "gifi_code": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 1000
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ledger_account_classification_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "cetest"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 43454
        },
        "non_recoverable_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "recoverable_percentage": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "bankAccountsPutResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "journalEntriesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/journals/ace893af313111e8a8f11281a7acf536"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:10:05Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "A journal description"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ace893af313111e8a8f11281a7acf536"
        },
        "journal_code": {
          "type": "string"
        },
        "journal_lines": {
          "items": {
            "$ref": "#/definitions/journalEntriesGetByIdResJournal_lines"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 215161
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "transaction": {
          "$ref": "#/definitions/journalEntriesGetByIdResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/journalEntriesGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:10:05Z"
        }
      },
      "title": "journalEntriesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "invoicesPutResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/fd7599d2d0344e7aa84daa93f2933a01"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3484
        },
        "contact": {
          "$ref": "#/definitions/invoicesPutResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "fd7599d2d0344e7aa84daa93f2933a01"
        },
        "origin": {
          "$ref": "#/definitions/invoicesPutResTransactionOrigin"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/invoicesPutResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        }
      },
      "type": "object"
    },
    "attachmentsGetByIdResAttachment_context_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachment_context_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Purchase Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "title": "attachment_context_type",
      "type": "object"
    },
    "purchaseCreditNotesPostResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "salesCreditNotesPutResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "percentages",
      "type": "object"
    },
    "ledgerAccountsPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/de23848576d445b09ca7759bb6867012"
        },
        "balance_details": {
          "$ref": "#/definitions/ledgerAccountsPutResBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:05:51Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "43454 - cetest"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "cetest"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "cetest (43454)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "gifi_code": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 1000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "de23848576d445b09ca7759bb6867012"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/ledgerAccountsPutResLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/ledgerAccountsPutResLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "cetest"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 43454
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "$ref": "#/definitions/ledgerAccountsPutResTax_rate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:06:11Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesGetAllResQuote_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "salesCreditNotesGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "title": "currency",
      "type": "object"
    },
    "customersPostReqBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "A building"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "Amar Arma"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesGetAllResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Pune"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesGetAllResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesGetAllResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "A building\nAmar Arma\nPune MD 411022\nIndia"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "fa3e1b5ada6544ba8419936885a975eb"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "411022"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "MD"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "taxRatesPutResPercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "percentages",
      "type": "object"
    },
    "purchaseCreditNotesPutResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "salesCreditNotesPostReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "servicesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/services/226445b169d011e8863412a7e3287944"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-06-06T21:25:28Z"
        },
        "deactivatable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string",
          "x-samplevalue": "that is Rapha's cost for testing this thing"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "that is Rapha's cost for testing this thing"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "226445b169d011e8863412a7e3287944",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "raphinha",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "some note will go here"
        },
        "purchase_description": {
          "type": "string",
          "x-samplevalue": "some description"
        },
        "purchase_ledger_account": {
          "$ref": "#/definitions/servicesGetAllResPurchase_ledger_account"
        },
        "purchase_tax_rate": {
          "type": "string"
        },
        "sales_ledger_account": {
          "$ref": "#/definitions/servicesGetAllResSales_ledger_account"
        },
        "sales_rates": {
          "items": {
            "$ref": "#/definitions/servicesGetAllResSales_rates"
          },
          "type": "array"
        },
        "sales_tax_rate": {
          "$ref": "#/definitions/servicesGetAllResSales_tax_rate"
        },
        "source_guid": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-06-06T21:25:28Z"
        },
        "used_on_recurring_invoice": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "usual_supplier": {
          "$ref": "#/definitions/servicesGetAllResUsual_supplier"
        }
      },
      "title": "servicesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "contactsGetByIdResDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534891
        }
      },
      "title": "default_purchase_ledger_account",
      "type": "object"
    },
    "contactAllocationsGeetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "transactionsGetAllResOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/d0d97ff54d1f11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0d97ff54d1f11e695ab0ed51759bcc7"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/transactionsGetAllResOriginLinks"
          },
          "type": "array"
        }
      },
      "title": "origin",
      "type": "object"
    },
    "customersGetAllResDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_credit_notes/50309708313411e8a8f11281a7acf536"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "customersGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "taxCodesGetAllResTax_rates": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "tax_rates",
      "type": "object"
    },
    "taxProfilesGetAllResTax_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "tax_type",
      "type": "object"
    },
    "vendorsPostResDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/vendorsPostResDefault_purchase_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "7200 - General Expenses"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/vendorsPostResDefault_purchase_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/vendorsPostResDefault_purchase_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7200
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "type": "object"
    },
    "otherPaymentsPutResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/487b93a76fee421ab94a7bbca28a0fe1"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "487b93a76fee421ab94a7bbca28a0fe1"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "salesQuotesGetAllResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "taxRatesGetByIdResPercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "percentages",
      "type": "object"
    },
    "purchaseCreditNotesPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_credit_notes/f0cfd0506fb740928ca6241f3593151f"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "customersPostResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResContactDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "ledger_account_type",
      "type": "object"
    },
    "purchaseInvoicesGetAllResInvoice_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "b95450df98e442a1832843a77abf6d47"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResInvoice_linesLedger_account"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResInvoice_linesProduct"
        },
        "pst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "servicesGetAllResSales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        }
      },
      "title": "sales_ledger_account",
      "type": "object"
    },
    "invoicesGetByIdResTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesGetByIdResTax_analysisTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "journalEntriesGetByIdResJournal_lines": {
      "properties": {
        "bank_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cleared": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "credit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "debit": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "details": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ace97393313111e8a8f11281a7acf536"
        },
        "include_on_tax_return": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/journalEntriesGetByIdResJournal_linesLedger_account"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "journal_lines",
      "type": "object"
    },
    "salesCreditNotesPostResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "transactionsGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "invoicesGetAllResInvoice_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountAmount",
          "x-samplevalue": "10.0"
        },
        "discount_percentage": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountRate",
          "x-samplevalue": "9.09"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "eab0b0ba7e4442bca626f091d48150b7"
        },
        "ledger_account": {
          "$ref": "#/definitions/invoicesGetAllResInvoice_linesLedger_account"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesGetAllResInvoice_linesTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "c701fd96fef94e118305a253f7eb8f1c",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesGetAllResInvoice_lines"
          },
          "type": "array"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesGetAllResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Some notes about the invoice"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "part_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "status": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseInvoicesGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:23:01Z"
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPostResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "percentages",
      "type": "object"
    },
    "bankAccountsGetAllResBank_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_types/CHECKING"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECKING"
        }
      },
      "title": "bank_account_type",
      "type": "object"
    },
    "salesQuotesPutResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "salesQuotesPostResContactDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "balance_details",
      "type": "object"
    },
    "purchaseInvoicesPutResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/633117"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "invoiceSettingsLine_item_titles": {
      "properties": {
        "description": {
          "type": "string",
          "x-samplevalue": "Description"
        },
        "discount": {
          "type": "string",
          "x-samplevalue": "Discount"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "Qty/Hrs"
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "Price/Rate"
        }
      },
      "title": "line_item_titles",
      "type": "object"
    },
    "salesQuoteGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_quotes/75fffbff313411e8a8f11281a7acf536"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoicesPostResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResInvoice_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountAmount",
          "x-samplevalue": "10.0"
        },
        "discount_percentage": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountRate",
          "x-samplevalue": "9.09"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "eab0b0ba7e4442bca626f091d48150b7"
        },
        "ledger_account": {
          "$ref": "#/definitions/invoicesGetByIdResInvoice_linesLedger_account"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2333425
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesGetByIdResInvoice_linesTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactDefault_purchase_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "title": "ledger_account_type",
      "type": "object"
    },
    "customersPostResDefault_sales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/5c431741365711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sonali 1.90%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5c431741365711e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "productsPostReq": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "catalog_item_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "cost_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-samplevalue": "0.0"
        },
        "description": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-samplevalue": "Product 1 updated"
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "200715093440470-271"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_description": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-samplevalue": "string"
        },
        "purchase_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_tax_rate_id": {
          "type": "string",
          "x-alias": "purchaseTaxCode",
          "x-samplevalue": "string"
        },
        "sales_ledger_account_id": {
          "type": "string",
          "x-alias": "cogsAccount",
          "x-samplevalue": "string"
        },
        "sales_prices": {
          "items": {
            "$ref": "#/definitions/productsPostReqSales_prices"
          },
          "type": "array"
        },
        "sales_tax_rate_id": {
          "type": "string",
          "x-alias": "salesTaxCode",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "usual_supplier_id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "sales_ledger_account_id",
        "purchase_ledger_account_id",
        "description"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/8dee02e8d49143d79823477daa4c9a81"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3492
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesPostResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "8dee02e8d49143d79823477daa4c9a81"
        },
        "origin": {
          "$ref": "#/definitions/purchaseInvoicesPostResTransactionOrigin"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseInvoicesPostResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        }
      },
      "type": "object"
    },
    "productsPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/22ff40a429564bd3a7e0ada89e74ac56"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "catalog_item_type": {
          "$ref": "#/definitions/productsPostResCatalog_item_type"
        },
        "cost_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-samplevalue": "0.0"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "deactivatable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-samplevalue": "Product 1 updated"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Product 1 updated"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "22ff40a429564bd3a7e0ada89e74ac56"
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "200715093440470-271"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_description": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-samplevalue": "string"
        },
        "purchase_ledger_account": {
          "$ref": "#/definitions/productsPostResPurchase_ledger_account"
        },
        "purchase_tax_rate": {
          "type": "string"
        },
        "sales_ledger_account": {
          "$ref": "#/definitions/productsPostResSales_ledger_account"
        },
        "sales_prices": {
          "items": {
            "$ref": "#/definitions/productsPostResSales_prices"
          },
          "type": "array"
        },
        "sales_tax_rate": {
          "$ref": "#/definitions/productsPostResSales_tax_rate"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:50Z"
        },
        "used_on_recurring_invoice": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "usual_supplier": {
          "$ref": "#/definitions/productsPostResUsual_supplier"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "bankAccountsPostResDefault_payment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        }
      },
      "title": "default_payment_method",
      "type": "object"
    },
    "customersPutResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_credit_notes/f0cfd0506fb740928ca6241f3593151f"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "bankAccountsPutResDefault_payment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        }
      },
      "title": "default_payment_method",
      "type": "object"
    },
    "customersGetByIdResProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 964764
        }
      },
      "type": "object"
    },
    "invoicesPutReqInvoice_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountAmount",
          "x-samplevalue": "10.0"
        },
        "discount_percentage": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountRate",
          "x-samplevalue": "9.09"
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product_id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_rate_id": {
          "type": "string",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/3041826d4d1b11e695ab0ed51759bcc7"
        },
        "address": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3041826d4d1b11e695ab0ed51759bcc7"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "2145553434"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "salesQuotesPutResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "Object": {
      "description": "Fields for the object. There will be fields associated with an Object, which are not all described here.",
      "properties": {
        "objectField": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "invoicesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/invoicesGetAllResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:38:09Z"
        },
        "currency": {
          "$ref": "#/definitions/invoicesGetAllResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "deleted_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-19T07:09:28Z"
        },
        "delivery_address": {
          "$ref": "#/definitions/invoicesGetAllResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Line 1"
        },
        "delivery_performance_date": {
          "type": "string",
          "x-alias": "shipDate",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "7538ce11fbed432bbe78398d2455ae95",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/invoicesGetAllResInvoice_lines"
          },
          "type": "array"
        },
        "invoice_number": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "invoice_number_prefix": {
          "type": "string",
          "x-samplevalue": "SI-"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesGetAllResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesGetAllResMain_address"
        },
        "main_address_free_form": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "original_quote_estimate": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingTaxAmount",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string",
          "x-alias": "shippingTaxRate"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingCost",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/invoicesGetAllResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/invoicesGetAllResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions for invoices"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "discountAmount",
          "x-samplevalue": "10.0"
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/invoicesGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/invoicesGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        },
        "void_reason": {
          "type": "string",
          "x-samplevalue": "Temporary Reason"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPutResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "salesCreditNotesPutReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "customersPostResDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "vendorsPutReqBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "businessesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/businesses/7146dd53a6e6d1d2b0d8c3a1241a3c56"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "Brighton Blvd"
        },
        "address_line_2": {
          "type": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Denver"
        },
        "country": {
          "$ref": "#/definitions/businessesGetByIdResCountry"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:40Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Cloud Elements"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7146dd53a6e6d1d2b0d8c3a1241a3c56"
        },
        "is_demo": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-samplevalue": "1234567891"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Cloud Elements"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "80216"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "CO"
        },
        "subscriptions": {
          "items": {
            "$ref": "#/definitions/businessesGetByIdResSubscriptions"
          },
          "type": "array"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "866.830.3456"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-14T20:49:37Z"
        },
        "user_roles": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "business_owner",
            "system_manager"
          ]
        },
        "website": {
          "type": "string",
          "x-samplevalue": "https://idonthaveany.com"
        }
      },
      "title": "businessesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPostResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "customersGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/customersGetAllResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/customersGetAllResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency": {
          "$ref": "#/definitions/customersGetAllResCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/customersGetAllResDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "$ref": "#/definitions/customersGetAllResDefault_sales_tax_rate"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "delivery_address": {
          "$ref": "#/definitions/customersGetAllResDelivery_address"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "ss@slab.com",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "bbeebb6d30434fc699cd4a033af1ecfa",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "links": {
          "items": {
            "$ref": "#/definitions/customersGetAllResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/customersGetAllResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/customersGetAllResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "sravan updated",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/customersGetAllResProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            "=",
            ">=",
            "<="
          ]
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/customersGetAllResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:29:27Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPutResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "contactsGetByIdResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "salesQuotesPostResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesPostResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "salesCreditNotesPostReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostReqCredit_note_lines"
          },
          "type": "array",
          "x-required": true
        },
        "credit_note_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "credit_note_number_prefix": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15",
          "x-required": true
        },
        "delivery_address": {
          "$ref": "#/definitions/salesCreditNotesPostReqDelivery_address"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "main_address": {
          "$ref": "#/definitions/salesCreditNotesPostReqMain_address"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostReqTax_analysis"
          },
          "type": "array"
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesCreditNotesPostReq",
      "type": "object",
      "required": [
        "contact_id",
        "credit_note_lines",
        "date"
      ]
    },
    "invoicesPostResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_credit_notes/0ea96070b0784d6895a5b9c57e13b9ee"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesPostResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T19:21:03Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResCredit_note_lines"
          },
          "type": "array"
        },
        "credit_note_number": {
          "type": "string",
          "x-samplevalue": "SCN-158"
        },
        "credit_note_number_prefix": {
          "type": "string",
          "x-samplevalue": "SCN-"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesPostResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/salesCreditNotesPostResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string"
        },
        "detailed_tax_analysis": {
          "$ref": "#/definitions/salesCreditNotesPostResDetailed_tax_analysis"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SCN-158"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0ea96070b0784d6895a5b9c57e13b9ee"
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/salesCreditNotesPostResMain_address"
        },
        "main_address_free_form": {
          "type": "string"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/salesCreditNotesPostResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string"
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/salesCreditNotesPostResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/salesCreditNotesPostResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T19:21:03Z"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesCreditNotesPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostResContactDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactDefault_purchase_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "7200 - General Expenses"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactDefault_purchase_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactDefault_purchase_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7200
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "type": "object"
    },
    "salesQuotesPutResQuote_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "salesCreditNotesPostResCredit_note_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "contactAllocationsGetAllResAllocated_artefacts": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "artefact": {
          "$ref": "#/definitions/contactAllocationsGetAllResAllocated_artefactsArtefact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "allocated_artefacts",
      "type": "object"
    },
    "customersPostResMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "invoicesPutResContactDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "vendorsGetAllResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/72a60666942a4908bb1c339e0476729c"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "72a60666942a4908bb1c339e0476729c"
        }
      },
      "type": "object"
    },
    "ledgerEntriesGetAllResLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadf8d694d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts Payable (2000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadf8d694d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "customersPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/customers/9415758"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "invoicesPutResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "taxCode",
              "path": "tax_analysis[*].tax_rate.id | [0]"
            }
          ],
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "productsGetByIdResUsual_supplier": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/f8b5bc8bd1e311e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Vendor John (234567)"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "f8b5bc8bd1e311e8a2b70e070fead9d0"
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "taxCode",
              "path": "tax_analysis[*].tax_rate.id | [0]"
            }
          ],
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "type": "object"
    },
    "salesQuotesPutResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "productsPostResUsual_supplier": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/f8b5bc8bd1e311e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Vendor John (234567)"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "f8b5bc8bd1e311e8a2b70e070fead9d0"
        }
      },
      "type": "object"
    },
    "contactAllocationsGetAllResAllocated_artefactsArtefact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/contactAllocationsGetAllResAllocated_artefactsArtefactLinks"
          },
          "type": "array"
        }
      },
      "title": "artefact",
      "type": "object"
    },
    "purchaseInvoicesPostResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "bankAccountsPostResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e5cc142daf9242628ae87a111964d53c"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/bankAccountsPostResMain_addressAddress_type"
        },
        "bank_account": {
          "$ref": "#/definitions/bankAccountsPostResMain_addressBank_account"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/bankAccountsPostResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/bankAccountsPostResMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:02:50Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e5cc142daf9242628ae87a111964d53c"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:02:50Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "purchaseCreditNotesPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "invoicesPostResContactDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "journalEntriesGetByIdResJournal_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/da71afba4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da71afba4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534837
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "salesQuotesPutResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesPutResMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesPutResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesPutResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c3931a3ff8474d1788c67cabffc7012d"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "vendorsGetByIdResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "purchaseCreditNotesPutReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutReqCredit_note_lines"
          },
          "type": "array"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "part_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutReqTax_analysis"
          },
          "type": "array"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "purchaseCreditNotesPutReq",
      "type": "object"
    },
    "productsPutResPurchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-alias": "assetAccount",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "purchaseInvoicesPostResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "type": "object"
    },
    "customersPutReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_credit_notes/12b4c03f568e4cd98febdd9a02456518"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "type": "string"
        },
        "base_currency_total_itr_amount": {
          "type": "string"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:17:17Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutResCredit_note_lines"
          },
          "type": "array"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesPutResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "detailed_tax_analysis": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "01/01/2016 - 100.00"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "12b4c03f568e4cd98febdd9a02456518"
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "part_recoverable": {
          "type": "string"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/purchaseCreditNotesPutResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "type": "string"
        },
        "total_itr_amount": {
          "type": "string"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseCreditNotesPutResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseCreditNotesPutResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:18:03Z"
        },
        "vendor_reference": {
          "type": "string"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "purchaseCreditNotesPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPutResContactProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "bankAccountsGetByIdResBank_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_types/CHECKING"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECKING"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "bank_account_type",
      "type": "object"
    },
    "addressGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "ledgerAccountsPostResLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-alias": "accCategory",
          "x-samplevalue": "EXPENSE"
        }
      },
      "type": "object"
    },
    "vendorsPostResMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "invoicesGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/fd7599d2d0344e7aa84daa93f2933a01"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "fd7599d2d0344e7aa84daa93f2933a01"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResCredit_note_lines": {
      "properties": {
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "291213c5db9311e8a2b70e070fead9d0"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseCreditNotesGetByIdResCredit_note_linesLedger_account"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3468199
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "product": {
          "type": "string"
        },
        "pst_amount": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "customersGetAllResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/a199ec921f844fbea769a0a42cd0e00f"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "A building\nA street\nPune\nMH\n411011\nIndia"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "a199ec921f844fbea769a0a42cd0e00f"
        }
      },
      "type": "object"
    },
    "invoicesPutResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "invoicesPutResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "contactsGetAllResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "invoicesPutReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "productSalesPriceTypesPostReq": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Cherry"
        }
      },
      "required": [
        "active",
        "name"
      ],
      "title": "productSalesPriceTypesPostReq",
      "type": "object"
    },
    "invoicesPostResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "productSalesPriceTypesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/07888bf41e83461fb3f7d520c2b97e00"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:30:29Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "qwerty"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "07888bf41e83461fb3f7d520c2b97e00"
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "qwerty"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:30:29Z"
        }
      },
      "title": "productSalesPriceTypesPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPutResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "salesCreditNotesGetByIdResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "invoicesGetAllResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesGetAllResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "string"
        },
        "country": {
          "$ref": "#/definitions/invoicesGetAllResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesGetAllResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": "8e86a6a51abd479b9b5f04eb260de22e"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "productsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/22ff40a429564bd3a7e0ada89e74ac56"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "catalog_item_type": {
          "$ref": "#/definitions/productsGetAllResCatalog_item_type"
        },
        "cost_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-samplevalue": "0.0"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "deactivatable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-samplevalue": "Product 1 updated",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Product 1 updated"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "22ff40a429564bd3a7e0ada89e74ac56",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "200715093440470-271",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_description": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-samplevalue": "string"
        },
        "purchase_ledger_account": {
          "$ref": "#/definitions/productsGetAllResPurchase_ledger_account"
        },
        "purchase_tax_rate": {
          "type": "string"
        },
        "sales_ledger_account": {
          "$ref": "#/definitions/productsGetAllResSales_ledger_account"
        },
        "sales_prices": {
          "items": {
            "$ref": "#/definitions/productsGetAllResSales_prices"
          },
          "type": "array"
        },
        "sales_tax_rate": {
          "$ref": "#/definitions/productsGetAllResSales_tax_rate"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:50Z"
        },
        "used_on_recurring_invoice": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "usual_supplier": {
          "$ref": "#/definitions/productsGetAllResUsual_supplier"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPutResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesPutResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country": {
          "$ref": "#/definitions/invoicesPutResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesPutResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4b96f89e50d04e1ab17918b24a718013"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "paymentsGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/advanced_uk/supplier_expense_payments/13136249"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "productSalesPriceTypesPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/83d4ea4a798f4dfd805e7de629052cb7"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:31:07Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "sd"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "83d4ea4a798f4dfd805e7de629052cb7"
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "sd"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:31:24Z"
        }
      },
      "title": "productSalesPriceTypesPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPostResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "productSalesPriceTypesPutReq": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Cherry"
        }
      },
      "title": "productSalesPriceTypesPutReq",
      "type": "object"
    },
    "addressTypesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "addressTypesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "vendorsPostResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "type": "object"
    },
    "salesQuotesPostResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "invoicesPostResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "otherPaymentsPutResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/OTHER_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OTHER_PAYMENT"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "salesQuotesPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_quotes/cb1767c26a20409aa0fc55bc504c4f3b"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoicesPutResInvoice_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountAmount",
          "x-samplevalue": "10.0"
        },
        "discount_percentage": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountRate",
          "x-samplevalue": "9.09"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "eab0b0ba7e4442bca626f091d48150b7"
        },
        "ledger_account": {
          "$ref": "#/definitions/invoicesPutResInvoice_linesLedger_account"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesPutResInvoice_linesTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "invoicesPutReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/invoicesPutReqDelivery_address"
        },
        "delivery_performance_date": {
          "type": "string",
          "x-alias": "shipDate",
          "x-samplevalue": "string"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/invoicesPutReqInvoice_lines"
          },
          "type": "array"
        },
        "invoice_number": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "invoice_number_prefix": {
          "type": "string",
          "x-samplevalue": "SI-"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesPutReqMain_address"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "recurring_invoice": {
          "$ref": "#/definitions/invoicesPutReqRecurring_invoice"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingTaxAmount",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingCost",
          "x-samplevalue": "0.0"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/invoicesPutReqTax_analysis"
          },
          "type": "array"
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions for invoices"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "discountAmount",
          "x-samplevalue": "10.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetAllResCredit_note_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ad8f248b2296405192f35b9cd1902f7c"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesCreditNotesGetAllResCredit_note_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "$ref": "#/definitions/salesCreditNotesGetAllResCredit_note_linesProduct"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesGetAllResCredit_note_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "invoicesPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/invoicesPutResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:38:09Z"
        },
        "currency": {
          "$ref": "#/definitions/invoicesPutResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/invoicesPutResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Line 1"
        },
        "delivery_performance_date": {
          "type": "string",
          "x-alias": "shipDate",
          "x-samplevalue": "string"
        },
        "detailed_tax_analysis": {
          "$ref": "#/definitions/invoicesPutResDetailed_tax_analysis"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "7538ce11fbed432bbe78398d2455ae95"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/invoicesPutResInvoice_lines"
          },
          "type": "array"
        },
        "invoice_number": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "invoice_number_prefix": {
          "type": "string",
          "x-samplevalue": "SI-"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesPutResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesPutResMain_address"
        },
        "main_address_free_form": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "original_quote_estimate": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingTaxAmount",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string",
          "x-alias": "shippingTaxRate"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingCost",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/invoicesPutResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/invoicesPutResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions for invoices"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "discountAmount",
          "x-samplevalue": "10.0"
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/invoicesPutResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/invoicesPutResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        },
        "void_reason": {
          "type": "string",
          "x-samplevalue": "Temporary Reason"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "customersPutResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "paymentsPutResPayment_on_accountCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "otherPaymentsPostResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/OTHER_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OTHER_PAYMENT"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "customersGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "type": "object"
    },
    "salesQuoteGetByIdResQuote_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "vendorsPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "swaggerproperties": {
      "x-has-customfields": false,
      "type": "object",
      "title": "properties",
      "properties": {
        "definition-property": {
          "$ref": "#/definitions/swaggerdefinition-property"
        }
      }
    },
    "contactsGetAllResDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "default_purchase_ledger_account",
      "type": "object"
    },
    "salesQuotesGetAllResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "purchaseInvoicesPutResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetByIdResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534860
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/633117"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "customersPostReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "contactsGetAllResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "invoicesPostResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "customersGetAllResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "attachmentsPostRes": {
      "properties": {
        "$file_path": {
          "type": "string",
          "x-samplevalue": "/attachments/b3ca6a7c-6fd4-4346-aa9d-915d9ca4a0e1/file"
        },
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachments/b3ca6a7c-6fd4-4346-aa9d-915d9ca4a0e1"
        },
        "attachment_context": {
          "$ref": "#/definitions/attachmentsPostResAttachment_context"
        },
        "attachment_context_type": {
          "$ref": "#/definitions/attachmentsPostResAttachment_context_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T11:37:42Z"
        },
        "file_name": {
          "type": "string",
          "x-samplevalue": "Test.txt"
        },
        "file_size": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        },
        "id": {
          "type": "string",
          "x-samplevalue": "b3ca6a7c-6fd4-4346-aa9d-915d9ca4a0e1"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T11:37:42Z"
        },
        "mime_type": {
          "type": "string",
          "x-samplevalue": "text/plain"
        },
        "transaction": {
          "$ref": "#/definitions/attachmentsPostResTransaction"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T11:37:42Z"
        }
      },
      "title": "attachmentsPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesGetAllResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/VOID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Void"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VOID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "purchaseInvoicesPutResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "bulkDownloadRequestDocsHubDetails": {
      "properties": {
        "instanceId": {
          "type": "string",
          "x-samplevalue": "1234"
        },
        "path": {
          "type": "string",
          "x-samplevalue": "/myfolder/in/googledrive/myfilename.extention"
        }
      },
      "title": "docsHubDetails",
      "type": "object"
    },
    "bankAccountsPutResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesQuoteGetByIdResProfit_analysis": {
      "properties": {
        "total": {
          "$ref": "#/definitions/salesQuoteGetByIdResProfit_analysisTotal"
        }
      },
      "title": "profit_analysis",
      "type": "object"
    },
    "salesQuotesGetAllResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/IN"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "India (IN)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "IN"
        }
      },
      "title": "country",
      "type": "object"
    },
    "invoicesPostResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesPostResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country": {
          "$ref": "#/definitions/invoicesPostResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesPostResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4b96f89e50d04e1ab17918b24a718013"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "bankAccountsPutResBank_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_types/CHECKING"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECKING"
        }
      },
      "title": "bank_account_type",
      "type": "object"
    },
    "otherPaymentsGetByIdResPayment_lines": {
      "properties": {
        "details": {
          "type": "string",
          "x-samplevalue": "Fuel:Bizz:Vendor4"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Fuel:Bizz:Vendor4"
        },
        "gst_amount": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "97a82231cccc11e8a2b70e070fead9d0"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/otherPaymentsGetByIdResPayment_linesLedger_account"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6362366
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "pst_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "payment_lines",
      "type": "object"
    },
    "vendorsPostResDefault_purchase_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "351.36"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "837.47"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "1188.83"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "user": {
      "properties": {
        "created_at": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "initials": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "locale": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "paymentsPostResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/VENDOR_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR_PAYMENT"
        }
      },
      "type": "object"
    },
    "invoicesPutReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "customersGetAllResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResInvoice_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "b95450df98e442a1832843a77abf6d47"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseInvoicesPostResInvoice_linesLedger_account"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "$ref": "#/definitions/purchaseInvoicesPostResInvoice_linesProduct"
        },
        "pst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesQuotesPutResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "invoicesPutResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "contactAllocationsGeetByIdResAllocated_artefactsArtefact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/contactAllocationsGeetByIdResAllocated_artefactsArtefactLinks"
          },
          "type": "array"
        }
      },
      "title": "artefact",
      "type": "object"
    },
    "salesCreditNotesPostResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "ledgerAccountsGetByIdResTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/61cb43572c2e11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "My Tax Rate 20.00%"
        },
        "id": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "61cb43572c2e11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "invoicesPutResTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesPutResTax_analysisTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesPostResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesPostResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesPostResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesPostResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "vendorsPostReqBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "invoicesPostResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "60440"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "productsGetAllResCatalog_item_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/catalog_item_types/PRODUCT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Non-stock"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRODUCT"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetAllResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "purchaseCreditNotesPostResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_credit_notes/f0cfd0506fb740928ca6241f3593151f"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesPostResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "01/01/2016 - 100.00"
        },
        "due_date": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0cfd0506fb740928ca6241f3593151f"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "status": {
          "$ref": "#/definitions/purchaseCreditNotesPostResTransactionOriginStatus"
        }
      },
      "title": "origin",
      "type": "object"
    },
    "bankAccountsGetAllResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "checking updated"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "131241"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "MIDLGB22123"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "GB15 MIDL 4005 1512 3456 78"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "112233"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "salesQuotesPostResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/c2a874990b5b11e8a8f11281a7acf536"
        },
        "address": {
          "$ref": "#/definitions/salesQuotesPostResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a874990b5b11e8a8f11281a7acf536"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "paymentsGetAllResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "CHECK"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/97b0ea3ccccc11e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "43420E71795"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "97b0ea3ccccc11e8a2b70e070fead9d0"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "invoicesPutResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesPutResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/invoicesPutResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/invoicesPutResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesPutResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "type": "object"
    },
    "invoicesPutResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "60440"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "bankAccountsPutResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "ledgerAccountsGetAllResLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-alias": "accSubCategory",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "type": "object"
    },
    "invoicesPutResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/invoicesPutResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/invoicesPutResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 78
        },
        "credit_limit": {
          "type": "string",
          "x-samplevalue": "482.0"
        },
        "credit_terms_and_conditions": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/invoicesPutResContactCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/invoicesPutResContactDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_address": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "email": {
          "type": "string"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesPutResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesPutResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/invoicesPutResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "goodada"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/invoicesPutResContactProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/invoicesPutResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:49:41Z"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResCredit_note_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "b0cdff794ccf49b6bb1b7a738167c84b"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesCreditNotesPostResCredit_note_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesPostResCredit_note_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "salesCreditNotesPutResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "purchaseCreditNotesPostResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "purchaseInvoicesPostResContactDefault_purchase_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPENSE"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResDetailed_tax_analysisTax_rates_breakdown": {
      "properties": {
        "base_currency_goods_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_services_amount": {
          "type": "string"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "goods_amount": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "retail_tax_amount": {
          "type": "string"
        },
        "services_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesPostResDetailed_tax_analysisTax_rates_breakdownTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "title": "tax_rates_breakdown",
      "type": "object"
    },
    "salesCreditNotesPostResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "Pong": {
      "properties": {
        "dateTime": {
          "format": "date-time",
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "customersPostResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "contactAllocationsGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesCreditNotesGetAllResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "purchaseInvoicesGetAllResInvoice_linesProduct": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/015aaaf5f8ae11e7a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "This is a sample product"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "015aaaf5f8ae11e7a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesCreditNotesGetAllResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "contactPersonsGetAllResContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "vendorsPutResDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/vendorsPutResDefault_purchase_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "7200 - General Expenses"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/vendorsPutResDefault_purchase_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/vendorsPutResDefault_purchase_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7200
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "paymentsPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "vendorsGetAllResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "purchaseInvoicesPutReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "contactsGetAllResDefault_sales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/5c431741365711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sonali 1.90%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5c431741365711e8a8f11281a7acf536"
        }
      },
      "title": "default_sales_tax_rate",
      "type": "object"
    },
    "attachmentsGetByIdResAttachment_context": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/bfbe0e05503811e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "bfbe0e05503811e695ab0ed51759bcc7"
        }
      },
      "title": "attachment_context",
      "type": "object"
    },
    "salesQuotesPostResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "salesCreditNotesGetAllResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "purchaseInvoicesPutResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/3041826d4d1b11e695ab0ed51759bcc7"
        },
        "address": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3041826d4d1b11e695ab0ed51759bcc7"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "2145553434"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "invoiceSettingsFooter_details": {
      "properties": {
        "column_1": {
          "type": "string"
        },
        "column_2": {
          "type": "string"
        },
        "column_3": {
          "type": "string"
        }
      },
      "title": "footer_details",
      "type": "object"
    },
    "salesCreditNotesPostResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesPostResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesPostResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesPostResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d4c30324326b48be8d6ad09002e3cecc"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "invoicesPutResContactDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "vendorsPutResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "swagger500": {
      "x-has-customfields": false,
      "type": "object",
      "title": "500",
      "properties": {
        "description": {
          "x-samplevalue": "Server error - Something went wrong on the Cloud Elements server",
          "type": "string"
        }
      }
    },
    "business": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "Brighton Blvd"
        },
        "address_line_2": {
          "type": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Denver"
        },
        "country": {
          "$ref": "#/definitions/businessCountry"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:40Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Cloud Elements"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7146dd53a6e6d1d2b0d8c3a1241a3c56"
        },
        "is_demo": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-22T04:23:34Z"
        },
        "mobie": {
          "type": "string",
          "x-samplevalue": "1234567890"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Cloud Elements"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "80216"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "CO"
        },
        "subscriptions": {
          "items": {
            "$ref": "#/definitions/businessSubscriptions"
          },
          "type": "array"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "866.830.3456"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-22T04:23:34Z"
        },
        "website": {
          "type": "string",
          "x-samplevalue": "https://www.idonthaveany.com"
        }
      },
      "title": "business",
      "type": "object"
    },
    "salesCreditNotesPostResDetailed_tax_analysis": {
      "properties": {
        "base_currency_total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_goods_amount": {
          "type": "string"
        },
        "base_currency_total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_services_amount": {
          "type": "string"
        },
        "base_currency_total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rates_breakdown": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResDetailed_tax_analysisTax_rates_breakdown"
          },
          "type": "array"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_goods_amount": {
          "type": "string"
        },
        "total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_retailer_tax": {
          "type": "string"
        },
        "total_services_amount": {
          "type": "string"
        },
        "total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "detailed_tax_analysis",
      "type": "object"
    },
    "swagger502": {
      "x-has-customfields": false,
      "type": "object",
      "title": "502",
      "properties": {
        "description": {
          "x-samplevalue": "Provider server error - Something went wrong on the Provider or Endpoint's server",
          "type": "string"
        }
      }
    },
    "salesCreditNotesGetAllResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesGetAllResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "purchaseCreditNotesGetAllResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "10.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "salesQuotesPostResContactDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/salesQuotesPostResContactDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/salesQuotesPostResContactDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/salesQuotesPostResContactDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "title": "default_sales_ledger_account",
      "type": "object"
    },
    "bankAccountsPutResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "Checking update"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "131241"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "vendorsPutResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "paymentsPostResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "invoicesPutResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "attachmentsPostResAttachment_context": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/bfbe0e05503811e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "bfbe0e05503811e695ab0ed51759bcc7"
        }
      },
      "title": "attachment_context",
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/7942c14d9b32480e97749b471327e01d"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7942c14d9b32480e97749b471327e01d"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 23504199
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "financialSettings": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/financial_settings"
        },
        "accounting_type": {
          "type": "string",
          "x-samplevalue": "accrual"
        },
        "accounts_start_date": {
          "type": "string"
        },
        "base_currency": {
          "$ref": "#/definitions/financialSettingsBase_currency"
        },
        "default_irpf_rate": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "flat_rate_tax_percentage": {
          "type": "string"
        },
        "general_tax_number": {
          "type": "string"
        },
        "mtd_activation_status": {
          "type": "string",
          "x-samplevalue": "mtd_unavailable"
        },
        "mtd_authenticated_date": {
          "type": "string"
        },
        "mtd_connected": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "multi_currency_enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "purchase_tax_calculation": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "sales_tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_office": {
          "type": "string"
        },
        "tax_return_frequency": {
          "type": "string"
        },
        "tax_scheme": {
          "$ref": "#/definitions/financialSettingsTax_scheme"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-14T18:46:26Z"
        },
        "use_live_exchange_rates": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "year_end_date": {
          "type": "string"
        },
        "year_end_lockdown_date": {
          "type": "string"
        }
      },
      "title": "financialSettings",
      "type": "object"
    },
    "invoicesPutResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutReqCredit_note_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "pst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "bankAccountsPostResBank_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_types/CHECKING"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECKING"
        }
      },
      "title": "bank_account_type",
      "type": "object"
    },
    "subscriptions": {
      "properties": {
        "active": {
          "description": "Indicates whether the subscription is active",
          "type": "boolean"
        },
        "created_at": {
          "description": "The datetime when the item was created",
          "format": "date-time",
          "type": "string"
        },
        "displayed_as": {
          "description": "Display text for the item",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the subscription",
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "updated_at": {
          "description": "The datetime when the item was last updated",
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/OTHER_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OTHER_PAYMENT"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "productsGetAllResSales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesQuoteGetByIdResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuoteGetByIdResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactDefault_purchase_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPENSE"
        }
      },
      "title": "ledger_account_group",
      "type": "object"
    },
    "salesCreditNotesPutResContactDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "title": "ledger_account_group",
      "type": "object"
    },
    "purchaseInvoicesPostReqInvoice_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "pst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "required": [
        "description",
        "ledger_account_id",
        "quantity",
        "unit_price"
      ],
      "type": "object"
    },
    "otherPaymentsPostResPayment_lines": {
      "properties": {
        "details": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "fefdd081f5464317bab60821af82251d"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/otherPaymentsPostResPayment_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "payment_lines",
      "type": "object"
    },
    "vendorsGetByIdResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResContactDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "title": "ledger_account_group",
      "type": "object"
    },
    "salesCreditNotesGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesCreditNotesPutResContactDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "balance_details",
      "type": "object"
    },
    "invoicesPostResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "financialSettingsResponse": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/financial_settings"
        },
        "accounts_start_date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-mm-dd"
        },
        "base_currency": {
          "$ref": "#/definitions/base_currency"
        },
        "default_irpf_rate": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "flat_rate_tax_percentage": {
          "type": "string"
        },
        "general_tax_number": {
          "type": "string"
        },
        "multi_currency_enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "purchase_tax_calculation": {
          "type": "string"
        },
        "sales_tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_office": {
          "type": "string"
        },
        "tax_return_frequency": {
          "type": "string"
        },
        "tax_scheme": {
          "$ref": "#/definitions/tax_scheme"
        },
        "use_live_exchange_rates": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "year_end_date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-mm-dd"
        },
        "year_end_lockdown_date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-mm-dd"
        }
      },
      "title": "financialSettingsResponse",
      "x-has-customfields": false,
      "x-vendor-objectname": "financial_settings",
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "status",
      "type": "object"
    },
    "invoicesGetByIdResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534861
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/salesCreditNotesPostResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 78
        },
        "credit_limit": {
          "type": "string",
          "x-samplevalue": "482.0"
        },
        "credit_terms_and_conditions": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesPostResContactCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/salesCreditNotesPostResContactDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_address": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "email": {
          "type": "string"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPostResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/salesCreditNotesPostResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/salesCreditNotesPostResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "goodada"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/salesCreditNotesPostResContactProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/salesCreditNotesPostResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:49:41Z"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "vendorsPutResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/0d9d5d9183114e31ab1215d6857a02ba"
        },
        "address": {
          "$ref": "#/definitions/vendorsPutResMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/vendorsPutResMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0d9d5d9183114e31ab1215d6857a02ba"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-alias": "contact.phone",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResInvoice_linesProduct": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/015aaaf5f8ae11e7a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "This is a sample product"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "015aaaf5f8ae11e7a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "invoicesGetAllResInvoice_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].taxName",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "countriesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/AF"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Afghanistan (AF)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AF"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "countriesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "vendorsGetAllResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "bankAccountsPostResMain_contact_person": {
      "properties": {
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "customersPutResMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e66cd2a7270e48979a6756039a98aad8"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e66cd2a7270e48979a6756039a98aad8"
        }
      },
      "type": "object"
    },
    "currenciesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/INR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Indian Rupee (INR)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INR"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 16
        }
      },
      "title": "currenciesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesPostResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:22:36Z"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesPostResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "detailed_tax_analysis": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "c701fd96fef94e118305a253f7eb8f1c"
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResInvoice_lines"
          },
          "type": "array"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Some notes about the invoice"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "part_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "status": {
          "$ref": "#/definitions/purchaseInvoicesPostResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseInvoicesPostResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseInvoicesPostResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:23:01Z"
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPostResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        }
      },
      "title": "address",
      "type": "object"
    },
    "contactsGetAllResDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        }
      },
      "title": "default_sales_ledger_account",
      "type": "object"
    },
    "salesQuotesPostResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "countryGroupsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "countryGroupsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseInvoicesPostResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Addison"
        },
        "contact": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "75254"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        }
      },
      "type": "object"
    },
    "customersPostResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "servicesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/services/226445b169d011e8863412a7e3287944"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-06-06T21:25:28Z"
        },
        "deactivatable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string",
          "x-samplevalue": "that is Rapha's cost for testing this thing"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "that is Rapha's cost for testing this thing"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "226445b169d011e8863412a7e3287944"
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "raphinha"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 736192
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "some note will go here"
        },
        "purchase_description": {
          "type": "string",
          "x-samplevalue": "some description"
        },
        "purchase_ledger_account": {
          "$ref": "#/definitions/servicesGetByIdResPurchase_ledger_account"
        },
        "purchase_tax_rate": {
          "type": "string"
        },
        "sales_ledger_account": {
          "$ref": "#/definitions/servicesGetByIdResSales_ledger_account"
        },
        "sales_rates": {
          "items": {
            "$ref": "#/definitions/servicesGetByIdResSales_rates"
          },
          "type": "array"
        },
        "sales_tax_rate": {
          "$ref": "#/definitions/servicesGetByIdResSales_tax_rate"
        },
        "source_guid": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-06-06T21:25:28Z"
        },
        "used_on_recurring_invoice": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "usual_supplier": {
          "$ref": "#/definitions/servicesGetByIdResUsual_supplier"
        }
      },
      "title": "servicesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "taxCodesGetByIdResTax_rates": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "tax_rates",
      "type": "object"
    },
    "purchaseInvoicesPostReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "billDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostReqInvoice_lines"
          },
          "type": "array"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "Some notes about the invoice"
        },
        "part_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostReqTax_analysis"
          },
          "type": "array"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "vendor_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "required": [
        "date",
        "due_date",
        "contact_id",
        "invoice_lines"
      ],
      "type": "object"
    },
    "salesQuotesGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesQuotesPutResProfit_analysis": {
      "properties": {
        "total": {
          "$ref": "#/definitions/salesQuotesPutResProfit_analysisTotal"
        }
      },
      "title": "profit_analysis",
      "type": "object"
    },
    "invoicesPutResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "addressRegionsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_regions/CA-AB"
        },
        "code": {
          "type": "string",
          "x-samplevalue": "AB"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Alberta (AB)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CA-AB"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Alberta"
        }
      },
      "title": "addressRegionsGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "vendorsGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_credit_notes/2910c2cedb9311e8a2b70e070fead9d0"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_total_itc_amount": {
          "type": "string"
        },
        "base_currency_total_itr_amount": {
          "type": "string"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re398"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-29T15:56:13Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesGetAllResCredit_note_lines"
          },
          "type": "array"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-18",
          "x-searchable": true,
          "x-searchable-operators": [
            ">",
            "<",
            ">=",
            "<="
          ]
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "05/18/2018 - 1.00"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2910c2cedb9311e8a2b70e070fead9d0",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesGetAllResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "note"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "part_recoverable": {
          "type": "string"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "CN00011",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "status": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesGetAllResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "total_itc_amount": {
          "type": "string"
        },
        "total_itr_amount": {
          "type": "string"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T19:26:04Z"
        },
        "vendor_reference": {
          "type": "string"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "purchaseCreditNotesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "vendorsPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/6dd371275d82432d856134360da45645"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/vendorsPostResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/vendorsPostResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "currency": {
          "$ref": "#/definitions/vendorsPostResCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/vendorsPostResDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "qwer"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "6dd371275d82432d856134360da45645"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/vendorsPostResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/vendorsPostResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/vendorsPostResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "qwer"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalid",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/vendorsPostResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:58Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "financialSettingsUpdate": {
      "properties": {
        "accounts_start_date": {
          "type": "string"
        },
        "base_currency_id": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "multi_currency_enabled": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "tax_office": {
          "type": "string"
        },
        "tax_return_frequency": {
          "type": "string"
        },
        "tax_scheme": {
          "$ref": "#/definitions/tax_scheme"
        },
        "use_live_exchange_rates": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "year_end_date": {
          "type": "string"
        },
        "year_end_lockdown_date": {
          "type": "string"
        }
      },
      "title": "financialSettingsUpdate",
      "type": "object",
      "x-has-customfields": false,
      "x-vendor-objectname": "financial_settings"
    },
    "vendorsPostReq": {
      "properties": {
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "auxiliary_account": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/vendorsPostReqBank_account_details"
        },
        "contact_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_purchase_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "delivery_address": {
          "$ref": "#/definitions/vendorsPostReqDelivery_address"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/vendorsPostReqMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/vendorsPostReqMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "qwer"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalid",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/vendorsPostReqTax_treatment"
        }
      },
      "required": [
        "name"
      ],
      "type": "object"
    },
    "salesCreditNotesPostResContactDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/salesCreditNotesPostResContactDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/salesCreditNotesPostResContactDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/salesCreditNotesPostResContactDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "title": "default_sales_ledger_account",
      "type": "object"
    },
    "bankAccountsPutResMain_addressBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/925edbb6e29d4930a9211808ec04dad3"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking update (15650)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "925edbb6e29d4930a9211808ec04dad3"
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "productsPostReqSales_prices": {
      "properties": {
        "price": {
          "format": "int32",
          "type": "string",
          "x-alias": "priceList[*].price",
          "x-samplevalue": "0.0"
        },
        "price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "price_name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "product_sales_price_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "businessesPutResCountry": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "country",
      "type": "object"
    },
    "customersPutResDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "contactPersonsGetAllResAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/da7370e54d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da7370e54d1611e695ab0ed51759bcc7"
        }
      },
      "title": "address",
      "type": "object"
    },
    "productsPostResSales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResInvoice_linesProduct": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/015aaaf5f8ae11e7a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "This is a sample product"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "015aaaf5f8ae11e7a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "customersPutResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "productsGetByIdResCatalog_item_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/catalog_item_types/PRODUCT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Non-stock"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRODUCT"
        },
        "legacy_id": {
          "type": "string",
          "x-samplevalue": "STOCK_ITEM"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResStatus": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expired"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPIRED"
        }
      },
      "title": "status",
      "type": "object"
    },
    "purchaseCreditNotesPostResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        },
        "credit_limit": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPostResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string"
        },
        "main_address": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "notes": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesQuotesPostReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "salesQuotesPostResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesPostResMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesPostResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesPostResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0f8e3cfcb240471986cecb613edad760"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "productsPutResUsual_supplier": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/f8b5bc8bd1e311e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Vendor John (234567)"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "f8b5bc8bd1e311e8a2b70e070fead9d0"
        }
      },
      "type": "object"
    },
    "salesCreditNotesGetByIdResCredit_note_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "journal_codeR": {
      "properties": {
        "code": {
          "type": "string"
        },
        "control_name": {
          "type": "string"
        },
        "journal_code_type_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "reserved": {
          "type": "boolean"
        },
        "transaction_id": {
          "type": "string",
          "x-samplevalue": "/addresses/e178d01f311c11e8a8f11281a7acf536"
        },
        "transaction_type_id": {
          "type": "string"
        }
      },
      "title": "journal_codeR",
      "type": "object"
    },
    "swaggerinfo": {
      "x-has-customfields": false,
      "type": "object",
      "title": "info",
      "properties": {
        "contact": {
          "$ref": "#/definitions/swaggercontact"
        },
        "title": {
          "x-samplevalue": "hubspotcrm",
          "type": "string"
        },
        "version": {
          "x-samplevalue": "api-v2",
          "type": "string"
        }
      }
    },
    "salesCreditNotesGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_CREDIT_NOTE"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "invoicesGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "countriesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/AF"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Afghanistan (AF)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AF",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "countriesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "ledgerAccountsGetByIdResLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-alias": "accSubCategory",
          "x-samplevalue": "OVERHEADS"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 9
        }
      },
      "type": "object"
    },
    "invoicesGetAllResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534891
        }
      },
      "type": "object"
    },
    "bankAccountsPutResLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/d455a4dc883d4e13a10929143dcc2b80"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking (15650)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d455a4dc883d4e13a10929143dcc2b80"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "contactsGetAllResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/3041826d4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3041826d4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "businessesGetByIdResSubscriptions": {
      "properties": {
        "accountant_pays": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:41Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts Extra"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS_EXTRA"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "free"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-12-24T01:01:08Z"
        }
      },
      "title": "subscriptions",
      "type": "object"
    },
    "productsPostResSales_prices": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-alias": "priceList[*].id",
          "x-samplevalue": "e33c471f911049a9aee7a2e673bb697d"
        },
        "price": {
          "format": "int32",
          "type": "string",
          "x-alias": "priceList[*].price",
          "x-samplevalue": "0.0"
        },
        "price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "price_name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/productsPostResSales_pricesProduct_sales_price_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_credit_notes/12b4c03f568e4cd98febdd9a02456518"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "ledgerEntriesGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesQuotesGetAllResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "paymentsGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "type": "object"
    },
    "customersPutResDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/customersPutResDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/customersPutResDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/customersPutResDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "type": "object"
    },
    "invoicesPostResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages": {
      "properties": {
        "from_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "1900-01-01"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "ledgerAccountsGetAllResTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/61cb43572c2e11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "My Tax Rate 20.00%"
        },
        "id": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "61cb43572c2e11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "bankAccountPostReq": {
      "properties": {
        "balance": {
          "format": "double",
          "type": "number",
          "x-samplevalue": 0
        },
        "bank_account_details": {
          "$ref": "#/definitions/bank_account_detailsreq"
        },
        "bank_account_type_id": {
          "type": "string"
        },
        "default_payment_method_id": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e177c047311c11e8a8f11281a7acf536"
        },
        "journal_code": {
          "$ref": "#/definitions/journal_codeR"
        },
        "ledger_account_id": {
          "type": "string"
        },
        "main_address": {
          "$ref": "#/definitions/main_addressR"
        },
        "main_contact_person": {
          "$ref": "#/definitions/main_contact_personR"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1160
        },
        "transaction_id": {
          "type": "string"
        },
        "transaction_type_id": {
          "type": "string"
        }
      },
      "required": [
        "bank_account_type_id",
        "bank_account_details"
      ],
      "title": "bankAccountPostReq",
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseCreditNotesPutReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8518559
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "salesCreditNotesPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "invoiceSettingsPrint_contact_details": {
      "properties": {
        "business_name": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "default_delivery_address": {
          "type": "string",
          "x-samplevalue": "INVOICE_ADDRESS"
        },
        "due_date": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "email_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "mobile": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "telephone": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "website": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "print_contact_details",
      "type": "object"
    },
    "vendorsPostReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/8dee02e8d49143d79823477daa4c9a81"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "8dee02e8d49143d79823477daa4c9a81"
        }
      },
      "type": "object"
    },
    "ledgerEntriesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_entries/d0e4a38c4d1f11e695ab0ed51759bcc7"
        },
        "contact": {
          "$ref": "#/definitions/ledgerEntriesGetByIdResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:42:52Z"
        },
        "credit": {
          "type": "string",
          "x-samplevalue": "12.0"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-07-18"
        },
        "debit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0e4a38c4d1f11e695ab0ed51759bcc7"
        },
        "journal_code": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "ledger_account": {
          "$ref": "#/definitions/ledgerEntriesGetByIdResLedger_account"
        },
        "tax_rate": {
          "type": "string"
        },
        "transaction": {
          "$ref": "#/definitions/ledgerEntriesGetByIdResTransaction"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:42:52Z"
        }
      },
      "title": "ledgerEntriesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPostReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResContactDefault_purchase_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "351.36"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "837.47"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "1188.83"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "balance_details",
      "type": "object"
    },
    "salesQuotesPutResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "salesQuotesPutResContactDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "title": "ledger_account_group",
      "type": "object"
    },
    "salesQuotesPutResDelivery_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "businessesPutRes": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country": {
          "$ref": "#/definitions/businessesPutResCountry"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:06:54Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "is_demo": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "subscriptions": {
          "items": {
            "$ref": "#/definitions/businessesPutResSubscriptions"
          },
          "type": "array"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:06:54Z"
        },
        "website": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "businessesPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "taxProfilesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_region": {
          "$ref": "#/definitions/taxProfilesGetByIdResAddress_region"
        },
        "collect_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:47:28Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number_suffix": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_return_frequency": {
          "$ref": "#/definitions/taxProfilesGetByIdResTax_return_frequency"
        },
        "tax_type": {
          "$ref": "#/definitions/taxProfilesGetByIdResTax_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:47:28Z"
        }
      },
      "title": "taxProfilesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPostResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "businessesPutReq": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "Brighton Blvd"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "Brighton Blvd"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Denver"
        },
        "mobile": {
          "type": "string",
          "x-samplevalue": "1234567891"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Cloud Elements"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "80216"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "CO"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "1234567891"
        },
        "website": {
          "type": "string",
          "x-samplevalue": "https://idonthaveany.com"
        }
      },
      "title": "businessesPutReq",
      "type": "object"
    },
    "purchaseInvoicesPutReqInvoice_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "pst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-alias": "lines[*].taxCode",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "journalEntriesPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/26c8e6d99cc842649543a717cb18456a"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "26c8e6d99cc842649543a717cb18456a"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "attachmentsPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/08bb5f40d81d4a8d81328226f06edac3"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "08bb5f40d81d4a8d81328226f06edac3"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "invoicesPutResDetailed_tax_analysisTax_rates_breakdownTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/invoicesPutResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "type": "object"
    },
    "customersGetAllResProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/3086675"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoicesPutResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_INVOICE"
        }
      },
      "type": "object"
    },
    "otherPaymentsPostResPayment_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "businessesPutResSubscriptions": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:06:54Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:06:54Z"
        }
      },
      "title": "subscriptions",
      "type": "object"
    },
    "otherPaymentsPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/other_payments/d66abb15fa7b4242a481ac4571cb417a"
        },
        "bank_account": {
          "$ref": "#/definitions/otherPaymentsPutResBank_account"
        },
        "base_currency_total_itc_amount": {
          "type": "string"
        },
        "base_currency_total_itr_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/otherPaymentsPutResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:14:23Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d66abb15fa7b4242a481ac4571cb417a"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "part_recoverable": {
          "type": "string"
        },
        "payment_lines": {
          "items": {
            "$ref": "#/definitions/otherPaymentsPutResPayment_lines"
          },
          "type": "array"
        },
        "payment_method": {
          "$ref": "#/definitions/otherPaymentsPutResPayment_method"
        },
        "reference": {
          "type": "string"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "total_itc_amount": {
          "type": "string"
        },
        "total_itr_amount": {
          "type": "string"
        },
        "transaction": {
          "$ref": "#/definitions/otherPaymentsPutResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/otherPaymentsPutResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:16:06Z"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "otherPaymentsPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "otherPaymentsPutReq": {
      "properties": {
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "part_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "payment_lines": {
          "items": {
            "$ref": "#/definitions/otherPaymentsPutReqPayment_lines"
          },
          "type": "array"
        },
        "payment_method_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "transaction_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "otherPaymentsPutReq",
      "type": "object"
    },
    "BulkQuery": {
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "instance_id": {
          "type": "number"
        }
      },
      "type": "object"
    },
    "addressTypesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "addressTypesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesQuotesGetAllResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "otherPaymentsGetByIdResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 149284
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "salesQuotesPutResDetailed_tax_analysis": {
      "properties": {
        "base_currency_total": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_total_goods_amount": {
          "type": "string"
        },
        "base_currency_total_net": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_total_services_amount": {
          "type": "string"
        },
        "base_currency_total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rates_breakdown": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResDetailed_tax_analysisTax_rates_breakdown"
          },
          "type": "array"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "total_goods_amount": {
          "type": "string"
        },
        "total_net": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "total_retailer_tax": {
          "type": "string"
        },
        "total_services_amount": {
          "type": "string"
        },
        "total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "detailed_tax_analysis",
      "type": "object"
    },
    "invoicesPostReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "productsPostResPurchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-alias": "assetAccount",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "purchaseInvoicesPostResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "contactPersonTypesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "title": "contactPersonTypesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPostResDelivery_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "paymentsPostResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "CHECK"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "salesQuotesPostResQuote_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "salesQuotesPostResDetailed_tax_analysisTax_rates_breakdownTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/salesQuotesPostResDetailed_tax_analysisTax_rates_breakdownTax_ratePercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "purchaseInvoicesPostResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "contactsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/contactsGetByIdResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/contactsGetByIdResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        },
        "credit_limit": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/contactsGetByIdResCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/contactsGetByIdResDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        },
        "links": {
          "items": {
            "$ref": "#/definitions/contactsGetByIdResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string"
        },
        "main_address": {
          "$ref": "#/definitions/contactsGetByIdResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/contactsGetByIdResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "notes": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/contactsGetByIdResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "title": "contactsGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "bankAccountsPostResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesCreditNotesPutResDetailed_tax_analysis": {
      "properties": {
        "base_currency_total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_goods_amount": {
          "type": "string"
        },
        "base_currency_total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_services_amount": {
          "type": "string"
        },
        "base_currency_total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rates_breakdown": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResDetailed_tax_analysisTax_rates_breakdown"
          },
          "type": "array"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_goods_amount": {
          "type": "string"
        },
        "total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_retailer_tax": {
          "type": "string"
        },
        "total_services_amount": {
          "type": "string"
        },
        "total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "detailed_tax_analysis",
      "type": "object"
    },
    "salesQuotesPutReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "vendorsPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/suppliers/9416189"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "taxCodesGetByIdResCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesCreditNotesPutResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesPutResMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesPutResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesPutResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "56f77bd89dda49239c89814d82cce0a6"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "salesCreditNotesPostResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "invoicesPostResInvoice_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountAmount",
          "x-samplevalue": "10.0"
        },
        "discount_percentage": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].discountRate",
          "x-samplevalue": "9.09"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "eab0b0ba7e4442bca626f091d48150b7"
        },
        "ledger_account": {
          "$ref": "#/definitions/invoicesPostResInvoice_linesLedger_account"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string",
          "x-alias": "lines[*].product.name"
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesPostResInvoice_linesTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.price",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "swaggertags": {
      "x-has-customfields": false,
      "title": "tags",
      "properties": {
        "name": {
          "x-samplevalue": "contacts",
          "type": "string"
        }
      },
      "type": "object"
    },
    "otherPaymentsPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/487b93a76fee421ab94a7bbca28a0fe1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "487b93a76fee421ab94a7bbca28a0fe1"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "invoicesPostResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "taxCode",
              "path": "tax_analysis[*].tax_rate.id | [0]"
            }
          ],
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "paymentsPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "bank_account": {
          "$ref": "#/definitions/paymentsPostResBank_account"
        },
        "base_currency_currency_charge": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsPostResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsPostResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "re392"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "4823d330f9bc4fab987af85f53bdc960"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/paymentsPostResLinks"
          },
          "type": "array"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payment_method": {
          "$ref": "#/definitions/paymentsPostResPayment_method"
        },
        "payment_on_account": {
          "$ref": "#/definitions/paymentsPostResPayment_on_account"
        },
        "reference": {
          "type": "string",
          "x-alias": "reference",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "240.0"
        },
        "transaction": {
          "$ref": "#/definitions/paymentsPostResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/paymentsPostResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "bankAccountsGetAllResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_account_contacts/da749bab4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da749bab4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "contactAllocationsGeetByIdResAllocated_artefacts": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "artefact": {
          "$ref": "#/definitions/contactAllocationsGeetByIdResAllocated_artefactsArtefact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "allocated_artefacts",
      "type": "object"
    },
    "invoicesPutResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "paymentsPostReq": {
      "properties": {
        "allocated_artefacts": {
          "items": {
            "$ref": "#/definitions/paymentsPostReqAllocated_artefacts"
          },
          "type": "array"
        },
        "bank_account_id": {
          "type": "string",
          "x-alias": "bankAccount",
          "x-samplevalue": "string"
        },
        "base_currency_currency_charge": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact_id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payment_method_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "payment_on_account": {
          "$ref": "#/definitions/paymentsPostReqPayment_on_account"
        },
        "reference": {
          "type": "string",
          "x-alias": "reference",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "240.0"
        },
        "transaction_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "required": [
        "date",
        "bank_account_id",
        "transaction_type_id",
        "total_amount",
        "contact_id"
      ],
      "type": "object"
    },
    "salesQuotesPutResContactDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "ledger_account_type",
      "type": "object"
    },
    "salesCreditNotesGetAllResShipping_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "shipping_tax_rate",
      "type": "object"
    },
    "otherPaymentsGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/OTHER_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OTHER_PAYMENT"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 13
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "paymentsPutResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/VENDOR_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR_PAYMENT"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostReqCredit_note_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "pst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "credit_note_lines",
      "type": "object",
      "required": [
        "description",
        "ledger_account_id",
        "quantity",
        "unit_price"
      ]
    },
    "otherPaymentsPutResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "invoicesGetAllResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4b96f89e50d04e1ab17918b24a718013"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResInvoice_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "b95450df98e442a1832843a77abf6d47"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResInvoice_linesLedger_account"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 320155
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "$ref": "#/definitions/purchaseInvoicesGetByIdResInvoice_linesProduct"
        },
        "pst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "invoicesGetAllResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-alias": [
            {
              "alias": "taxCode",
              "path": "tax_analysis[*].tax_rate.id | [0]"
            }
          ],
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "contactsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/contactsGetAllResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/contactsGetAllResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 20
        },
        "credit_limit": {
          "type": "string",
          "x-samplevalue": "482.0"
        },
        "credit_terms_and_conditions": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/contactsGetAllResCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/contactsGetAllResDefault_purchase_ledger_account"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/contactsGetAllResDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "$ref": "#/definitions/contactsGetAllResDefault_sales_tax_rate"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_address": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "links": {
          "items": {
            "$ref": "#/definitions/contactsGetAllResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/contactsGetAllResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/contactsGetAllResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "goodada"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/contactsGetAllResProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "re8pgv",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/contactsGetAllResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "title": "contactsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "attachmentsGetByIdRes": {
      "properties": {
        "$file_path": {
          "type": "string",
          "x-samplevalue": "/attachments/e88939fa-a1a8-4104-98c8-16c7454c7860/file"
        },
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachments/e88939fa-a1a8-4104-98c8-16c7454c7860"
        },
        "attachment_context": {
          "$ref": "#/definitions/attachmentsGetByIdResAttachment_context"
        },
        "attachment_context_type": {
          "$ref": "#/definitions/attachmentsGetByIdResAttachment_context_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T13:00:31Z"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "CE Plan Desc"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "CE Plan Desc"
        },
        "file_extension": {
          "type": "string",
          "x-samplevalue": "pdf"
        },
        "file_name": {
          "type": "string",
          "x-samplevalue": "CE_PLAN"
        },
        "file_size": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 492184
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e88939fa-a1a8-4104-98c8-16c7454c7860"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T13:00:31Z"
        },
        "mime_type": {
          "type": "string",
          "x-samplevalue": "application/pdf"
        },
        "transaction": {
          "$ref": "#/definitions/attachmentsGetByIdResTransaction"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-29T13:00:31Z"
        }
      },
      "title": "attachmentsGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "me": {
      "properties": {
        "business": {
          "$ref": "#/definitions/business"
        },
        "user": {
          "$ref": "#/definitions/user"
        }
      },
      "type": "object"
    },
    "productsPutResSales_pricesProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesGetByIdResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "string"
        },
        "country": {
          "$ref": "#/definitions/invoicesGetByIdResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesGetByIdResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": "8e86a6a51abd479b9b5f04eb260de22e"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResCredit_note_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "contactAllocationsGeetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "purchaseInvoicesGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "type": "object"
    },
    "invoicesPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "invoicesPostResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.contact.address.line1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "customersPostReqMain_contact_person": {
      "properties": {
        "address_id": {
          "type": "string",
          "x-alias": "contact.address.line1",
          "x-samplevalue": "string"
        },
        "contact_person_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_preferred_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/3041826d4d1b11e695ab0ed51759bcc7"
        },
        "address": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com",
          "x-sub-format": "email"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3041826d4d1b11e695ab0ed51759bcc7"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "2145553434"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "customersGetByIdResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResStatus": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expired"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPIRED"
        }
      },
      "title": "status",
      "type": "object"
    },
    "purchaseCreditNotesGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_credit_notes/1ee1eced04f14d549d7081721930683d"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "ledgerEntriesGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/d0e408de4d1f11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0e408de4d1f11e695ab0ed51759bcc7"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "vendorsPostResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResContactDefault_purchase_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "351.36"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "837.47"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "1188.83"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "bankAccountsGetAllResLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/da71afba4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da71afba4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "customersGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/customers/9415758"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "addressesGetByIdResCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 219
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesQuotesPutReqQuote_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discount_percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "quote_lines",
      "type": "object"
    },
    "salesCreditNotesPostResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "salesCreditNotesGetAllResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesGetAllResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesGetAllResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesGetAllResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "74a175cc479111e8a8f11281a7acf536"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "invoicesGetByIdResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "invoicesPutResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResCredit_note_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "684486b30cd14a43a8536e8faba5d5f4"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesCreditNotesPutResCredit_note_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesPutResCredit_note_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "taxProfilesGetByIdResTax_return_frequency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "tax_return_frequency",
      "type": "object"
    },
    "bankAccountsPostResLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/d455a4dc883d4e13a10929143dcc2b80"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking (15650)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d455a4dc883d4e13a10929143dcc2b80"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "customersPostResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e66cd2a7270e48979a6756039a98aad8"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/customersPostResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact": {
          "$ref": "#/definitions/customersPostResMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/customersPostResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/customersPostResMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "e66cd2a7270e48979a6756039a98aad8"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        }
      },
      "type": "object"
    },
    "taxRatesPostReq": {
      "properties": {
        "agency": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "component_tax_rate": {
          "items": {
            "$ref": "#/definitions/taxRatesPostReqComponent_tax_rate"
          },
          "type": "array"
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        }
      },
      "title": "taxRatesPostReq",
      "type": "object",
      "required": [
        "name"
      ]
    },
    "addressRegionsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_regions/CA-AB"
        },
        "code": {
          "type": "string",
          "x-samplevalue": "AB"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Alberta (AB)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CA-AB",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Alberta"
        }
      },
      "title": "addressRegionsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "journalEntriesGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/aced4300313111e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "aced4300313111e8a8f11281a7acf536"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "invoicesPutResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "customersPutReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "vendorsPutResMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/72a60666942a4908bb1c339e0476729c"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "contact.address.line1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "72a60666942a4908bb1c339e0476729c"
        }
      },
      "type": "object"
    },
    "bankAccountsPostResMain_addressBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/925edbb6e29d4930a9211808ec04dad3"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking (15650)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "925edbb6e29d4930a9211808ec04dad3"
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "invoicesPostResTransactionContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "taxRatesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/8e53d6dc4e7447d887b8e366bf41a6e9"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T20:25:24Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "asd 0.00%"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "8e53d6dc4e7447d887b8e366bf41a6e9"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "asd"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/taxRatesPostResPercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T20:25:24Z"
        }
      },
      "title": "taxRatesPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "productsGetAllResUsual_supplier": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/f8b5bc8bd1e311e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Vendor John (234567)"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "f8b5bc8bd1e311e8a2b70e070fead9d0"
        }
      },
      "type": "object"
    },
    "journalEntriesGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/JOURNAL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Journal"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "JOURNAL"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 10
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "ledgerEntriesGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesQuotesPostResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "vendorsPutReq": {
      "properties": {
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "auxiliary_account": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/vendorsPutReqBank_account_details"
        },
        "contact_type_ids": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "string"
          ]
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_purchase_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "default_sales_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "delivery_address": {
          "$ref": "#/definitions/vendorsPutReqDelivery_address"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/vendorsPutReqMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/vendorsPutReqMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "qwer"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalid",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/vendorsPutReqTax_treatment"
        }
      },
      "type": "object"
    },
    "customersGetByIdResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "invoicesPutResDetailed_tax_analysis": {
      "properties": {
        "base_currency_total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_goods_amount": {
          "type": "string"
        },
        "base_currency_total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_services_amount": {
          "type": "string"
        },
        "base_currency_total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rates_breakdown": {
          "items": {
            "$ref": "#/definitions/invoicesPutResDetailed_tax_analysisTax_rates_breakdown"
          },
          "type": "array"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_goods_amount": {
          "type": "string"
        },
        "total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_retailer_tax": {
          "type": "string"
        },
        "total_services_amount": {
          "type": "string"
        },
        "total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "type": "object"
    },
    "vendorsPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/6dd371275d82432d856134360da45645"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/vendorsPutResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/vendorsPutResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "currency": {
          "$ref": "#/definitions/vendorsPutResCurrency"
        },
        "default_purchase_ledger_account": {
          "$ref": "#/definitions/vendorsPutResDefault_purchase_ledger_account"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "qwer"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "6dd371275d82432d856134360da45645"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/vendorsPutResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/vendorsPutResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/vendorsPutResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "qwer"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-alias": "externalid",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/vendorsPutResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:58Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPutResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetAllResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/7942c14d9b32480e97749b471327e01d"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "CN00011"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "7942c14d9b32480e97749b471327e01d"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "customersGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "aux_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/customersGetByIdResBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/customersGetByIdResContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "credit_limit": {
          "format": "int32",
          "type": "string",
          "x-alias": "creditLimit",
          "x-samplevalue": 0
        },
        "credit_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency": {
          "$ref": "#/definitions/customersGetByIdResCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/customersGetByIdResDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "$ref": "#/definitions/customersGetByIdResDefault_sales_tax_rate"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "delivery_address": {
          "$ref": "#/definitions/customersGetByIdResDelivery_address"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "sravan updated"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "ss@slab.com"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "bbeebb6d30434fc699cd4a033af1ecfa"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3086675
        },
        "links": {
          "items": {
            "$ref": "#/definitions/customersGetByIdResLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/customersGetByIdResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/customersGetByIdResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "sravan updated"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/customersGetByIdResProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "registered_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/customersGetByIdResTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:29:27Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "addressGetAllResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "customersGetAllResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/a849fad445e74b7d8c8bc29142d3d5a0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a849fad445e74b7d8c8bc29142d3d5a0"
        }
      },
      "type": "object"
    },
    "productSalesPriceTypesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": true,
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T19:18:34Z"
        }
      },
      "title": "productSalesPriceTypesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "invoicesGetAllResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResInvoice_linesProduct": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/015aaaf5f8ae11e7a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "lines[*].product.name",
          "x-samplevalue": "This is a sample product"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].product.id",
          "x-samplevalue": "015aaaf5f8ae11e7a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "ledgerAccountsPutResLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-alias": "accCategory",
          "x-samplevalue": "EXPENSE"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/salesCreditNotesPutResContactDefault_sales_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "4000 - Professional Fees"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/salesCreditNotesPutResContactDefault_sales_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/salesCreditNotesPutResContactDefault_sales_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Professional Fees"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4000
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_receipt",
            "reporting",
            "sales"
          ]
        }
      },
      "title": "default_sales_ledger_account",
      "type": "object"
    },
    "contactsGetAllResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "60440"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "contactPersonsGetByIdContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "salesCreditNotesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_credit_notes/50309708313411e8a8f11281a7acf536"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesGetByIdResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "cej6k566"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:28:58Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesGetByIdResCredit_note_lines"
          },
          "type": "array"
        },
        "credit_note_number": {
          "type": "string",
          "x-samplevalue": "SCN-1"
        },
        "credit_note_number_prefix": {
          "type": "string",
          "x-samplevalue": "SCN-"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesGetByIdResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-27T09:38:03Z"
        },
        "delivery_address": {
          "type": "string"
        },
        "delivery_address_free_form": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SCN-1"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "50309708313411e8a8f11281a7acf536"
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "last_paid": {
          "type": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1217478
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesGetByIdResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "type": "string"
        },
        "main_address_free_form": {
          "type": "string"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "Some notes about the invoice"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "CN000111"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/salesCreditNotesGetByIdResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesGetByIdResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string"
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "type": "string"
        },
        "transaction_type": {
          "$ref": "#/definitions/salesCreditNotesGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-27T09:38:03Z"
        },
        "void_reason": {
          "type": "string",
          "x-samplevalue": "Temporary Reason"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesCreditNotesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPutResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesCreditNotesPutResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/a4dfbbda40c4433695680cf18cc805a3"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3493
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesPutResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:27:13Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a4dfbbda40c4433695680cf18cc805a3"
        },
        "origin": {
          "$ref": "#/definitions/salesCreditNotesPutResTransactionOrigin"
        },
        "reference": {
          "type": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/salesCreditNotesPutResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:27:13Z"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "salesQuotesPutResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "account_number": {
          "type": "string",
          "x-samplevalue": "60440"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "title": "bank_account_details",
      "type": "object"
    },
    "paymentsPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "vendorsPutResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "journalEntriesPostResJournal_linesLedger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/DIRECT_EXPENSES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Direct Expenses"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DIRECT_EXPENSES"
        }
      },
      "title": "ledger_account_type",
      "type": "object"
    },
    "salesCreditNotesPutResContactMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "salesQuotesPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_quotes/fd737296763147749d4a8050f96d83d6"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "salesCreditNotesGetAllResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "vendorsPutResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "purchaseInvoicesGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "vendor.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-alias": "vendor.id",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "transactionsGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        }
      },
      "title": "contact",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Addison"
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/purchaseCreditNotesPutResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "75254"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "purchaseCreditNotesPostResContactDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactDefault_purchase_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "7200 - General Expenses"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactDefault_purchase_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactDefault_purchase_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7200
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "title": "default_purchase_ledger_account",
      "type": "object"
    },
    "servicesGetByIdResSales_rates": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-06-06T21:25:28Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Rate"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2264dee769d011e8863412a7e3287944"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2674018
        },
        "rate": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "rate_includes_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "rate_name": {
          "type": "string",
          "x-samplevalue": "Rate"
        },
        "service_rate_type": {
          "$ref": "#/definitions/servicesGetByIdResSales_ratesService_rate_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-06-06T21:25:28Z"
        }
      },
      "title": "sales_rates",
      "type": "object"
    },
    "attachmentsPutResAttachment_context": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/bfbe0e05503811e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13880847"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "bfbe0e05503811e695ab0ed51759bcc7"
        }
      },
      "title": "attachment_context",
      "type": "object"
    },
    "transactionsGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesCreditNotesGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "customersPutResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/a199ec921f844fbea769a0a42cd0e00f"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "A building\nA street\nPune\nMH\n411011\nIndia"
        },
        "id": {
          "type": "string",
          "x-alias": "shippingAddress.id",
          "x-samplevalue": "a199ec921f844fbea769a0a42cd0e00f"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutReqCredit_note_lines"
          },
          "type": "array"
        },
        "credit_note_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "credit_note_number_prefix": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15"
        },
        "delivery_address": {
          "$ref": "#/definitions/salesCreditNotesPutReqDelivery_address"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "main_address": {
          "$ref": "#/definitions/salesCreditNotesPutReqMain_address"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "shipping_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutReqTax_analysis"
          },
          "type": "array"
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "salesCreditNotesPutReq",
      "type": "object"
    },
    "purchaseCreditNotesGetAllResCredit_note_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/5c431741365711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sonali 1.90%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5c431741365711e8a8f11281a7acf536"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "vendorsPostReqTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_credit_notes/e8bf27f9efb14dbd99afce4251b79e99"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesPutResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:27:12Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResCredit_note_lines"
          },
          "type": "array"
        },
        "credit_note_number": {
          "type": "string",
          "x-samplevalue": "SCN-157"
        },
        "credit_note_number_prefix": {
          "type": "string",
          "x-samplevalue": "SCN-"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesPutResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/salesCreditNotesPutResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string"
        },
        "detailed_tax_analysis": {
          "$ref": "#/definitions/salesCreditNotesPutResDetailed_tax_analysis"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SCN-157"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e8bf27f9efb14dbd99afce4251b79e99"
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/salesCreditNotesPutResMain_address"
        },
        "main_address_free_form": {
          "type": "string"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string"
        },
        "shipping_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/salesCreditNotesPutResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string"
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/salesCreditNotesPutResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/salesCreditNotesPutResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:31:35Z"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "salesCreditNotesPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPutResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        }
      },
      "type": "object"
    },
    "productsPutReqSales_prices": {
      "properties": {
        "price": {
          "format": "int32",
          "type": "string",
          "x-alias": "priceList[*].price",
          "x-samplevalue": "0.0"
        },
        "price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "price_name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "product_sales_price_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/salesQuotesPutResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 78
        },
        "credit_limit": {
          "type": "string",
          "x-samplevalue": "482.0"
        },
        "credit_terms_and_conditions": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/salesQuotesPutResContactCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/salesQuotesPutResContactDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_address": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "email": {
          "type": "string"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/salesQuotesPutResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/salesQuotesPutResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "goodada"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/salesQuotesPutResContactProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/salesQuotesPutResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:49:41Z"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "invoicesPutReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "businessCountry": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "invoicesGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_INVOICE"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 21
        }
      },
      "type": "object"
    },
    "salesQuotesPutResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "invoicesPostResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/c2a874990b5b11e8a8f11281a7acf536"
        },
        "address": {
          "$ref": "#/definitions/invoicesPostResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/invoicesPostResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string",
          "x-alias": "customer.contact.email"
        },
        "fax": {
          "type": "string",
          "x-alias": "customer.contact.fax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a874990b5b11e8a8f11281a7acf536"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "customer.contact.mobile"
        },
        "name": {
          "type": "string",
          "x-alias": "customer.contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-alias": "customer.contact.phone"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "type": "object"
    },
    "paymentsPutReqPayment_on_account": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        }
      },
      "type": "object"
    },
    "productsPutResSales_prices": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-alias": "priceList[*].id",
          "x-samplevalue": "e33c471f911049a9aee7a2e673bb697d"
        },
        "price": {
          "format": "int32",
          "type": "string",
          "x-alias": "priceList[*].price",
          "x-samplevalue": "0.0"
        },
        "price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "price_name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/productsPutResSales_pricesProduct_sales_price_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        }
      },
      "type": "object"
    },
    "taxRatesPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/c75f69f28b97489ebc68c4c3103f3c26"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:50:50Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "My Tax Rate 0.00%"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c75f69f28b97489ebc68c4c3103f3c26"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "My Tax Rate"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/taxRatesPutResPercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:51:54Z"
        }
      },
      "title": "taxRatesPutRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "taxRatesPutReq": {
      "properties": {
        "agency": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "from_date": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:47:28Z"
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "taxRatesPutReq",
      "type": "object"
    },
    "invoicesGetByIdResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4b96f89e50d04e1ab17918b24a718013"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_credit_notes/12b4c03f568e4cd98febdd9a02456518"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "salesCreditNotesPostResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_credit_notes/0ea96070b0784d6895a5b9c57e13b9ee"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "purchaseInvoicesPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "paymentsGetAllResPayment_on_accountContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "productsGetByIdResSales_prices": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-alias": "priceList[*].id",
          "x-samplevalue": "e33c471f911049a9aee7a2e673bb697d"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2293540
        },
        "price": {
          "format": "int32",
          "type": "string",
          "x-alias": "priceList[*].price",
          "x-samplevalue": "0.0"
        },
        "price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "price_name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/productsGetByIdResSales_pricesProduct_sales_price_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        }
      },
      "type": "object"
    },
    "customersGetByIdResDefault_sales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/5c431741365711e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sonali 1.90%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "5c431741365711e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "paymentsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "bank_account": {
          "$ref": "#/definitions/paymentsGetByIdResBank_account"
        },
        "base_currency_currency_charge": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsGetByIdResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsGetByIdResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "paymentDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "re392"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "4823d330f9bc4fab987af85f53bdc960"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 6783569
        },
        "links": {
          "items": {
            "$ref": "#/definitions/paymentsGetByIdResLinks"
          },
          "type": "array"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payment_method": {
          "$ref": "#/definitions/paymentsGetByIdResPayment_method"
        },
        "payment_on_account": {
          "$ref": "#/definitions/paymentsGetByIdResPayment_on_account"
        },
        "reference": {
          "type": "string",
          "x-alias": "reference",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "240.0"
        },
        "transaction": {
          "$ref": "#/definitions/paymentsGetByIdResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/paymentsGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseCreditNotesPutResContactDefault_purchase_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "title": "ledger_account_type",
      "type": "object"
    },
    "paymentsPutResPayment_on_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_payments/4823d330f9bc4fab987af85f53bdc960"
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "contact": {
          "$ref": "#/definitions/paymentsPutResPayment_on_accountContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:26:26Z"
        },
        "currency": {
          "$ref": "#/definitions/paymentsPutResPayment_on_accountCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "re392"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "79415576cb56475f873e3cce3e45e42f"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "outstanding_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "status": {
          "$ref": "#/definitions/paymentsPutResPayment_on_accountStatus"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "240.0"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:27:34Z"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResQuote_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "vendorsPostResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "customersGetAllResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "addressesGetByIdResAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "salesQuotesPostResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "salesCreditNotesPostResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "purchaseCreditNotesPostResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "base_currency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "base_currency",
      "type": "object",
      "x-has-customfields": false,
      "x-primary-key": [
        "id"
      ],
      "x-vendor-objectname": "currencies"
    },
    "otherPaymentsPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/other_payments/d66abb15fa7b4242a481ac4571cb417a"
        },
        "bank_account": {
          "$ref": "#/definitions/otherPaymentsPostResBank_account"
        },
        "contact": {
          "$ref": "#/definitions/otherPaymentsPostResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:14:23Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d66abb15fa7b4242a481ac4571cb417a"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "payment_lines": {
          "items": {
            "$ref": "#/definitions/otherPaymentsPostResPayment_lines"
          },
          "type": "array"
        },
        "payment_method": {
          "$ref": "#/definitions/otherPaymentsPostResPayment_method"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "transaction": {
          "$ref": "#/definitions/otherPaymentsPostResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/otherPaymentsPostResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:14:23Z"
        }
      },
      "title": "otherPaymentsPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "otherPaymentsPostReq": {
      "properties": {
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "base_currency_total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15",
          "x-required": true
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "part_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "payment_lines": {
          "items": {
            "$ref": "#/definitions/otherPaymentsPostReqPayment_lines"
          },
          "type": "array",
          "x-required": true
        },
        "payment_method_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "total_itc_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "total_itr_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "transaction_type_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "otherPaymentsPostReq",
      "type": "object",
      "required": [
        "date",
        "payment_lines",
        "total_amount",
        "transaction_type_id"
      ]
    },
    "paymentsPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/advanced_uk/supplier_expense_payments/13136249"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "contactAllocationsGetAllResAllocated_artefactsArtefactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "links",
      "type": "object"
    },
    "customersPostResDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "type": "object"
    },
    "ledgerAccountsPutResTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/61cb43572c2e11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "My Tax Rate 20.00%"
        },
        "id": {
          "type": "string",
          "x-alias": "taxCode",
          "x-samplevalue": "61cb43572c2e11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesCreditNotesPutResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesCreditNotesPutResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesCreditNotesPutResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "1e8ed71253b14ed19e6fabf7172c9a60"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "taxProfilesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_region": {
          "$ref": "#/definitions/taxProfilesGetAllResAddress_region"
        },
        "collect_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:47:28Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_number_suffix": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_return_frequency": {
          "$ref": "#/definitions/taxProfilesGetAllResTax_return_frequency"
        },
        "tax_type": {
          "$ref": "#/definitions/taxProfilesGetAllResTax_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T10:47:28Z"
        }
      },
      "title": "taxProfilesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "BulkJobList": {
      "title": "BulkJobList",
      "properties": {
        "record_count": {
          "x-samplevalue": 41,
          "format": "int32",
          "type": "integer"
        },
        "job_query": {
          "x-samplevalue": "SELECT attributes.organizationid, attributes.systemuserid, organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'",
          "type": "string"
        },
        "job_reset_attempt": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "completion_time": {
          "x-samplevalue": 1542829827804,
          "format": "int64",
          "type": "integer"
        },
        "status": {
          "x-samplevalue": "COMPLETED",
          "type": "string"
        },
        "notification_url": {
          "type": "string"
        },
        "job_direction": {
          "x-samplevalue": "DOWNLOAD",
          "type": "string"
        },
        "error_count": {
          "x-samplevalue": 0,
          "format": "int32",
          "type": "integer"
        },
        "job_state": {
          "type": "string"
        },
        "createdDate": {
          "x-samplevalue": 1542829826619,
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "x-samplevalue": 1722,
          "format": "int32",
          "type": "integer"
        },
        "instanceId": {
          "x-samplevalue": 123453,
          "format": "int32",
          "type": "integer"
        },
        "object_name": {
          "x-samplevalue": "systemuser",
          "type": "string"
        },
        "fileFormat": {
          "x-samplevalue": "csv",
          "type": "string"
        }
      },
      "type": "object"
    },
    "invoicesPutResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "type": "object"
    },
    "businessesGetByIdResCountry": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "productsGetByIdResPurchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-alias": "assetAccount",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534867
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "customersGetAllResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e66cd2a7270e48979a6756039a98aad8"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "e66cd2a7270e48979a6756039a98aad8"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesGetByIdResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "artefactStatusesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "artefactStatusesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "invoicesPutResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_INVOICE"
        }
      },
      "type": "object"
    },
    "servicesGetAllResSales_rates": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-26T20:13:02Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Rate"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "8aaf250ad95b11e8a2b70e070fead9d0"
        },
        "rate": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "rate_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "rate_name": {
          "type": "string",
          "x-samplevalue": "Rate"
        },
        "service_rate_type": {
          "$ref": "#/definitions/servicesGetAllResSales_ratesService_rate_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-26T20:13:02Z"
        }
      },
      "title": "sales_rates",
      "type": "object"
    },
    "invoicesPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "otherPaymentsPutReqPayment_lines": {
      "properties": {
        "details": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "pst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "payment_lines",
      "type": "object"
    },
    "customersPostReqTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "invoicesPostResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/invoicesPostResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/invoicesPostResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 78
        },
        "credit_limit": {
          "type": "string",
          "x-samplevalue": "482.0"
        },
        "credit_terms_and_conditions": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/invoicesPostResContactCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/invoicesPostResContactDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_address": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "email": {
          "type": "string"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesPostResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesPostResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/invoicesPostResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "goodada"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/invoicesPostResContactProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/invoicesPostResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:49:41Z"
        }
      },
      "type": "object"
    },
    "invoicesPostResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetAllResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        }
      },
      "title": "payment_method",
      "type": "object"
    },
    "salesCreditNotesPostReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "salesCreditNotesPutResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "invoicesPutResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "country": {
      "properties": {
        "displayed_as": {
          "description": "Display text for the country",
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the country",
          "type": "string"
        }
      },
      "type": "object"
    },
    "invoicesPutResDetailed_tax_analysisTax_rates_breakdown": {
      "properties": {
        "base_currency_goods_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_services_amount": {
          "type": "string"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "goods_amount": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "retail_tax_amount": {
          "type": "string"
        },
        "services_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesPutResDetailed_tax_analysisTax_rates_breakdownTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_credit_notes/2910c2cedb9311e8a2b70e070fead9d0"
        },
        "base_currency_cis_applicable_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "type": "string"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "base_currency_total_itc_amount": {
          "type": "string"
        },
        "base_currency_total_itr_amount": {
          "type": "string"
        },
        "base_currency_withholding_tax_amount": {
          "type": "string"
        },
        "cis_applicable_amount": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesGetByIdResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "contact_reference": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-10-29T15:56:13Z"
        },
        "credit_note_lines": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesGetByIdResCredit_note_lines"
          },
          "type": "array"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesGetByIdResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2018-05-18"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "05/18/2018 - 1.00"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "2910c2cedb9311e8a2b70e070fead9d0"
        },
        "import": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "inverse_exchange_rate": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "last_paid": {
          "type": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2019840
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesGetByIdResLinks"
          },
          "type": "array"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "note"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "part_recoverable": {
          "type": "string"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "postponed_accounting": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string"
        },
        "status": {
          "$ref": "#/definitions/purchaseCreditNotesGetByIdResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "total_after_cis_deduction": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "total_itc_amount": {
          "type": "string"
        },
        "total_itr_amount": {
          "type": "string"
        },
        "total_paid": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "transaction": {
          "$ref": "#/definitions/purchaseCreditNotesGetByIdResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/purchaseCreditNotesGetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T19:26:04Z"
        },
        "vendor_reference": {
          "type": "string"
        },
        "void_reason": {
          "type": "string"
        },
        "withholding_tax_amount": {
          "type": "string"
        },
        "withholding_tax_rate": {
          "type": "string"
        }
      },
      "title": "purchaseCreditNotesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPutResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "aux_reference": {
          "type": "string"
        },
        "bank_account_details": {
          "$ref": "#/definitions/salesCreditNotesPutResContactBank_account_details"
        },
        "cis_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_settings": {
          "type": "string"
        },
        "contact_types": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResContactContact_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 78
        },
        "credit_limit": {
          "type": "string",
          "x-samplevalue": "482.0"
        },
        "credit_terms_and_conditions": {
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesPutResContactCurrency"
        },
        "default_sales_ledger_account": {
          "$ref": "#/definitions/salesCreditNotesPutResContactDefault_sales_ledger_account"
        },
        "default_sales_tax_rate": {
          "type": "string"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_address": {
          "type": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "email": {
          "type": "string"
        },
        "gdpr_obfuscated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_unfinished_recurring_invoices": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResContactLinks"
          },
          "type": "array"
        },
        "locale": {
          "type": "string",
          "x-samplevalue": "en-US"
        },
        "main_address": {
          "$ref": "#/definitions/salesCreditNotesPutResContactMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/salesCreditNotesPutResContactMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "goodada"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/salesCreditNotesPutResContactProduct_sales_price_type"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "registered_number": {
          "type": "string"
        },
        "source_guid": {
          "type": "string"
        },
        "system": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "tax_calculation": {
          "type": "string"
        },
        "tax_number": {
          "type": "string"
        },
        "tax_treatment": {
          "$ref": "#/definitions/salesCreditNotesPutResContactTax_treatment"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:49:41Z"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_CREDIT_NOTE"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 17
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "salesCreditNotesGetAllResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "vendorsPutResDefault_purchase_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expenditure"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPENSE"
        }
      },
      "type": "object"
    },
    "journalEntriesPostResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/JOURNAL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Journal"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "JOURNAL"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "paymentsPutReqAllocated_artefacts": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "artefact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResContactDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "title": "ledger_account_group",
      "type": "object"
    },
    "salesQuotesGetAllResTax_analysis": {
      "properties": {
        "goods_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "service_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesGetAllResTax_analysisTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "purchaseInvoicesPostResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/633117"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "customersPostResMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e66cd2a7270e48979a6756039a98aad8"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e66cd2a7270e48979a6756039a98aad8"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Addison"
        },
        "contact": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/purchaseCreditNotesPostResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "75254"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        }
      },
      "title": "main_address",
      "type": "object"
    },
    "customersPutResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "productsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/22ff40a429564bd3a7e0ada89e74ac56"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "catalog_item_type": {
          "$ref": "#/definitions/productsGetByIdResCatalog_item_type"
        },
        "cost_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-samplevalue": "0.0"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "deactivatable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-samplevalue": "Product 1 updated"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Product 1 updated"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "22ff40a429564bd3a7e0ada89e74ac56"
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "200715093440470-271"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 636351
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_description": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-samplevalue": "string"
        },
        "purchase_ledger_account": {
          "$ref": "#/definitions/productsGetByIdResPurchase_ledger_account"
        },
        "purchase_tax_rate": {
          "type": "string"
        },
        "sales_ledger_account": {
          "$ref": "#/definitions/productsGetByIdResSales_ledger_account"
        },
        "sales_prices": {
          "items": {
            "$ref": "#/definitions/productsGetByIdResSales_prices"
          },
          "type": "array"
        },
        "sales_tax_rate": {
          "$ref": "#/definitions/productsGetByIdResSales_tax_rate"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:50Z"
        },
        "used_on_recurring_invoice": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "usual_supplier": {
          "$ref": "#/definitions/productsGetByIdResUsual_supplier"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPutResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "invoicesPutResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "invoicesGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResContactDefault_purchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dae0126e4d1611e695ab0ed51759bcc7"
        },
        "balance_details": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactDefault_purchase_ledger_accountBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "7200 - General Expenses"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "General Expenses (7200)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dae0126e4d1611e695ab0ed51759bcc7"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactDefault_purchase_ledger_accountLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/purchaseInvoicesPutResContactDefault_purchase_ledger_accountLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "General Expenses"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 7200
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "type": "object"
    },
    "ledgerEntriesGetByIdResLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadf8d694d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts Payable (2000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadf8d694d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "bankAccountsPostResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "address",
      "type": "object"
    },
    "salesCreditNotesPostReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "vendorsGetByIdResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/72a60666942a4908bb1c339e0476729c"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "72a60666942a4908bb1c339e0476729c"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 405562
        }
      },
      "type": "object"
    },
    "vendorsPutReqMain_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "liveExchangeRatesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/live_exchange_rates/AUD"
        },
        "base_currency": {
          "$ref": "#/definitions/liveExchangeRatesGetByIdResBase_currency"
        },
        "currency": {
          "$ref": "#/definitions/liveExchangeRatesGetByIdResCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "USD -> AUD"
        },
        "inverse_rate": {
          "type": "string",
          "x-samplevalue": "0.695803768"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "rate": {
          "type": "string",
          "x-samplevalue": "1.4371868132"
        },
        "retrieved_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-14T20:00:02Z"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-14T00:00:00Z"
        }
      },
      "title": "liveExchangeRatesGetByIdRes",
      "type": "object"
    },
    "salesQuoteGetByIdResTax_analysisTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "customersGetByIdResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/e66cd2a7270e48979a6756039a98aad8"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "e66cd2a7270e48979a6756039a98aad8"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2671718
        }
      },
      "type": "object"
    },
    "salesQuotesPutResStatus": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expired"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "EXPIRED"
        }
      },
      "title": "status",
      "type": "object"
    },
    "invoicesPostResTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "service_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/invoicesPostResTax_analysisTax_rate"
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "taxRatesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da2cbd67bf5211e8a2b70e070fead9d0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "My Tax Rate 20.00%"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da2cbd67bf5211e8a2b70e070fead9d0",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "taxRatesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "countryGroupsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/CA"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Canada"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2
        }
      },
      "title": "countryGroupsGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "taxRatesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "agency": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "is_combined_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "is_visible": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "percentages": {
          "items": {
            "$ref": "#/definitions/taxRatesGetByIdResPercentages"
          },
          "type": "array"
        },
        "retailer": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        }
      },
      "title": "taxRatesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "servicesGetByIdResUsual_supplier": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/206457900b5c11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "name632 (re897)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "206457900b5c11e8a8f11281a7acf536"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3086691
        }
      },
      "title": "usual_supplier",
      "type": "object"
    },
    "journalEntriesGetAllResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/JOURNAL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Journal"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "JOURNAL"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "addressesGetByIdResCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "financialSettingsBase_currency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "base_currency",
      "type": "object"
    },
    "paymentsPutResPayment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-alias": "paymentMethod",
          "x-samplevalue": "CHECK"
        }
      },
      "type": "object"
    },
    "otherPaymentsGetByIdResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633117
        }
      },
      "title": "contact",
      "type": "object"
    },
    "purchaseInvoicesPutResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Bill"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactDefault_purchase_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "351.36"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "837.47"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "1188.83"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "balance_details",
      "type": "object"
    },
    "vendorsPutResDefault_purchase_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/OVERHEADS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Overheads"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "OVERHEADS"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResCredit_note_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/f0b70559479211e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "cevungk5 (4692)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "f0b70559479211e8a8f11281a7acf536"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "customersGetByIdResDefault_sales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534860
        }
      },
      "type": "object"
    },
    "invoicesPostResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "type": "object"
    },
    "productsGetAllResSales_pricesProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "salesCreditNotesPutResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_credit_notes/e8bf27f9efb14dbd99afce4251b79e99"
        },
        "currency": {
          "$ref": "#/definitions/salesCreditNotesPutResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SCN-157"
        },
        "due_date": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "e8bf27f9efb14dbd99afce4251b79e99"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/salesCreditNotesPutResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "status": {
          "$ref": "#/definitions/salesCreditNotesPutResTransactionOriginStatus"
        }
      },
      "title": "origin",
      "type": "object"
    },
    "taxProfilesGetByIdResAddress_region": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "code": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "address_region",
      "type": "object"
    },
    "salesQuotesPostResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/3086675"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoicesPutResTransactionOriginLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "productsPutRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/products/22ff40a429564bd3a7e0ada89e74ac56"
        },
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "catalog_item_type": {
          "$ref": "#/definitions/productsPutResCatalog_item_type"
        },
        "cost_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-samplevalue": "0.0"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "deactivatable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "description": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-samplevalue": "Product 1 updated"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "name",
          "x-samplevalue": "Product 1 updated"
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "22ff40a429564bd3a7e0ada89e74ac56"
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "200715093440470-271"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_description": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-samplevalue": "string"
        },
        "purchase_ledger_account": {
          "$ref": "#/definitions/productsPutResPurchase_ledger_account"
        },
        "purchase_tax_rate": {
          "type": "string"
        },
        "sales_ledger_account": {
          "$ref": "#/definitions/productsPutResSales_ledger_account"
        },
        "sales_prices": {
          "items": {
            "$ref": "#/definitions/productsPutResSales_prices"
          },
          "type": "array"
        },
        "sales_tax_rate": {
          "$ref": "#/definitions/productsPutResSales_tax_rate"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:50Z"
        },
        "used_on_recurring_invoice": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "usual_supplier": {
          "$ref": "#/definitions/productsPutResUsual_supplier"
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseInvoicesPutResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/304089e24d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "304089e24d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "paymentsPostResPayment_on_accountCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "productsPutReq": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-alias": "active",
          "x-samplevalue": true
        },
        "catalog_item_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "cost_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "cost",
          "x-samplevalue": "0.0"
        },
        "description": {
          "type": "string",
          "x-alias": "salesDescription",
          "x-samplevalue": "Product 1 updated"
        },
        "item_code": {
          "type": "string",
          "x-samplevalue": "200715093440470-271"
        },
        "notes": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_description": {
          "type": "string",
          "x-alias": "purchaseDescription",
          "x-samplevalue": "string"
        },
        "purchase_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "purchase_tax_rate_id": {
          "type": "string",
          "x-alias": "purchaseTaxCode",
          "x-samplevalue": "string"
        },
        "sales_ledger_account_id": {
          "type": "string",
          "x-alias": "cogsAccount",
          "x-samplevalue": "string"
        },
        "sales_prices": {
          "items": {
            "$ref": "#/definitions/productsPutReqSales_prices"
          },
          "type": "array"
        },
        "sales_tax_rate_id": {
          "type": "string",
          "x-alias": "salesTaxCode",
          "x-samplevalue": "string"
        },
        "source_guid": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "usual_supplier_id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "paymentsGetAllResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/advanced_uk/supplier_expense_payments/13136249"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResContactDefault_sales_ledger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "400.0"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "credit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "600.0"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "200.0"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "balance_details",
      "type": "object"
    },
    "salesCreditNotesPostResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "invoicesPostResContactDefault_sales_ledger_accountLedger_account_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_account_types/SALES"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES"
        }
      },
      "type": "object"
    },
    "journalEntriesGetAllResJournal_lines": {
      "properties": {
        "bank_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cleared": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "credit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "debit": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "details": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "449b886523074c9f959b0a03d09a0ce4"
        },
        "include_on_tax_return": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/journalEntriesGetAllResJournal_linesLedger_account"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "journal_lines",
      "type": "object"
    },
    "salesCreditNotesPostResContactTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "customersPutResContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "type": "object"
    },
    "paymentsPutResPayment_on_accountStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "swaggerdefinition-name": {
      "x-has-customfields": false,
      "type": "object",
      "title": "definition-name",
      "properties": {
        "properties": {
          "$ref": "#/definitions/swaggerproperties"
        }
      }
    },
    "purchaseInvoicesPostResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesPostResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c701fd96fef94e118305a253f7eb8f1c"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "status": {
          "$ref": "#/definitions/purchaseInvoicesPostResTransactionOriginStatus"
        }
      },
      "type": "object"
    },
    "customersPostResMain_addressCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.country",
          "x-samplevalue": "US"
        }
      },
      "type": "object"
    },
    "bankAccountsGetAllResDefault_payment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        }
      },
      "title": "default_payment_method",
      "type": "object"
    },
    "paymentsGetAllResAllocated_artefacts": {
      "properties": {
        "amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "artefact": {
          "$ref": "#/definitions/paymentsGetAllResAllocated_artefactsArtefact"
        },
        "discount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ff380321d2ed11e8a2b70e070fead9d0"
        }
      },
      "type": "object"
    },
    "otherPaymentsPostReqPayment_lines": {
      "properties": {
        "details": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string",
          "x-required": true
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "pst_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0,
          "x-required": true
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "payment_lines",
      "type": "object",
      "required": [
        "ledger_account_id",
        "total_amount"
      ]
    },
    "vendorsGetByIdResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "invoicesPutResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResDetailed_tax_analysisTax_rates_breakdown": {
      "properties": {
        "base_currency_goods_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_services_amount": {
          "type": "string"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "goods_amount": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "retail_tax_amount": {
          "type": "string"
        },
        "services_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesPutResDetailed_tax_analysisTax_rates_breakdownTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        }
      },
      "title": "tax_rates_breakdown",
      "type": "object"
    },
    "addressesGetByIdResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 149284
        }
      },
      "title": "bank_account",
      "type": "object"
    },
    "salesCreditNotesPutResTransactionTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "vendorsPostResMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/72a60666942a4908bb1c339e0476729c"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "corporateAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "corporateAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/vendorsPostResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "corporateAddress.city",
          "x-samplevalue": "string"
        },
        "contact": {
          "$ref": "#/definitions/vendorsPostResMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/vendorsPostResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/vendorsPostResMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr\nAddison 75254"
        },
        "id": {
          "type": "string",
          "x-alias": "corporateAddress.id",
          "x-samplevalue": "72a60666942a4908bb1c339e0476729c"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "corporateAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "corporateAddress.province",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T11:29:42Z"
        }
      },
      "type": "object"
    },
    "invoicesPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/fd7599d2d0344e7aa84daa93f2933a01"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3484
        },
        "contact": {
          "$ref": "#/definitions/invoicesPostResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "id": {
          "type": "string",
          "x-alias": "externalId",
          "x-samplevalue": "fd7599d2d0344e7aa84daa93f2933a01"
        },
        "origin": {
          "$ref": "#/definitions/invoicesPostResTransactionOrigin"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/invoicesPostResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/4bbfb22e045c4b389e6b1b4756a11107"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3494
        },
        "contact": {
          "$ref": "#/definitions/salesCreditNotesPostResTransactionContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T19:21:03Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "4bbfb22e045c4b389e6b1b4756a11107"
        },
        "origin": {
          "$ref": "#/definitions/salesCreditNotesPostResTransactionOrigin"
        },
        "reference": {
          "type": "string"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/salesCreditNotesPostResTransactionTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T19:21:03Z"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "purchaseCreditNotesGetAllResCredit_note_lines": {
      "properties": {
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "707c9958cfc84ab7849bc1c6c422523d"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResCredit_note_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResCredit_note_linesProduct"
        },
        "pst_amount": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/purchaseCreditNotesGetAllResCredit_note_linesTax_rate"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "salesCreditNotesGetByIdResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/VOID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Void"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VOID"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4
        }
      },
      "title": "status",
      "type": "object"
    },
    "customersPutResDefault_sales_ledger_accountLedger_account_group": {
      "properties": {
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Income"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "INCOME"
        }
      },
      "type": "object"
    },
    "customersPutResMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_credit_notes/12b4c03f568e4cd98febdd9a02456518"
        },
        "currency": {
          "$ref": "#/definitions/purchaseCreditNotesPutResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "01/01/2016 - 100.00"
        },
        "due_date": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "12b4c03f568e4cd98febdd9a02456518"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseCreditNotesPutResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "status": {
          "$ref": "#/definitions/purchaseCreditNotesPutResTransactionOriginStatus"
        }
      },
      "title": "origin",
      "type": "object"
    },
    "purchaseCreditNotesPutResTransactionOriginStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "swaggerDocs": {
      "x-has-customfields": false,
      "title": "swaggerDocs",
      "properties": {
        "basePath": {
          "x-samplevalue": "/elements/api-v2/hubs/crm",
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/swaggerpaths"
        },
        "host": {
          "x-samplevalue": "localhost:5050",
          "type": "string"
        },
        "schemes": {
          "x-samplevalue": [
            "http"
          ],
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "definitions": {
          "$ref": "#/definitions/swaggerdefinitions"
        },
        "swagger": {
          "x-samplevalue": "2.0",
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/swaggerinfo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/swaggertags"
          }
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "customersPutResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/a849fad445e74b7d8c8bc29142d3d5a0"
        },
        "address": {
          "$ref": "#/definitions/customersPutResMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/customersPutResMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string",
          "x-alias": "contact.email",
          "x-samplevalue": "string"
        },
        "fax": {
          "type": "string",
          "x-alias": "contact.fax",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a849fad445e74b7d8c8bc29142d3d5a0"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "contact.mobile",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:24:57Z"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "journalEntriesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/journals/ace893af313111e8a8f11281a7acf536"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:10:05Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "A journal description"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ace893af313111e8a8f11281a7acf536",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "journal_code": {
          "type": "string"
        },
        "journal_lines": {
          "items": {
            "$ref": "#/definitions/journalEntriesGetAllResJournal_lines"
          },
          "type": "array"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "transaction": {
          "$ref": "#/definitions/journalEntriesGetAllResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/journalEntriesGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-03-26T20:10:05Z"
        }
      },
      "title": "journalEntriesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "productsPostResSales_pricesProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/3086675"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoiceSettings": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/invoice_settings"
        },
        "customer_credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "default_note_on_credit_note": {
          "type": "string"
        },
        "default_note_on_invoice": {
          "type": "string"
        },
        "delivery_note_show_contact_details": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_note_show_notes": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_note_show_picked": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_note_show_signature": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "delivery_note_terms_and_conditions": {
          "type": "string"
        },
        "document_headings": {
          "$ref": "#/definitions/invoiceSettingsDocument_headings"
        },
        "estimate_default_days_to_expiry": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "estimate_number_prefix": {
          "type": "string",
          "x-samplevalue": "SE-"
        },
        "estimate_terms_and_conditions": {
          "type": "string"
        },
        "footer_details": {
          "$ref": "#/definitions/invoiceSettingsFooter_details"
        },
        "insurance_area": {
          "type": "string"
        },
        "insurance_text": {
          "type": "string"
        },
        "insurance_type": {
          "type": "string"
        },
        "insurer": {
          "type": "string"
        },
        "invoice_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions for invoices"
        },
        "late_payment_percentage": {
          "type": "string"
        },
        "line_item_titles": {
          "$ref": "#/definitions/invoiceSettingsLine_item_titles"
        },
        "next_credit_note_number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 157
        },
        "next_invoice_number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1190
        },
        "next_quote_number": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1099
        },
        "next_sales_corrective_invoice_number": {
          "type": "string"
        },
        "payment_bank_account": {
          "type": "string"
        },
        "print_contact_details": {
          "$ref": "#/definitions/invoiceSettingsPrint_contact_details"
        },
        "print_statements": {
          "$ref": "#/definitions/invoiceSettingsPrint_statements"
        },
        "prompt_payment_percentage": {
          "type": "string"
        },
        "quick_entry_prefix": {
          "type": "string",
          "x-samplevalue": "QECB-"
        },
        "quote_default_days_to_expiry": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        },
        "quote_number_prefix": {
          "type": "string",
          "x-samplevalue": "SQ-"
        },
        "quote_terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions to include on quotes"
        },
        "sales_corrective_invoice_number_prefix": {
          "type": "string"
        },
        "sales_credit_note_number_prefix": {
          "type": "string",
          "x-samplevalue": "SCN-"
        },
        "sales_invoice_number_prefix": {
          "type": "string",
          "x-samplevalue": "SI-"
        },
        "separate_invoice_credit_note_numbering": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "show_auto_entrepreneur": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "show_insurance": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-14T19:37:21Z"
        },
        "vendor_credit_days": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 30
        }
      },
      "title": "invoiceSettings",
      "type": "object"
    },
    "salesCreditNotesPostResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/3086675"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "contactAllocationsGeetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "allocated_artefacts": {
          "items": {
            "$ref": "#/definitions/contactAllocationsGeetByIdResAllocated_artefacts"
          },
          "type": "array"
        },
        "contact": {
          "$ref": "#/definitions/contactAllocationsGeetByIdResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:12:43Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2020-07-15"
        },
        "deleted_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:12:43Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/contactAllocationsGeetByIdResLinks"
          },
          "type": "array"
        },
        "transaction": {
          "$ref": "#/definitions/contactAllocationsGeetByIdResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/contactAllocationsGeetByIdResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:12:43Z"
        }
      },
      "title": "contactAllocationsGeetByIdRes",
      "type": "object"
    },
    "invoicesPostResDetailed_tax_analysis": {
      "properties": {
        "base_currency_total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_goods_amount": {
          "type": "string"
        },
        "base_currency_total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_services_amount": {
          "type": "string"
        },
        "base_currency_total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rates_breakdown": {
          "items": {
            "$ref": "#/definitions/invoicesPostResDetailed_tax_analysisTax_rates_breakdown"
          },
          "type": "array"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_goods_amount": {
          "type": "string"
        },
        "total_net": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "total_retailer_tax": {
          "type": "string"
        },
        "total_services_amount": {
          "type": "string"
        },
        "total_tax": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "type": "object"
    },
    "servicesGetAllResSales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "sales_tax_rate",
      "type": "object"
    },
    "vendorsPutResBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPutResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "productsPutResSales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "otherPaymentsPutResPayment_lines": {
      "properties": {
        "details": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "gst_amount": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "fefdd081f5464317bab60821af82251d"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/otherPaymentsPutResPayment_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "pst_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "120.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "payment_lines",
      "type": "object"
    },
    "customersPostResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string",
          "x-samplevalue": true
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "paymentsPostResPayment_on_accountStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "salesQuotesPutResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/c2a874990b5b11e8a8f11281a7acf536"
        },
        "address": {
          "$ref": "#/definitions/salesQuotesPutResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/salesQuotesPutResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a874990b5b11e8a8f11281a7acf536"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "title": "main_contact_person",
      "type": "object"
    },
    "otherPaymentsGetAllResPayment_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "invoicesPostResContactMain_address": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesPostResContactMain_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/invoicesPostResContactMain_addressContact"
        },
        "country": {
          "$ref": "#/definitions/invoicesPostResContactMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesPostResContactMain_addressCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_credit_notes/2910c2cedb9311e8a2b70e070fead9d0"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "salesQuoteGetByIdResQuote_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534860
        }
      },
      "title": "ledger_account",
      "type": "object"
    },
    "salesCreditNotesPutReqCredit_note_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "discount_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "discount_percentage": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "eu_goods_services_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "eu_sales_description": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "product_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "unit_price": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": true
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "ledgerAccountsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/de23848576d445b09ca7759bb6867012"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:05:51Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "43454 - cetest"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "cetest"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "cetest (43454)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "gifi_code": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 1000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "de23848576d445b09ca7759bb6867012"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/ledgerAccountsGetByIdResLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/ledgerAccountsGetByIdResLedger_account_type"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534837
        },
        "name": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "cetest"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 43454
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "$ref": "#/definitions/ledgerAccountsGetByIdResTax_rate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:06:11Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "invoicesPutResContactMain_contact_personAddress": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/c2a6daf50b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.contact.address.line1"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a6daf50b5b11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "invoicesPostResMain_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string",
          "x-alias": "billingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "billingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type": {
          "$ref": "#/definitions/invoicesPostResMain_addressAddress_type"
        },
        "city": {
          "type": "string",
          "x-alias": "billingAddress.city",
          "x-samplevalue": "string"
        },
        "country": {
          "$ref": "#/definitions/invoicesPostResMain_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/invoicesPostResMain_addressCountry_group"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "id": {
          "type": "string",
          "x-alias": "billingAddress.id",
          "x-samplevalue": "8e86a6a51abd479b9b5f04eb260de22e"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "billingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "billingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesQuotesPostResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesPostResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesPostResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesPostResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "90f5b93d3d4c4adc988288e65c5da2d3"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "purchaseCreditNotesPostResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "salesCreditNotesPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/sales_credit_notes/0ea96070b0784d6895a5b9c57e13b9ee"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "purchaseInvoicesPutResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/invoicing/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "paymentsPostResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "purchaseCreditNotesGetAllResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        }
      },
      "title": "status",
      "type": "object"
    },
    "paymentsGetByIdResBank_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 149284
        }
      },
      "type": "object"
    },
    "salesQuotesPutResDelivery_address": {
      "properties": {
        "$path": {
          "type": "string"
        },
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "address_type": {
          "$ref": "#/definitions/salesQuotesPutResDelivery_addressAddress_type"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/salesQuotesPutResDelivery_addressCountry"
        },
        "country_group": {
          "$ref": "#/definitions/salesQuotesPutResDelivery_addressCountry_group"
        },
        "displayed_as": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "14634b280af646f58b99ad7419dbe38f"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      },
      "title": "delivery_address",
      "type": "object"
    },
    "salesQuotesPutResDelivery_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "salesQuotesPutResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "title": "contact_types",
      "type": "object"
    },
    "purchaseInvoicesPutResTransactionOrigin": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/purchase_invoices/c701fd96fef94e118305a253f7eb8f1c"
        },
        "currency": {
          "$ref": "#/definitions/purchaseInvoicesPutResTransactionOriginCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "INV0001nm3"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-02-01"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c701fd96fef94e118305a253f7eb8f1c"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPutResTransactionOriginLinks"
          },
          "type": "array"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "status": {
          "$ref": "#/definitions/purchaseInvoicesPutResTransactionOriginStatus"
        }
      },
      "type": "object"
    },
    "attachmentsPutResAttachment_context_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachment_context_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Purchase Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "title": "attachment_context_type",
      "type": "object"
    },
    "contactsGetAllResProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        }
      },
      "title": "product_sales_price_type",
      "type": "object"
    },
    "purchaseCreditNotesPutResContactCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "currency",
      "type": "object"
    },
    "vendorsPostReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "salesQuotesGetAllResProfit_analysis": {
      "properties": {
        "line_breakdown": {
          "items": {
            "$ref": "#/definitions/salesQuotesGetAllResProfit_analysisLine_breakdown"
          },
          "type": "array"
        },
        "total": {
          "$ref": "#/definitions/salesQuotesGetAllResProfit_analysisTotal"
        }
      },
      "title": "profit_analysis",
      "type": "object"
    },
    "bankAccountsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "balance": {
          "type": "string",
          "x-samplevalue": "-78345.1"
        },
        "bank_account_details": {
          "$ref": "#/definitions/bankAccountsGetAllResBank_account_details"
        },
        "bank_account_type": {
          "$ref": "#/definitions/bankAccountsGetAllResBank_account_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "default_payment_method": {
          "$ref": "#/definitions/bankAccountsGetAllResDefault_payment_method"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "journal_code": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string",
          "x-searchable": true,
          "x-searchable-operators": [
            ">="
          ]
        },
        "ledger_account": {
          "$ref": "#/definitions/bankAccountsGetAllResLedger_account"
        },
        "main_address": {
          "$ref": "#/definitions/bankAccountsGetAllResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/bankAccountsGetAllResMain_contact_person"
        },
        "nominal_code": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:45:23Z"
        }
      },
      "title": "bankAccountsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "currenciesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/AUD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Australian Dollar (AUD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "AUD",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "currenciesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "servicesGetByIdResSales_tax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 238119
        }
      },
      "title": "sales_tax_rate",
      "type": "object"
    },
    "objectsMetadataFields": {
      "properties": {
        "mask": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "vendorDisplayName": {
          "type": "string"
        },
        "vendorPath": {
          "type": "string"
        },
        "vendorReadOnly": {
          "type": "boolean"
        },
        "vendorRequired": {
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "salesQuotesGetAllResProfit_analysisLine_breakdown": {
      "properties": {
        "description": {
          "type": "string",
          "x-samplevalue": "Crayola Crayons for drawing"
        },
        "profit": {
          "type": "string",
          "x-samplevalue": "10.96"
        },
        "profit_percentage": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "total_cost": {
          "type": "string",
          "x-samplevalue": "490.2779"
        },
        "total_sale": {
          "type": "string",
          "x-samplevalue": "501.24"
        }
      },
      "title": "line_breakdown",
      "type": "object"
    },
    "liveExchangeRatesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/live_exchange_rates/AUD"
        },
        "base_currency": {
          "$ref": "#/definitions/liveExchangeRatesGetAllResBase_currency"
        },
        "currency": {
          "$ref": "#/definitions/liveExchangeRatesGetAllResCurrency"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "USD -> AUD"
        },
        "inverse_rate": {
          "type": "string",
          "x-samplevalue": "0.695803768"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "rate": {
          "type": "string",
          "x-samplevalue": "1.4371868132"
        },
        "retrieved_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-14T20:00:02Z"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-14T00:00:00Z"
        }
      },
      "title": "liveExchangeRatesGetAllRes",
      "type": "object"
    },
    "salesQuotesPostResQuote_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d86edf4741f142c3b7948596336c535f"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesQuotesPostResQuote_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesPostResQuote_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "quote_lines",
      "type": "object"
    },
    "customersGetByIdResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/a849fad445e74b7d8c8bc29142d3d5a0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "a849fad445e74b7d8c8bc29142d3d5a0"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3086676
        }
      },
      "type": "object"
    },
    "bulkDownloadRequest": {
      "properties": {
        "apiLimit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 100
        },
        "continueFromJobId": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "docsHubDetails": {
          "$ref": "#/definitions/bulkDownloadRequestDocsHubDetails"
        },
        "filterDateField": {
          "type": "string",
          "x-samplevalue": "lastModifiedDate"
        },
        "filterNulls": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "format": {
          "enum": [
            "application/json",
            "txt/csv",
            "application/jsonl"
          ],
          "type": "string",
          "x-samplevalue": "application/json"
        },
        "from": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-06T13:22:17-08:00"
        },
        "limit": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 107
        },
        "notificationUrl": {
          "type": "string",
          "x-samplevalue": "https://myreceiver.com/whatever"
        },
        "objectName": {
          "type": "string",
          "x-samplevalue": "accounts"
        },
        "pageSize": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 200
        },
        "query": {
          "$ref": "#/definitions/bulkDownloadRequestQuery"
        },
        "selectFields": {
          "type": "string",
          "x-samplevalue": "a,b,c"
        },
        "to": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2014-10-10T13:22:17-08:00"
        },
        "where": {
          "type": "string",
          "x-samplevalue": "name='Alex' and gender='male'"
        }
      },
      "required": [
        "objectName",
        "format"
      ],
      "title": "bulkDownloadRequest",
      "type": "object"
    },
    "contactsGetByIdResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "ledgerAccountsPostReq": {
      "properties": {
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "cetest"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "gifi_code": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 1000
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "ledger_account_classification_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "name": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "cetest"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 43454
        },
        "non_recoverable_ledger_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "recoverable_percentage": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "required": [
        "included_in_chart",
        "nominal_code",
        "name",
        "ledger_account_type_id",
        "display_name"
      ],
      "type": "object"
    },
    "addressGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/addresses/da7370e54d1611e695ab0ed51759bcc7"
        },
        "address_line_1": {
          "type": "string",
          "x-samplevalue": "14681 Midway dr"
        },
        "address_line_2": {
          "type": "string",
          "x-samplevalue": "A street"
        },
        "address_type": {
          "$ref": "#/definitions/addressGetAllResAddress_type"
        },
        "bank_account": {
          "$ref": "#/definitions/addressGetAllResBank_account"
        },
        "city": {
          "type": "string",
          "x-samplevalue": "Addison"
        },
        "contact": {
          "$ref": "#/definitions/addressGetAllResContact"
        },
        "country": {
          "$ref": "#/definitions/addressGetAllResCountry"
        },
        "country_group": {
          "$ref": "#/definitions/addressGetAllResCountry_group"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da7370e54d1611e695ab0ed51759bcc7",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Main Address"
        },
        "postal_code": {
          "type": "string",
          "x-samplevalue": "75254"
        },
        "region": {
          "type": "string",
          "x-samplevalue": "CA"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-04-20T21:48:15Z"
        }
      },
      "title": "addressGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "purchaseCreditNotesPostResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/633117"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "title": "links",
      "type": "object"
    },
    "invoicesPutResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResContactBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string"
        },
        "account_number": {
          "type": "string"
        },
        "bic": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "sort_code": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "purchaseCreditNotesPostResCredit_note_lines": {
      "properties": {
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d3ad0f7696084dae95bfbacbc85e9a6a"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseCreditNotesPostResCredit_note_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string"
        },
        "pst_amount": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string"
        },
        "tax_rate": {
          "type": "string"
        },
        "tax_recoverable": {
          "type": "string"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "purchaseCreditNotesGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "title": "currency",
      "type": "object"
    },
    "salesQuotesPutReqTax_analysis": {
      "properties": {
        "goods_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "net_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "service_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "total_amount": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        }
      },
      "title": "tax_analysis",
      "type": "object"
    },
    "vendorsPostResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/suppliers/9416189"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "vendorsPutResMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/6dd371275d82432d856134360da45645"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "qwer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "6dd371275d82432d856134360da45645"
        }
      },
      "type": "object"
    },
    "bankAccountsGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/da72e7164d1611e695ab0ed51759bcc7"
        },
        "balance": {
          "type": "string",
          "x-samplevalue": "-78345.1"
        },
        "bank_account_details": {
          "$ref": "#/definitions/bankAccountsGetByIdResBank_account_details"
        },
        "bank_account_type": {
          "$ref": "#/definitions/bankAccountsGetByIdResBank_account_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "default_payment_method": {
          "$ref": "#/definitions/bankAccountsGetByIdResDefault_payment_method"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "checking updated (1010)"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da72e7164d1611e695ab0ed51759bcc7"
        },
        "journal_code": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "ledger_account": {
          "$ref": "#/definitions/bankAccountsGetByIdResLedger_account"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 149284
        },
        "main_address": {
          "$ref": "#/definitions/bankAccountsGetByIdResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/bankAccountsGetByIdResMain_contact_person"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "nominal_code": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T18:45:23Z"
        }
      },
      "title": "bankAccountsGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "ledgerAccountsPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/de23848576d445b09ca7759bb6867012"
        },
        "balance_details": {
          "$ref": "#/definitions/ledgerAccountsPostResBalance_details"
        },
        "cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "control_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-alias": "createdDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:05:51Z"
        },
        "display_formatted": {
          "type": "string",
          "x-samplevalue": "43454 - cetest"
        },
        "display_name": {
          "type": "string",
          "x-samplevalue": "cetest"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "cetest (43454)"
        },
        "fixed_tax_rate": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "gifi_code": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 1000
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "de23848576d445b09ca7759bb6867012"
        },
        "included_in_chart": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_control_account": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "ledger_account_classification": {
          "type": "string"
        },
        "ledger_account_group": {
          "$ref": "#/definitions/ledgerAccountsPostResLedger_account_group"
        },
        "ledger_account_type": {
          "$ref": "#/definitions/ledgerAccountsPostResLedger_account_type"
        },
        "name": {
          "type": "string",
          "x-alias": "accName",
          "x-samplevalue": "cetest"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-alias": "account",
          "x-samplevalue": 43454
        },
        "non_recoverable_ledger_account": {
          "type": "string"
        },
        "recoverable_percentage": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "$ref": "#/definitions/ledgerAccountsPostResTax_rate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:06:11Z"
        },
        "visible_in_banking": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_expenses": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_journals": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_payments": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_other_receipts": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_in_reporting": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "visible_in_sales": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "visible_scopes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-samplevalue": [
            "journals",
            "other_payment",
            "purchasing",
            "reporting"
          ]
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "paymentsPutResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "businessSubscriptions": {
      "properties": {
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:41Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts Extra"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "accounts_extra"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-12-24T01:01:08Z"
        }
      },
      "title": "subscriptions",
      "type": "object"
    },
    "purchaseInvoicesPutResInvoice_lines": {
      "properties": {
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-alias": "lines[*].description",
          "x-samplevalue": "Line 1"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "gst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].id",
          "x-samplevalue": "b95450df98e442a1832843a77abf6d47"
        },
        "is_purchase_for_resale": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "ledger_account": {
          "$ref": "#/definitions/purchaseInvoicesPutResInvoice_linesLedger_account"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "$ref": "#/definitions/purchaseInvoicesPutResInvoice_linesProduct"
        },
        "pst_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "quantity": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].quantity",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].taxAmount",
          "x-samplevalue": 0
        },
        "tax_rate": {
          "type": "string",
          "x-alias": "lines[*].taxRate"
        },
        "tax_recoverable": {
          "type": "string",
          "x-samplevalue": true
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].totalAmount",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "format": "int32",
          "type": "string",
          "x-alias": "lines[*].product.cost",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResMain_addressCountry_group": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/country_groups/ALL"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Other"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ALL"
        }
      },
      "title": "country_group",
      "type": "object"
    },
    "invoicesPostResTransactionOriginCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "type": "object"
    },
    "addressGetAllResCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/countries/US"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "United States (US)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "US"
        }
      },
      "title": "country",
      "type": "object"
    },
    "purchaseInvoicesGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-alias": "currency",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "type": "object"
    },
    "otherPaymentsPutResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/303fe41e4d1b11e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sage partnercloud4"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "303fe41e4d1b11e695ab0ed51759bcc7"
        }
      },
      "title": "contact",
      "type": "object"
    },
    "salesQuotesPutResProfit_analysisTotal": {
      "properties": {
        "description": {
          "type": "string"
        },
        "profit": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "profit_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_cost": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "total_sale": {
          "type": "string",
          "x-samplevalue": "0.0"
        }
      },
      "title": "total",
      "type": "object"
    },
    "customersPutReqBank_account_details": {
      "properties": {
        "account_name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "account_number": {
          "type": "string",
          "x-alias": "account",
          "x-samplevalue": "string"
        },
        "bic": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "iban": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "sort_code": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "servicesGetByIdResSales_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfbe314d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Professional Fees (4000)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "dadfbe314d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 4534860
        }
      },
      "title": "sales_ledger_account",
      "type": "object"
    },
    "contactAllocationsGeetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "productsGetAllResSales_prices": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-alias": "priceList[*].id",
          "x-samplevalue": "e33c471f911049a9aee7a2e673bb697d"
        },
        "price": {
          "format": "int32",
          "type": "string",
          "x-alias": "priceList[*].price",
          "x-samplevalue": "0.0"
        },
        "price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "price_name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "product_sales_price_type": {
          "$ref": "#/definitions/productsGetAllResSales_pricesProduct_sales_price_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T09:34:40Z"
        }
      },
      "type": "object"
    },
    "invoicesPostResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER"
        }
      },
      "type": "object"
    },
    "invoicesGetAllResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "salesCreditNotesPutResDetailed_tax_analysisTax_rates_breakdown": {
      "properties": {
        "base_currency_goods_amount": {
          "type": "string"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_services_amount": {
          "type": "string"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "goods_amount": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "retail_tax_amount": {
          "type": "string"
        },
        "services_amount": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesPutResDetailed_tax_analysisTax_rates_breakdownTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        }
      },
      "title": "tax_rates_breakdown",
      "type": "object"
    },
    "purchaseInvoicesPutResStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-alias": "status",
          "x-samplevalue": "UNPAID"
        }
      },
      "type": "object"
    },
    "swaggerschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact-POST-Response",
          "type": "string"
        }
      }
    },
    "productSalesPriceTypesGetByIdRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "active": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 964764
        },
        "name": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-12T19:18:34Z"
        }
      },
      "title": "productSalesPriceTypesGetByIdRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesCreditNotesPutResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/SALES_CREDIT_NOTE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales Credit Note"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "SALES_CREDIT_NOTE"
        }
      },
      "title": "transaction_type",
      "type": "object"
    },
    "addressGetAllResAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "attachmentsPostResAttachment_context_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/attachment_context_types/PURCHASE_INVOICE"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Purchase Invoice"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PURCHASE_INVOICE"
        }
      },
      "title": "attachment_context_type",
      "type": "object"
    },
    "productsPostResCatalog_item_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/catalog_item_types/PRODUCT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Non-stock"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "PRODUCT"
        }
      },
      "type": "object"
    },
    "paymentsGetByIdResPayment_on_accountStatus": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/artefact_statuses/UNPAID"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Unpaid"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "UNPAID"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        }
      },
      "type": "object"
    },
    "salesCreditNotesPostResContactMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "bankAccountsPostResMain_addressAddress_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/address_types/DELIVERY"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Delivery"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "DELIVERY"
        }
      },
      "title": "address_type",
      "type": "object"
    },
    "transactionsGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/d0e408de4d1f11e695ab0ed51759bcc7"
        },
        "audit_trail_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 1
        },
        "contact": {
          "$ref": "#/definitions/transactionsGetAllResContact"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:42:52Z"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-07-18"
        },
        "deleted": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "d0e408de4d1f11e695ab0ed51759bcc7",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T18:38:43Z"
        },
        "number_of_attachments": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 0
        },
        "origin": {
          "$ref": "#/definitions/transactionsGetAllResOrigin"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "Expensify: 13803892"
        },
        "total": {
          "type": "string",
          "x-samplevalue": "12.0"
        },
        "total_in_transaction_currency": {
          "type": "string",
          "x-samplevalue": "12.0"
        },
        "transaction_type": {
          "$ref": "#/definitions/transactionsGetAllResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-03-19T09:51:22Z"
        }
      },
      "title": "transactionsGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "salesQuoteGetByIdResCurrency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 33
        }
      },
      "title": "currency",
      "type": "object"
    },
    "swaggerparametersschema": {
      "x-has-customfields": false,
      "type": "object",
      "title": "schema",
      "properties": {
        "$ref": {
          "x-samplevalue": "#/definitions/Contact",
          "type": "string"
        }
      }
    },
    "vendorsPostResMain_addressContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/6dd371275d82432d856134360da45645"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "qwer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "6dd371275d82432d856134360da45645"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPostResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/3041826d4d1b11e695ab0ed51759bcc7"
        },
        "address": {
          "$ref": "#/definitions/purchaseInvoicesPostResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/purchaseInvoicesPostResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2016-07-18T19:09:45Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "email": {
          "type": "string",
          "x-samplevalue": "sage.partnercloud4@outlook.com"
        },
        "fax": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "3041826d4d1b11e695ab0ed51759bcc7"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "x-samplevalue": "look"
        },
        "telephone": {
          "type": "string",
          "x-samplevalue": "2145553434"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2019-01-31T01:24:23Z"
        }
      },
      "type": "object"
    },
    "purchaseInvoicesPutResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "type": "object"
    },
    "invoicesPostResInvoice_linesLedger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfc18b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Sales of Materials (4050)"
        },
        "id": {
          "type": "string",
          "x-alias": "lines[*].account",
          "x-samplevalue": "dadfc18b4d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "vendorsGetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/suppliers/9416189"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "bankAccountsGetByIdResDefault_payment_method": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/payment_methods/CHECK"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Check"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CHECK"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 3
        }
      },
      "title": "default_payment_method",
      "type": "object"
    },
    "journalEntriesGetByIdResTransaction": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transactions/aced4300313111e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "JOURNAL001"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "aced4300313111e8a8f11281a7acf536"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 8533042
        }
      },
      "title": "transaction",
      "type": "object"
    },
    "invoicesPutResContactMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/c2a874990b5b11e8a8f11281a7acf536"
        },
        "address": {
          "$ref": "#/definitions/invoicesPutResContactMain_contact_personAddress"
        },
        "contact_person_types": {
          "items": {
            "$ref": "#/definitions/invoicesPutResContactMain_contact_personContact_person_types"
          },
          "type": "array"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "email": {
          "type": "string",
          "x-alias": "customer.contact.email"
        },
        "fax": {
          "type": "string",
          "x-alias": "customer.contact.fax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "c2a874990b5b11e8a8f11281a7acf536"
        },
        "is_main_contact": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "job_title": {
          "type": "string"
        },
        "mobile": {
          "type": "string",
          "x-alias": "customer.contact.mobile"
        },
        "name": {
          "type": "string",
          "x-alias": "customer.contact.firstName",
          "x-samplevalue": "Main Contact"
        },
        "telephone": {
          "type": "string",
          "x-alias": "customer.contact.phone"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2018-02-06T16:35:37Z"
        }
      },
      "type": "object"
    },
    "productsGetByIdResSales_pricesProduct_sales_price_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/product_sales_price_types/daf1323b4d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Updated"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "daf1323b4d1611e695ab0ed51759bcc7"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 964764
        }
      },
      "type": "object"
    },
    "contactAllocationsGeetByIdResLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "links",
      "type": "object"
    },
    "servicesGetAllResUsual_supplier": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/206457900b5c11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "name632 (re897)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "206457900b5c11e8a8f11281a7acf536"
        }
      },
      "title": "usual_supplier",
      "type": "object"
    },
    "purchaseInvoicesPostResContactContact_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/VENDOR"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR"
        }
      },
      "type": "object"
    },
    "invoicesPostReq": {
      "properties": {
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "currency_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/invoicesPostReqDelivery_address"
        },
        "delivery_performance_date": {
          "type": "string",
          "x-alias": "shipDate",
          "x-samplevalue": "string"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/invoicesPostReqInvoice_lines"
          },
          "type": "array"
        },
        "invoice_number": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "invoice_number_prefix": {
          "type": "string",
          "x-samplevalue": "SI-"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesPostReqMain_address"
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "recurring_invoice": {
          "$ref": "#/definitions/invoicesPostReqRecurring_invoice"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingTaxAmount",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingCost",
          "x-samplevalue": "0.0"
        },
        "status_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_address_region_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/invoicesPostReqTax_analysis"
          },
          "type": "array"
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions for invoices"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "discountAmount",
          "x-samplevalue": "10.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "required": [
        "date",
        "contact_id",
        "invoice_lines"
      ],
      "type": "object"
    },
    "vendorsPutReqDelivery_address": {
      "properties": {
        "address_line_1": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "string"
        },
        "address_line_2": {
          "type": "string",
          "x-alias": "shippingAddress.line2",
          "x-samplevalue": "string"
        },
        "address_type_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "bank_account_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "city": {
          "type": "string",
          "x-alias": "shippingAddress.city",
          "x-samplevalue": "string"
        },
        "contact_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_group_id": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "country_id": {
          "type": "string",
          "x-alias": "shippingAddress.country",
          "x-samplevalue": "string"
        },
        "is_main_address": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "name": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "postal_code": {
          "type": "string",
          "x-alias": "shippingAddress.postalCode",
          "x-samplevalue": "string"
        },
        "region": {
          "type": "string",
          "x-alias": "shippingAddress.province",
          "x-samplevalue": "string"
        }
      },
      "type": "object"
    },
    "liveExchangeRatesGetAllResBase_currency": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/currencies/USD"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "US Dollar (USD)"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "USD"
        }
      },
      "title": "base_currency",
      "type": "object"
    },
    "productsGetAllResPurchase_ledger_account": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/ledger_accounts/dadfd6654d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (5000)"
        },
        "id": {
          "type": "string",
          "x-alias": "assetAccount",
          "x-samplevalue": "dadfd6654d1611e695ab0ed51759bcc7"
        }
      },
      "type": "object"
    },
    "invoicesPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/sales_invoices/7538ce11fbed432bbe78398d2455ae95"
        },
        "base_currency_cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "base_currency_total_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "10.0"
        },
        "base_currency_withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "cis_applicable_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "contact": {
          "$ref": "#/definitions/invoicesPostResContact"
        },
        "contact_name": {
          "type": "string",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT"
        },
        "contact_reference": {
          "type": "string",
          "x-samplevalue": "re8pgv"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:38:09Z"
        },
        "currency": {
          "$ref": "#/definitions/invoicesPostResCurrency"
        },
        "date": {
          "format": "date",
          "type": "string",
          "x-alias": "invoiceDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-01-01"
        },
        "delivery_address": {
          "$ref": "#/definitions/invoicesPostResDelivery_address"
        },
        "delivery_address_free_form": {
          "type": "string",
          "x-alias": "shippingAddress.line1",
          "x-samplevalue": "Line 1"
        },
        "delivery_performance_date": {
          "type": "string",
          "x-alias": "shipDate",
          "x-samplevalue": "string"
        },
        "detailed_tax_analysis": {
          "$ref": "#/definitions/invoicesPostResDetailed_tax_analysis"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "due_date": {
          "format": "date",
          "type": "string",
          "x-alias": "dueDate",
          "x-mask": "yyyy-MM-dd",
          "x-samplevalue": "2016-03-19"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-alias": "exchangeRate",
          "x-samplevalue": "1.0"
        },
        "has_cis_labour": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "has_cis_materials": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "id": {
          "type": "string",
          "x-alias": "id",
          "x-samplevalue": "7538ce11fbed432bbe78398d2455ae95"
        },
        "inverse_exchange_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "1.0"
        },
        "invoice_lines": {
          "items": {
            "$ref": "#/definitions/invoicesPostResInvoice_lines"
          },
          "type": "array"
        },
        "invoice_number": {
          "type": "string",
          "x-samplevalue": "SI-1191"
        },
        "invoice_number_prefix": {
          "type": "string",
          "x-samplevalue": "SI-"
        },
        "is_cis": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-alias": "modifiedDate",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "string"
        },
        "last_paid": {
          "type": "string"
        },
        "links": {
          "items": {
            "$ref": "#/definitions/invoicesPostResLinks"
          },
          "type": "array"
        },
        "main_address": {
          "$ref": "#/definitions/invoicesPostResMain_address"
        },
        "main_address_free_form": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "migrated": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "notes": {
          "type": "string",
          "x-alias": "description",
          "x-samplevalue": "string"
        },
        "original_quote_estimate": {
          "type": "string"
        },
        "outstanding_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "payments_allocations_total_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "payments_allocations_total_discount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "reference": {
          "type": "string",
          "x-samplevalue": "INV00012"
        },
        "sent": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "sent_by_email": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "shipping_net_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingTaxAmount",
          "x-samplevalue": "0.0"
        },
        "shipping_tax_rate": {
          "type": "string",
          "x-alias": "shippingTaxRate"
        },
        "shipping_total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "shippingCost",
          "x-samplevalue": "0.0"
        },
        "status": {
          "$ref": "#/definitions/invoicesPostResStatus"
        },
        "tax_address_region": {
          "type": "string"
        },
        "tax_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "taxAmount",
          "x-samplevalue": "0.0"
        },
        "tax_analysis": {
          "items": {
            "$ref": "#/definitions/invoicesPostResTax_analysis"
          },
          "type": "array"
        },
        "tax_calculation_method": {
          "type": "string"
        },
        "tax_reconciled": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "terms_and_conditions": {
          "type": "string",
          "x-samplevalue": "Default terms and conditions for invoices"
        },
        "total_after_cis_deduction": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "total_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "amount",
          "x-samplevalue": "100.0"
        },
        "total_discount_amount": {
          "format": "int32",
          "type": "string",
          "x-alias": "discountAmount",
          "x-samplevalue": "10.0"
        },
        "total_paid": {
          "type": "string",
          "x-alias": "totalAmountPaid",
          "x-samplevalue": "0.0"
        },
        "total_quantity": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "transaction": {
          "$ref": "#/definitions/invoicesPostResTransaction"
        },
        "transaction_type": {
          "$ref": "#/definitions/invoicesPostResTransaction_type"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T07:39:03Z"
        },
        "void_reason": {
          "type": "string",
          "x-samplevalue": "Temporary Reason"
        },
        "withholding_tax_amount": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        },
        "withholding_tax_rate": {
          "format": "int32",
          "type": "string",
          "x-samplevalue": 0
        }
      },
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "purchaseCreditNotesPostResContactMain_contact_personContact_person_types": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_person_types/ACCOUNTS"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Accounts"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "ACCOUNTS"
        }
      },
      "title": "contact_person_types",
      "type": "object"
    },
    "contactTypesGetAllResObject": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_types/CUSTOMER"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Customer"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "CUSTOMER",
          "x-searchable": true,
          "x-searchable-operators": [
            "="
          ]
        }
      },
      "title": "contactTypesGetAllRes",
      "type": "object",
      "x-primary-key": [
        "id"
      ]
    },
    "journalEntriesPostResJournal_linesLedger_accountBalance_details": {
      "properties": {
        "balance": {
          "type": "string",
          "x-samplevalue": "15618.68"
        },
        "credit_or_debit": {
          "type": "string",
          "x-samplevalue": "debit"
        },
        "credits": {
          "type": "string",
          "x-samplevalue": "63557.91"
        },
        "debits": {
          "type": "string",
          "x-samplevalue": "79176.59"
        },
        "from_date": {
          "type": "string"
        },
        "to_date": {
          "type": "string"
        }
      },
      "title": "balance_details",
      "type": "object"
    },
    "invoicesPutResContactLinks": {
      "properties": {
        "href": {
          "type": "string",
          "x-samplevalue": "https://accounting.na.sageone.com/contacts/contacts/3086675"
        },
        "rel": {
          "type": "string",
          "x-samplevalue": "alternate"
        },
        "type": {
          "type": "string",
          "x-samplevalue": "text/html"
        }
      },
      "type": "object"
    },
    "invoicesGetAllResContact": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contacts/c2a5b1070b5b11e8a8f11281a7acf536"
        },
        "displayed_as": {
          "type": "string",
          "x-alias": "customer.name",
          "x-samplevalue": "DO NOT DELETE - CHURROS ACCT (re8pgv)"
        },
        "id": {
          "type": "string",
          "x-alias": "customer.id",
          "x-samplevalue": "c2a5b1070b5b11e8a8f11281a7acf536"
        }
      },
      "type": "object"
    },
    "paymentsGetByIdResTransaction_type": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/transaction_types/VENDOR_PAYMENT"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Vendor Payment"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "VENDOR_PAYMENT"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 24
        }
      },
      "type": "object"
    },
    "vendorsGetByIdResMain_contact_person": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/contact_persons/0d9d5d9183114e31ab1215d6857a02ba"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Main Contact"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "0d9d5d9183114e31ab1215d6857a02ba"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 633118
        }
      },
      "type": "object"
    },
    "bankAccountsPostRes": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/bank_accounts/925edbb6e29d4930a9211808ec04dad3"
        },
        "balance": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "bank_account_details": {
          "$ref": "#/definitions/bankAccountsPostResBank_account_details"
        },
        "bank_account_type": {
          "$ref": "#/definitions/bankAccountsPostResBank_account_type"
        },
        "created_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:02:50Z"
        },
        "default_payment_method": {
          "$ref": "#/definitions/bankAccountsPostResDefault_payment_method"
        },
        "deletable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Checking (15650)"
        },
        "editable": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "gifi_code": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "925edbb6e29d4930a9211808ec04dad3"
        },
        "journal_code": {
          "type": "string"
        },
        "lastModifiedDate": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ss.SSSXXX",
          "x-samplevalue": "2020-07-15T04:45:00.241Z"
        },
        "ledger_account": {
          "$ref": "#/definitions/bankAccountsPostResLedger_account"
        },
        "main_address": {
          "$ref": "#/definitions/bankAccountsPostResMain_address"
        },
        "main_contact_person": {
          "$ref": "#/definitions/bankAccountsPostResMain_contact_person"
        },
        "nominal_code": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 15650
        },
        "updated_at": {
          "format": "date-time",
          "type": "string",
          "x-mask": "yyyy-MM-dd'T'HH:mm:ssZ",
          "x-samplevalue": "2020-07-15T05:02:50Z"
        }
      },
      "title": "bankAccountsPostRes",
      "x-primary-key": [
        "id"
      ],
      "type": "object"
    },
    "salesQuotesPostResQuote_linesTax_rate": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "/tax_rates/da8391e24d1611e695ab0ed51759bcc7"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "No Tax"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "da8391e24d1611e695ab0ed51759bcc7"
        }
      },
      "title": "tax_rate",
      "type": "object"
    },
    "salesQuotesPutResQuote_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "9d377320437f493abb5c68e9642f3cf9"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesQuotesPutResQuote_linesLedger_account"
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesQuotesPutResQuote_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "110.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "55.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "quote_lines",
      "type": "object"
    },
    "contactsGetAllResTax_treatment": {
      "properties": {
        "eu_not_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "eu_tax_registered": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "home_tax": {
          "type": "boolean",
          "x-samplevalue": true
        },
        "is_importer": {
          "type": "string"
        },
        "rest_of_world_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "tax_treatment",
      "type": "object"
    },
    "salesCreditNotesGetByIdResCredit_note_lines": {
      "properties": {
        "base_currency_discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "base_currency_total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "base_currency_unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "description": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "discount_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "discount_percentage": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "Line 1"
        },
        "eu_goods_services_type": {
          "type": "string"
        },
        "eu_sales_description": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "50435e23313411e8a8f11281a7acf536"
        },
        "ledger_account": {
          "$ref": "#/definitions/salesCreditNotesGetByIdResCredit_note_linesLedger_account"
        },
        "legacy_id": {
          "format": "int32",
          "type": "integer",
          "x-samplevalue": 2062234
        },
        "net_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "product": {
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "x-samplevalue": "2.0"
        },
        "service": {
          "type": "string"
        },
        "tax_amount": {
          "type": "string",
          "x-samplevalue": "0.0"
        },
        "tax_rate": {
          "$ref": "#/definitions/salesCreditNotesGetByIdResCredit_note_linesTax_rate"
        },
        "total_amount": {
          "type": "string",
          "x-samplevalue": "100.0"
        },
        "trade_of_asset": {
          "type": "boolean",
          "x-samplevalue": false
        },
        "unit_price": {
          "type": "string",
          "x-samplevalue": "50.0"
        },
        "unit_price_includes_tax": {
          "type": "boolean",
          "x-samplevalue": false
        }
      },
      "title": "credit_note_lines",
      "type": "object"
    },
    "taxCodesGetAllResCountry": {
      "properties": {
        "$path": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "displayed_as": {
          "type": "string",
          "x-samplevalue": "string"
        },
        "id": {
          "type": "string",
          "x-samplevalue": "string"
        }
      },
      "title": "country",
      "type": "object"
    }
  },
  "swagger": "2.0",
  "info": {
    "x-element-name": "Sage Accounting",
    "x-element-hub": "finance",
    "x-element-key": "sageone",
    "title": "sageone",
    "x-element-id": 5358,
    "version": "api-v2",
    "description": "Add a Sage Accounting Instance to connect your existing Sage Accounting account to the Finance Hub, allowing you manage your customers, employees, invoices, etc. across multiple Finance Elements. You will need your Sage Accounting account information to add an instance."
  },
  "tags": [
    {
      "name": "Address Regions"
    },
    {
      "name": "Address Types"
    },
    {
      "name": "Addresses"
    },
    {
      "name": "Artefact Statuses"
    },
    {
      "name": "Attachments"
    },
    {
      "name": "Bank Account Types"
    },
    {
      "name": "Bank Accounts"
    },
    {
      "name": "Bulk"
    },
    {
      "name": "Business"
    },
    {
      "name": "Businesses"
    },
    {
      "name": "Companies"
    },
    {
      "name": "Contact Allocations"
    },
    {
      "name": "Contact Person Types"
    },
    {
      "name": "Contact Persons"
    },
    {
      "name": "Contact Types"
    },
    {
      "name": "Contacts"
    },
    {
      "name": "Countries"
    },
    {
      "name": "Country Groups"
    },
    {
      "name": "Currencies"
    },
    {
      "name": "Customers"
    },
    {
      "name": "Financial Settings"
    },
    {
      "name": "Invoice Settings"
    },
    {
      "name": "Invoices"
    },
    {
      "name": "Journal Entries"
    },
    {
      "name": "Ledger Accounts"
    },
    {
      "name": "Ledger Entries"
    },
    {
      "name": "Live Exchange Rates"
    },
    {
      "name": "Me"
    },
    {
      "name": "Object Name"
    },
    {
      "name": "Objects"
    },
    {
      "name": "Other Payments"
    },
    {
      "name": "Payment Methods"
    },
    {
      "name": "Payments"
    },
    {
      "name": "Ping"
    },
    {
      "name": "Product Sales Price Types"
    },
    {
      "name": "Products"
    },
    {
      "name": "Purchase Credit Notes"
    },
    {
      "name": "Purchase Invoices"
    },
    {
      "name": "Sales Credit Notes"
    },
    {
      "name": "Sales Quotes"
    },
    {
      "name": "Services"
    },
    {
      "name": "Tax Codes"
    },
    {
      "name": "Tax Profiles"
    },
    {
      "name": "Tax Rates"
    },
    {
      "name": "Transactions"
    },
    {
      "name": "Vendors"
    }
  ],
  "x-sap-api-type": "REST",
  "x-sap-shortText": "Business management software subscription-based product",
  "externalDocs": {
    "description": "SAP Open Connectors Documentation",
    "url": "https://help.openconnectors.ext.hana.ondemand.com/home/sageone"
  }
}